
output:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 9f 00 00 	mov    0x9fdd(%rip),%rax        # afe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 9f 00 00    	pushq  0x9fe2(%rip)        # b008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 9f 00 00    	jmpq   *0x9fe4(%rip)        # b010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 9f 00 00    	jmpq   *0x9fe2(%rip)        # b018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <recv@plt>:
    1040:	ff 25 da 9f 00 00    	jmpq   *0x9fda(%rip)        # b020 <recv@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <pthread_create@plt>:
    1050:	ff 25 d2 9f 00 00    	jmpq   *0x9fd2(%rip)        # b028 <pthread_create@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <__errno_location@plt>:
    1060:	ff 25 ca 9f 00 00    	jmpq   *0x9fca(%rip)        # b030 <__errno_location@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <puts@plt>:
    1070:	ff 25 c2 9f 00 00    	jmpq   *0x9fc2(%rip)        # b038 <puts@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <pthread_cancel@plt>:
    1080:	ff 25 ba 9f 00 00    	jmpq   *0x9fba(%rip)        # b040 <pthread_cancel@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <sigaction@plt>:
    1090:	ff 25 b2 9f 00 00    	jmpq   *0x9fb2(%rip)        # b048 <sigaction@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <setsockopt@plt>:
    10a0:	ff 25 aa 9f 00 00    	jmpq   *0x9faa(%rip)        # b050 <setsockopt@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <shutdown@plt>:
    10b0:	ff 25 a2 9f 00 00    	jmpq   *0x9fa2(%rip)        # b058 <shutdown@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <strlen@plt>:
    10c0:	ff 25 9a 9f 00 00    	jmpq   *0x9f9a(%rip)        # b060 <strlen@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <openat@plt>:
    10d0:	ff 25 92 9f 00 00    	jmpq   *0x9f92(%rip)        # b068 <openat@GLIBC_2.4>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <mmap@plt>:
    10e0:	ff 25 8a 9f 00 00    	jmpq   *0x9f8a(%rip)        # b070 <mmap@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <accept4@plt>:
    10f0:	ff 25 82 9f 00 00    	jmpq   *0x9f82(%rip)        # b078 <accept4@GLIBC_2.10>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <htons@plt>:
    1100:	ff 25 7a 9f 00 00    	jmpq   *0x9f7a(%rip)        # b080 <htons@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <send@plt>:
    1110:	ff 25 72 9f 00 00    	jmpq   *0x9f72(%rip)        # b088 <send@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <printf@plt>:
    1120:	ff 25 6a 9f 00 00    	jmpq   *0x9f6a(%rip)        # b090 <printf@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

0000000000001130 <memset@plt>:
    1130:	ff 25 62 9f 00 00    	jmpq   *0x9f62(%rip)        # b098 <memset@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	pushq  $0x10
    113b:	e9 e0 fe ff ff       	jmpq   1020 <.plt>

0000000000001140 <ioctl@plt>:
    1140:	ff 25 5a 9f 00 00    	jmpq   *0x9f5a(%rip)        # b0a0 <ioctl@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	pushq  $0x11
    114b:	e9 d0 fe ff ff       	jmpq   1020 <.plt>

0000000000001150 <close@plt>:
    1150:	ff 25 52 9f 00 00    	jmpq   *0x9f52(%rip)        # b0a8 <close@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	pushq  $0x12
    115b:	e9 c0 fe ff ff       	jmpq   1020 <.plt>

0000000000001160 <epoll_ctl@plt>:
    1160:	ff 25 4a 9f 00 00    	jmpq   *0x9f4a(%rip)        # b0b0 <epoll_ctl@GLIBC_2.3.2>
    1166:	68 13 00 00 00       	pushq  $0x13
    116b:	e9 b0 fe ff ff       	jmpq   1020 <.plt>

0000000000001170 <memcmp@plt>:
    1170:	ff 25 42 9f 00 00    	jmpq   *0x9f42(%rip)        # b0b8 <memcmp@GLIBC_2.2.5>
    1176:	68 14 00 00 00       	pushq  $0x14
    117b:	e9 a0 fe ff ff       	jmpq   1020 <.plt>

0000000000001180 <fprintf@plt>:
    1180:	ff 25 3a 9f 00 00    	jmpq   *0x9f3a(%rip)        # b0c0 <fprintf@GLIBC_2.2.5>
    1186:	68 15 00 00 00       	pushq  $0x15
    118b:	e9 90 fe ff ff       	jmpq   1020 <.plt>

0000000000001190 <memcpy@plt>:
    1190:	ff 25 32 9f 00 00    	jmpq   *0x9f32(%rip)        # b0c8 <memcpy@GLIBC_2.14>
    1196:	68 16 00 00 00       	pushq  $0x16
    119b:	e9 80 fe ff ff       	jmpq   1020 <.plt>

00000000000011a0 <pthread_exit@plt>:
    11a0:	ff 25 2a 9f 00 00    	jmpq   *0x9f2a(%rip)        # b0d0 <pthread_exit@GLIBC_2.2.5>
    11a6:	68 17 00 00 00       	pushq  $0x17
    11ab:	e9 70 fe ff ff       	jmpq   1020 <.plt>

00000000000011b0 <malloc@plt>:
    11b0:	ff 25 22 9f 00 00    	jmpq   *0x9f22(%rip)        # b0d8 <malloc@GLIBC_2.2.5>
    11b6:	68 18 00 00 00       	pushq  $0x18
    11bb:	e9 60 fe ff ff       	jmpq   1020 <.plt>

00000000000011c0 <__fxstat@plt>:
    11c0:	ff 25 1a 9f 00 00    	jmpq   *0x9f1a(%rip)        # b0e0 <__fxstat@GLIBC_2.2.5>
    11c6:	68 19 00 00 00       	pushq  $0x19
    11cb:	e9 50 fe ff ff       	jmpq   1020 <.plt>

00000000000011d0 <listen@plt>:
    11d0:	ff 25 12 9f 00 00    	jmpq   *0x9f12(%rip)        # b0e8 <listen@GLIBC_2.2.5>
    11d6:	68 1a 00 00 00       	pushq  $0x1a
    11db:	e9 40 fe ff ff       	jmpq   1020 <.plt>

00000000000011e0 <epoll_wait@plt>:
    11e0:	ff 25 0a 9f 00 00    	jmpq   *0x9f0a(%rip)        # b0f0 <epoll_wait@GLIBC_2.3.2>
    11e6:	68 1b 00 00 00       	pushq  $0x1b
    11eb:	e9 30 fe ff ff       	jmpq   1020 <.plt>

00000000000011f0 <bind@plt>:
    11f0:	ff 25 02 9f 00 00    	jmpq   *0x9f02(%rip)        # b0f8 <bind@GLIBC_2.2.5>
    11f6:	68 1c 00 00 00       	pushq  $0x1c
    11fb:	e9 20 fe ff ff       	jmpq   1020 <.plt>

0000000000001200 <open@plt>:
    1200:	ff 25 fa 9e 00 00    	jmpq   *0x9efa(%rip)        # b100 <open@GLIBC_2.2.5>
    1206:	68 1d 00 00 00       	pushq  $0x1d
    120b:	e9 10 fe ff ff       	jmpq   1020 <.plt>

0000000000001210 <perror@plt>:
    1210:	ff 25 f2 9e 00 00    	jmpq   *0x9ef2(%rip)        # b108 <perror@GLIBC_2.2.5>
    1216:	68 1e 00 00 00       	pushq  $0x1e
    121b:	e9 00 fe ff ff       	jmpq   1020 <.plt>

0000000000001220 <sprintf@plt>:
    1220:	ff 25 ea 9e 00 00    	jmpq   *0x9eea(%rip)        # b110 <sprintf@GLIBC_2.2.5>
    1226:	68 1f 00 00 00       	pushq  $0x1f
    122b:	e9 f0 fd ff ff       	jmpq   1020 <.plt>

0000000000001230 <exit@plt>:
    1230:	ff 25 e2 9e 00 00    	jmpq   *0x9ee2(%rip)        # b118 <exit@GLIBC_2.2.5>
    1236:	68 20 00 00 00       	pushq  $0x20
    123b:	e9 e0 fd ff ff       	jmpq   1020 <.plt>

0000000000001240 <strerror@plt>:
    1240:	ff 25 da 9e 00 00    	jmpq   *0x9eda(%rip)        # b120 <strerror@GLIBC_2.2.5>
    1246:	68 21 00 00 00       	pushq  $0x21
    124b:	e9 d0 fd ff ff       	jmpq   1020 <.plt>

0000000000001250 <sleep@plt>:
    1250:	ff 25 d2 9e 00 00    	jmpq   *0x9ed2(%rip)        # b128 <sleep@GLIBC_2.2.5>
    1256:	68 22 00 00 00       	pushq  $0x22
    125b:	e9 c0 fd ff ff       	jmpq   1020 <.plt>

0000000000001260 <epoll_create1@plt>:
    1260:	ff 25 ca 9e 00 00    	jmpq   *0x9eca(%rip)        # b130 <epoll_create1@GLIBC_2.9>
    1266:	68 23 00 00 00       	pushq  $0x23
    126b:	e9 b0 fd ff ff       	jmpq   1020 <.plt>

0000000000001270 <socket@plt>:
    1270:	ff 25 c2 9e 00 00    	jmpq   *0x9ec2(%rip)        # b138 <socket@GLIBC_2.2.5>
    1276:	68 24 00 00 00       	pushq  $0x24
    127b:	e9 a0 fd ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001280 <__cxa_finalize@plt>:
    1280:	ff 25 72 9d 00 00    	jmpq   *0x9d72(%rip)        # aff8 <__cxa_finalize@GLIBC_2.2.5>
    1286:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001290 <_start>:
    1290:	31 ed                	xor    %ebp,%ebp
    1292:	49 89 d1             	mov    %rdx,%r9
    1295:	5e                   	pop    %rsi
    1296:	48 89 e2             	mov    %rsp,%rdx
    1299:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    129d:	50                   	push   %rax
    129e:	54                   	push   %rsp
    129f:	4c 8d 05 ea 6c 00 00 	lea    0x6cea(%rip),%r8        # 7f90 <__libc_csu_fini>
    12a6:	48 8d 0d 83 6c 00 00 	lea    0x6c83(%rip),%rcx        # 7f30 <__libc_csu_init>
    12ad:	48 8d 3d 71 0a 00 00 	lea    0xa71(%rip),%rdi        # 1d25 <main>
    12b4:	ff 15 26 9d 00 00    	callq  *0x9d26(%rip)        # afe0 <__libc_start_main@GLIBC_2.2.5>
    12ba:	f4                   	hlt    
    12bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012c0 <deregister_tm_clones>:
    12c0:	48 8d 3d 99 9f 00 00 	lea    0x9f99(%rip),%rdi        # b260 <stderr@@GLIBC_2.2.5>
    12c7:	48 8d 05 92 9f 00 00 	lea    0x9f92(%rip),%rax        # b260 <stderr@@GLIBC_2.2.5>
    12ce:	48 39 f8             	cmp    %rdi,%rax
    12d1:	74 15                	je     12e8 <deregister_tm_clones+0x28>
    12d3:	48 8b 05 fe 9c 00 00 	mov    0x9cfe(%rip),%rax        # afd8 <_ITM_deregisterTMCloneTable>
    12da:	48 85 c0             	test   %rax,%rax
    12dd:	74 09                	je     12e8 <deregister_tm_clones+0x28>
    12df:	ff e0                	jmpq   *%rax
    12e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12e8:	c3                   	retq   
    12e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012f0 <register_tm_clones>:
    12f0:	48 8d 3d 69 9f 00 00 	lea    0x9f69(%rip),%rdi        # b260 <stderr@@GLIBC_2.2.5>
    12f7:	48 8d 35 62 9f 00 00 	lea    0x9f62(%rip),%rsi        # b260 <stderr@@GLIBC_2.2.5>
    12fe:	48 29 fe             	sub    %rdi,%rsi
    1301:	48 89 f0             	mov    %rsi,%rax
    1304:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1308:	48 c1 f8 03          	sar    $0x3,%rax
    130c:	48 01 c6             	add    %rax,%rsi
    130f:	48 d1 fe             	sar    %rsi
    1312:	74 14                	je     1328 <register_tm_clones+0x38>
    1314:	48 8b 05 d5 9c 00 00 	mov    0x9cd5(%rip),%rax        # aff0 <_ITM_registerTMCloneTable>
    131b:	48 85 c0             	test   %rax,%rax
    131e:	74 08                	je     1328 <register_tm_clones+0x38>
    1320:	ff e0                	jmpq   *%rax
    1322:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1328:	c3                   	retq   
    1329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001330 <__do_global_dtors_aux>:
    1330:	80 3d 31 9f 00 00 00 	cmpb   $0x0,0x9f31(%rip)        # b268 <completed.0>
    1337:	75 2f                	jne    1368 <__do_global_dtors_aux+0x38>
    1339:	55                   	push   %rbp
    133a:	48 83 3d b6 9c 00 00 	cmpq   $0x0,0x9cb6(%rip)        # aff8 <__cxa_finalize@GLIBC_2.2.5>
    1341:	00 
    1342:	48 89 e5             	mov    %rsp,%rbp
    1345:	74 0c                	je     1353 <__do_global_dtors_aux+0x23>
    1347:	48 8b 3d fa 9d 00 00 	mov    0x9dfa(%rip),%rdi        # b148 <__dso_handle>
    134e:	e8 2d ff ff ff       	callq  1280 <__cxa_finalize@plt>
    1353:	e8 68 ff ff ff       	callq  12c0 <deregister_tm_clones>
    1358:	c6 05 09 9f 00 00 01 	movb   $0x1,0x9f09(%rip)        # b268 <completed.0>
    135f:	5d                   	pop    %rbp
    1360:	c3                   	retq   
    1361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1368:	c3                   	retq   
    1369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001370 <frame_dummy>:
    1370:	e9 7b ff ff ff       	jmpq   12f0 <register_tm_clones>

0000000000001375 <RetrieveFile>:
    1375:	55                   	push   %rbp
    1376:	48 89 e5             	mov    %rsp,%rbp
    1379:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1380:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    1387:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    138e:	89 95 3c ff ff ff    	mov    %edx,-0xc4(%rbp)
    1394:	8b 05 e6 9f 00 00    	mov    0x9fe6(%rip),%eax        # b380 <acc_count>
    139a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    139d:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
    13a4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    13ab:	ba 00 00 00 00       	mov    $0x0,%edx
    13b0:	48 89 ce             	mov    %rcx,%rsi
    13b3:	48 89 c7             	mov    %rax,%rdi
    13b6:	e8 e7 2f 00 00       	callq  43a2 <XXH64>
    13bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13bf:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    13c6:	eb 65                	jmp    142d <RetrieveFile+0xb8>
    13c8:	8b 45 f8             	mov    -0x8(%rbp),%eax
    13cb:	48 98                	cltq   
    13cd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    13d4:	00 
    13d5:	48 8d 05 24 9f 00 00 	lea    0x9f24(%rip),%rax        # b300 <key>
    13dc:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    13e0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    13e4:	0f 84 c2 01 00 00    	je     15ac <RetrieveFile+0x237>
    13ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
    13ed:	48 98                	cltq   
    13ef:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    13f6:	00 
    13f7:	48 8d 05 82 9f 00 00 	lea    0x9f82(%rip),%rax        # b380 <acc_count>
    13fe:	8b 14 02             	mov    (%rdx,%rax,1),%edx
    1401:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1404:	48 98                	cltq   
    1406:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    140d:	00 
    140e:	48 8d 05 6b 9f 00 00 	lea    0x9f6b(%rip),%rax        # b380 <acc_count>
    1415:	8b 04 01             	mov    (%rcx,%rax,1),%eax
    1418:	39 c2                	cmp    %eax,%edx
    141a:	0f 9c c0             	setl   %al
    141d:	0f b6 c0             	movzbl %al,%eax
    1420:	8b 55 f8             	mov    -0x8(%rbp),%edx
    1423:	0f af c2             	imul   %edx,%eax
    1426:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1429:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    142d:	8b 05 89 9f 00 00    	mov    0x9f89(%rip),%eax        # b3bc <arr_len>
    1433:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    1436:	7c 90                	jl     13c8 <RetrieveFile+0x53>
    1438:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    143f:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    1445:	ba 00 00 00 00       	mov    $0x0,%edx
    144a:	48 89 ce             	mov    %rcx,%rsi
    144d:	89 c7                	mov    %eax,%edi
    144f:	b8 00 00 00 00       	mov    $0x0,%eax
    1454:	e8 77 fc ff ff       	callq  10d0 <openat@plt>
    1459:	89 45 ec             	mov    %eax,-0x14(%rbp)
    145c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
    1460:	75 16                	jne    1478 <RetrieveFile+0x103>
    1462:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1465:	89 c7                	mov    %eax,%edi
    1467:	e8 e4 fc ff ff       	callq  1150 <close@plt>
    146c:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    1473:	e9 7e 01 00 00       	jmpq   15f6 <RetrieveFile+0x281>
    1478:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    147f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1482:	48 89 d6             	mov    %rdx,%rsi
    1485:	89 c7                	mov    %eax,%edi
    1487:	e8 14 6b 00 00       	callq  7fa0 <__fstat>
    148c:	85 c0                	test   %eax,%eax
    148e:	74 16                	je     14a6 <RetrieveFile+0x131>
    1490:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1493:	89 c7                	mov    %eax,%edi
    1495:	e8 b6 fc ff ff       	callq  1150 <close@plt>
    149a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    14a1:	e9 50 01 00 00       	jmpq   15f6 <RetrieveFile+0x281>
    14a6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    14aa:	89 c2                	mov    %eax,%edx
    14ac:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    14b3:	89 10                	mov    %edx,(%rax)
    14b5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    14b9:	48 89 c6             	mov    %rax,%rsi
    14bc:	8b 45 ec             	mov    -0x14(%rbp),%eax
    14bf:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    14c5:	41 89 c0             	mov    %eax,%r8d
    14c8:	b9 02 00 00 00       	mov    $0x2,%ecx
    14cd:	ba 01 00 00 00       	mov    $0x1,%edx
    14d2:	bf 00 00 00 00       	mov    $0x0,%edi
    14d7:	e8 04 fc ff ff       	callq  10e0 <mmap@plt>
    14dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14e0:	48 83 7d e0 ff       	cmpq   $0xffffffffffffffff,-0x20(%rbp)
    14e5:	75 42                	jne    1529 <RetrieveFile+0x1b4>
    14e7:	e8 74 fb ff ff       	callq  1060 <__errno_location@plt>
    14ec:	8b 00                	mov    (%rax),%eax
    14ee:	89 c7                	mov    %eax,%edi
    14f0:	e8 4b fd ff ff       	callq  1240 <strerror@plt>
    14f5:	48 89 c2             	mov    %rax,%rdx
    14f8:	48 8b 05 61 9d 00 00 	mov    0x9d61(%rip),%rax        # b260 <stderr@@GLIBC_2.2.5>
    14ff:	48 8d 35 02 6b 00 00 	lea    0x6b02(%rip),%rsi        # 8008 <_IO_stdin_used+0x8>
    1506:	48 89 c7             	mov    %rax,%rdi
    1509:	b8 00 00 00 00       	mov    $0x0,%eax
    150e:	e8 6d fc ff ff       	callq  1180 <fprintf@plt>
    1513:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1516:	89 c7                	mov    %eax,%edi
    1518:	e8 33 fc ff ff       	callq  1150 <close@plt>
    151d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    1524:	e9 cd 00 00 00       	jmpq   15f6 <RetrieveFile+0x281>
    1529:	8b 45 ec             	mov    -0x14(%rbp),%eax
    152c:	89 c7                	mov    %eax,%edi
    152e:	e8 1d fc ff ff       	callq  1150 <close@plt>
    1533:	8b 05 83 9e 00 00    	mov    0x9e83(%rip),%eax        # b3bc <arr_len>
    1539:	83 f8 0e             	cmp    $0xe,%eax
    153c:	7f 15                	jg     1553 <RetrieveFile+0x1de>
    153e:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1541:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1544:	8b 05 72 9e 00 00    	mov    0x9e72(%rip),%eax        # b3bc <arr_len>
    154a:	83 c0 01             	add    $0x1,%eax
    154d:	89 05 69 9e 00 00    	mov    %eax,0x9e69(%rip)        # b3bc <arr_len>
    1553:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1556:	48 98                	cltq   
    1558:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    155f:	00 
    1560:	48 8d 15 99 9d 00 00 	lea    0x9d99(%rip),%rdx        # b300 <key>
    1567:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    156b:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
    156f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1572:	48 98                	cltq   
    1574:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    157b:	00 
    157c:	48 8d 15 fd 9c 00 00 	lea    0x9cfd(%rip),%rdx        # b280 <cache>
    1583:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1587:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
    158b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    158e:	48 98                	cltq   
    1590:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1597:	00 
    1598:	48 8d 05 e1 9d 00 00 	lea    0x9de1(%rip),%rax        # b380 <acc_count>
    159f:	c7 04 02 01 00 00 00 	movl   $0x1,(%rdx,%rax,1)
    15a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15aa:	eb 4a                	jmp    15f6 <RetrieveFile+0x281>
    15ac:	90                   	nop
    15ad:	8b 45 f8             	mov    -0x8(%rbp),%eax
    15b0:	48 98                	cltq   
    15b2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    15b9:	00 
    15ba:	48 8d 05 bf 9d 00 00 	lea    0x9dbf(%rip),%rax        # b380 <acc_count>
    15c1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    15c4:	8d 48 01             	lea    0x1(%rax),%ecx
    15c7:	8b 45 f8             	mov    -0x8(%rbp),%eax
    15ca:	48 98                	cltq   
    15cc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    15d3:	00 
    15d4:	48 8d 05 a5 9d 00 00 	lea    0x9da5(%rip),%rax        # b380 <acc_count>
    15db:	89 0c 02             	mov    %ecx,(%rdx,%rax,1)
    15de:	8b 45 f8             	mov    -0x8(%rbp),%eax
    15e1:	48 98                	cltq   
    15e3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    15ea:	00 
    15eb:	48 8d 05 8e 9c 00 00 	lea    0x9c8e(%rip),%rax        # b280 <cache>
    15f2:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    15f6:	c9                   	leaveq 
    15f7:	c3                   	retq   

00000000000015f8 <siginthandler>:
    15f8:	55                   	push   %rbp
    15f9:	48 89 e5             	mov    %rsp,%rbp
    15fc:	48 83 ec 20          	sub    $0x20,%rsp
    1600:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1603:	48 8d 3d 1e 6a 00 00 	lea    0x6a1e(%rip),%rdi        # 8028 <_IO_stdin_used+0x28>
    160a:	e8 61 fa ff ff       	callq  1070 <puts@plt>
    160f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1616:	eb 43                	jmp    165b <siginthandler+0x63>
    1618:	8b 45 fc             	mov    -0x4(%rbp),%eax
    161b:	48 98                	cltq   
    161d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1624:	00 
    1625:	48 8d 05 9c 9d 00 00 	lea    0x9d9c(%rip),%rax        # b3c8 <listeners>
    162c:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1630:	89 c7                	mov    %eax,%edi
    1632:	e8 19 fb ff ff       	callq  1150 <close@plt>
    1637:	8b 45 fc             	mov    -0x4(%rbp),%eax
    163a:	48 98                	cltq   
    163c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1643:	00 
    1644:	48 8d 05 85 9d 00 00 	lea    0x9d85(%rip),%rax        # b3d0 <workers>
    164b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    164f:	48 89 c7             	mov    %rax,%rdi
    1652:	e8 29 fa ff ff       	callq  1080 <pthread_cancel@plt>
    1657:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    165b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    165f:	7e b7                	jle    1618 <siginthandler+0x20>
    1661:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    1666:	e8 c5 fb ff ff       	callq  1230 <exit@plt>

000000000000166b <worker_proc>:
    166b:	55                   	push   %rbp
    166c:	48 89 e5             	mov    %rsp,%rbp
    166f:	48 81 ec d0 e8 01 00 	sub    $0x1e8d0,%rsp
    1676:	48 89 bd 38 17 fe ff 	mov    %rdi,-0x1e8c8(%rbp)
    167d:	bf 00 00 00 00       	mov    $0x0,%edi
    1682:	e8 d9 fb ff ff       	callq  1260 <epoll_create1@plt>
    1687:	89 45 f8             	mov    %eax,-0x8(%rbp)
    168a:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
    168e:	75 36                	jne    16c6 <worker_proc+0x5b>
    1690:	e8 cb f9 ff ff       	callq  1060 <__errno_location@plt>
    1695:	8b 00                	mov    (%rax),%eax
    1697:	89 c7                	mov    %eax,%edi
    1699:	e8 a2 fb ff ff       	callq  1240 <strerror@plt>
    169e:	48 89 c2             	mov    %rax,%rdx
    16a1:	48 8b 05 b8 9b 00 00 	mov    0x9bb8(%rip),%rax        # b260 <stderr@@GLIBC_2.2.5>
    16a8:	48 8d 35 89 69 00 00 	lea    0x6989(%rip),%rsi        # 8038 <_IO_stdin_used+0x38>
    16af:	48 89 c7             	mov    %rax,%rdi
    16b2:	b8 00 00 00 00       	mov    $0x0,%eax
    16b7:	e8 c4 fa ff ff       	callq  1180 <fprintf@plt>
    16bc:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    16c1:	e8 6a fb ff ff       	callq  1230 <exit@plt>
    16c6:	48 c7 85 04 2b fe ff 	movq   $0x0,-0x1d4fc(%rbp)
    16cd:	00 00 00 00 
    16d1:	c7 85 0c 2b fe ff 00 	movl   $0x0,-0x1d4f4(%rbp)
    16d8:	00 00 00 
    16db:	c7 85 04 2b fe ff 01 	movl   $0x80000001,-0x1d4fc(%rbp)
    16e2:	00 00 80 
    16e5:	48 8b 85 38 17 fe ff 	mov    -0x1e8c8(%rbp),%rax
    16ec:	89 85 08 2b fe ff    	mov    %eax,-0x1d4f8(%rbp)
    16f2:	48 8b 85 38 17 fe ff 	mov    -0x1e8c8(%rbp),%rax
    16f9:	89 c6                	mov    %eax,%esi
    16fb:	48 8d 95 04 2b fe ff 	lea    -0x1d4fc(%rbp),%rdx
    1702:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1705:	48 89 d1             	mov    %rdx,%rcx
    1708:	89 f2                	mov    %esi,%edx
    170a:	be 01 00 00 00       	mov    $0x1,%esi
    170f:	89 c7                	mov    %eax,%edi
    1711:	e8 4a fa ff ff       	callq  1160 <epoll_ctl@plt>
    1716:	c7 85 e4 2a fe ff 10 	movl   $0x10,-0x1d51c(%rbp)
    171d:	00 00 00 
    1720:	48 8d b5 10 2b fe ff 	lea    -0x1d4f0(%rbp),%rsi
    1727:	8b 45 f8             	mov    -0x8(%rbp),%eax
    172a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    172f:	ba 10 27 00 00       	mov    $0x2710,%edx
    1734:	89 c7                	mov    %eax,%edi
    1736:	e8 a5 fa ff ff       	callq  11e0 <epoll_wait@plt>
    173b:	89 45 f4             	mov    %eax,-0xc(%rbp)
    173e:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
    1742:	75 17                	jne    175b <worker_proc+0xf0>
    1744:	48 8d 3d 1d 69 00 00 	lea    0x691d(%rip),%rdi        # 8068 <_IO_stdin_used+0x68>
    174b:	e8 c0 fa ff ff       	callq  1210 <perror@plt>
    1750:	90                   	nop
    1751:	bf 00 00 00 00       	mov    $0x0,%edi
    1756:	e8 45 fa ff ff       	callq  11a0 <pthread_exit@plt>
    175b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1762:	e9 ad 05 00 00       	jmpq   1d14 <worker_proc+0x6a9>
    1767:	8b 45 fc             	mov    -0x4(%rbp),%eax
    176a:	48 63 d0             	movslq %eax,%rdx
    176d:	48 89 d0             	mov    %rdx,%rax
    1770:	48 01 c0             	add    %rax,%rax
    1773:	48 01 d0             	add    %rdx,%rax
    1776:	48 c1 e0 02          	shl    $0x2,%rax
    177a:	48 01 e8             	add    %rbp,%rax
    177d:	48 2d ec d4 01 00    	sub    $0x1d4ec,%rax
    1783:	8b 00                	mov    (%rax),%eax
    1785:	48 8b 95 38 17 fe ff 	mov    -0x1e8c8(%rbp),%rdx
    178c:	39 d0                	cmp    %edx,%eax
    178e:	0f 85 d0 00 00 00    	jne    1864 <worker_proc+0x1f9>
    1794:	90                   	nop
    1795:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1798:	48 63 d0             	movslq %eax,%rdx
    179b:	48 89 d0             	mov    %rdx,%rax
    179e:	48 01 c0             	add    %rax,%rax
    17a1:	48 01 d0             	add    %rdx,%rax
    17a4:	48 c1 e0 02          	shl    $0x2,%rax
    17a8:	48 01 e8             	add    %rbp,%rax
    17ab:	48 2d ec d4 01 00    	sub    $0x1d4ec,%rax
    17b1:	8b 00                	mov    (%rax),%eax
    17b3:	48 8d 95 e4 2a fe ff 	lea    -0x1d51c(%rbp),%rdx
    17ba:	48 8d b5 f0 2a fe ff 	lea    -0x1d510(%rbp),%rsi
    17c1:	b9 00 08 00 00       	mov    $0x800,%ecx
    17c6:	89 c7                	mov    %eax,%edi
    17c8:	b8 00 00 00 00       	mov    $0x0,%eax
    17cd:	e8 1e f9 ff ff       	callq  10f0 <accept4@plt>
    17d2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    17d5:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%rbp)
    17d9:	0f 84 30 05 00 00    	je     1d0f <worker_proc+0x6a4>
    17df:	bf 00 18 00 00       	mov    $0x1800,%edi
    17e4:	e8 c7 f9 ff ff       	callq  11b0 <malloc@plt>
    17e9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    17ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    17f1:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    17f4:	89 90 f8 17 00 00    	mov    %edx,0x17f8(%rax)
    17fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    17fe:	48 89 85 08 2b fe ff 	mov    %rax,-0x1d4f8(%rbp)
    1805:	48 8d 8d 04 2b fe ff 	lea    -0x1d4fc(%rbp),%rcx
    180c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    180f:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1812:	be 01 00 00 00       	mov    $0x1,%esi
    1817:	89 c7                	mov    %eax,%edi
    1819:	e8 42 f9 ff ff       	callq  1160 <epoll_ctl@plt>
    181e:	83 f8 ff             	cmp    $0xffffffff,%eax
    1821:	75 2c                	jne    184f <worker_proc+0x1e4>
    1823:	e8 38 f8 ff ff       	callq  1060 <__errno_location@plt>
    1828:	8b 00                	mov    (%rax),%eax
    182a:	89 c7                	mov    %eax,%edi
    182c:	e8 0f fa ff ff       	callq  1240 <strerror@plt>
    1831:	48 89 c2             	mov    %rax,%rdx
    1834:	48 8b 05 25 9a 00 00 	mov    0x9a25(%rip),%rax        # b260 <stderr@@GLIBC_2.2.5>
    183b:	48 8d 35 56 68 00 00 	lea    0x6856(%rip),%rsi        # 8098 <_IO_stdin_used+0x98>
    1842:	48 89 c7             	mov    %rax,%rdi
    1845:	b8 00 00 00 00       	mov    $0x0,%eax
    184a:	e8 31 f9 ff ff       	callq  1180 <fprintf@plt>
    184f:	e8 0c f8 ff ff       	callq  1060 <__errno_location@plt>
    1854:	8b 00                	mov    (%rax),%eax
    1856:	83 f8 0b             	cmp    $0xb,%eax
    1859:	0f 84 b0 04 00 00    	je     1d0f <worker_proc+0x6a4>
    185f:	e9 31 ff ff ff       	jmpq   1795 <worker_proc+0x12a>
    1864:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1867:	48 63 d0             	movslq %eax,%rdx
    186a:	48 89 d0             	mov    %rdx,%rax
    186d:	48 01 c0             	add    %rax,%rax
    1870:	48 01 d0             	add    %rdx,%rax
    1873:	48 c1 e0 02          	shl    $0x2,%rax
    1877:	48 01 e8             	add    %rbp,%rax
    187a:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1880:	8b 00                	mov    (%rax),%eax
    1882:	25 18 20 00 00       	and    $0x2018,%eax
    1887:	85 c0                	test   %eax,%eax
    1889:	0f 84 c6 00 00 00    	je     1955 <worker_proc+0x2ea>
    188f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1892:	48 63 d0             	movslq %eax,%rdx
    1895:	48 89 d0             	mov    %rdx,%rax
    1898:	48 01 c0             	add    %rax,%rax
    189b:	48 01 d0             	add    %rdx,%rax
    189e:	48 c1 e0 02          	shl    $0x2,%rax
    18a2:	48 01 e8             	add    %rbp,%rax
    18a5:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    18ab:	48 8b 40 04          	mov    0x4(%rax),%rax
    18af:	48 89 c7             	mov    %rax,%rdi
    18b2:	e8 79 f7 ff ff       	callq  1030 <free@plt>
    18b7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    18ba:	48 63 d0             	movslq %eax,%rdx
    18bd:	48 89 d0             	mov    %rdx,%rax
    18c0:	48 01 c0             	add    %rax,%rax
    18c3:	48 01 d0             	add    %rdx,%rax
    18c6:	48 c1 e0 02          	shl    $0x2,%rax
    18ca:	48 01 e8             	add    %rbp,%rax
    18cd:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    18d3:	48 8b 40 04          	mov    0x4(%rax),%rax
    18d7:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    18dd:	be 02 00 00 00       	mov    $0x2,%esi
    18e2:	89 c7                	mov    %eax,%edi
    18e4:	e8 c7 f7 ff ff       	callq  10b0 <shutdown@plt>
    18e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    18ec:	48 63 d0             	movslq %eax,%rdx
    18ef:	48 89 d0             	mov    %rdx,%rax
    18f2:	48 01 c0             	add    %rax,%rax
    18f5:	48 01 d0             	add    %rdx,%rax
    18f8:	48 c1 e0 02          	shl    $0x2,%rax
    18fc:	48 01 e8             	add    %rbp,%rax
    18ff:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1905:	48 8b 40 04          	mov    0x4(%rax),%rax
    1909:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    190f:	89 c7                	mov    %eax,%edi
    1911:	e8 3a f8 ff ff       	callq  1150 <close@plt>
    1916:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1919:	48 63 d0             	movslq %eax,%rdx
    191c:	48 89 d0             	mov    %rdx,%rax
    191f:	48 01 c0             	add    %rax,%rax
    1922:	48 01 d0             	add    %rdx,%rax
    1925:	48 c1 e0 02          	shl    $0x2,%rax
    1929:	48 01 e8             	add    %rbp,%rax
    192c:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1932:	48 8b 40 04          	mov    0x4(%rax),%rax
    1936:	8b 90 f8 17 00 00    	mov    0x17f8(%rax),%edx
    193c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    193f:	b9 00 00 00 00       	mov    $0x0,%ecx
    1944:	be 02 00 00 00       	mov    $0x2,%esi
    1949:	89 c7                	mov    %eax,%edi
    194b:	e8 10 f8 ff ff       	callq  1160 <epoll_ctl@plt>
    1950:	e9 bb 03 00 00       	jmpq   1d10 <worker_proc+0x6a5>
    1955:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1958:	48 63 d0             	movslq %eax,%rdx
    195b:	48 89 d0             	mov    %rdx,%rax
    195e:	48 01 c0             	add    %rax,%rax
    1961:	48 01 d0             	add    %rdx,%rax
    1964:	48 c1 e0 02          	shl    $0x2,%rax
    1968:	48 01 e8             	add    %rbp,%rax
    196b:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1971:	48 8b 40 04          	mov    0x4(%rax),%rax
    1975:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    197b:	48 8d 95 e8 2a fe ff 	lea    -0x1d518(%rbp),%rdx
    1982:	be 1b 54 00 00       	mov    $0x541b,%esi
    1987:	89 c7                	mov    %eax,%edi
    1989:	b8 00 00 00 00       	mov    $0x0,%eax
    198e:	e8 ad f7 ff ff       	callq  1140 <ioctl@plt>
    1993:	48 8b 85 e8 2a fe ff 	mov    -0x1d518(%rbp),%rax
    199a:	48 3d d0 16 00 00    	cmp    $0x16d0,%rax
    19a0:	76 43                	jbe    19e5 <worker_proc+0x37a>
    19a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    19a5:	48 63 d0             	movslq %eax,%rdx
    19a8:	48 89 d0             	mov    %rdx,%rax
    19ab:	48 01 c0             	add    %rax,%rax
    19ae:	48 01 d0             	add    %rdx,%rax
    19b1:	48 c1 e0 02          	shl    $0x2,%rax
    19b5:	48 01 e8             	add    %rbp,%rax
    19b8:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    19be:	48 8b 40 04          	mov    0x4(%rax),%rax
    19c2:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    19c8:	b9 00 00 00 00       	mov    $0x0,%ecx
    19cd:	ba 68 00 00 00       	mov    $0x68,%edx
    19d2:	48 8d 35 ef 66 00 00 	lea    0x66ef(%rip),%rsi        # 80c8 <_IO_stdin_used+0xc8>
    19d9:	89 c7                	mov    %eax,%edi
    19db:	e8 30 f7 ff ff       	callq  1110 <send@plt>
    19e0:	e9 2b 03 00 00       	jmpq   1d10 <worker_proc+0x6a5>
    19e5:	48 8b 85 e8 2a fe ff 	mov    -0x1d518(%rbp),%rax
    19ec:	48 85 c0             	test   %rax,%rax
    19ef:	0f 84 57 02 00 00    	je     1c4c <worker_proc+0x5e1>
    19f5:	48 8d 95 e8 2a fe ff 	lea    -0x1d518(%rbp),%rdx
    19fc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    19ff:	48 63 c8             	movslq %eax,%rcx
    1a02:	48 89 c8             	mov    %rcx,%rax
    1a05:	48 01 c0             	add    %rax,%rax
    1a08:	48 01 c8             	add    %rcx,%rax
    1a0b:	48 c1 e0 02          	shl    $0x2,%rax
    1a0f:	48 01 e8             	add    %rbp,%rax
    1a12:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1a18:	48 8b 40 04          	mov    0x4(%rax),%rax
    1a1c:	48 8d b0 28 01 00 00 	lea    0x128(%rax),%rsi
    1a23:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a26:	48 63 c8             	movslq %eax,%rcx
    1a29:	48 89 c8             	mov    %rcx,%rax
    1a2c:	48 01 c0             	add    %rax,%rax
    1a2f:	48 01 c8             	add    %rcx,%rax
    1a32:	48 c1 e0 02          	shl    $0x2,%rax
    1a36:	48 01 e8             	add    %rbp,%rax
    1a39:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1a3f:	48 8b 40 04          	mov    0x4(%rax),%rax
    1a43:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    1a49:	b9 00 00 00 00       	mov    $0x0,%ecx
    1a4e:	89 c7                	mov    %eax,%edi
    1a50:	e8 eb f5 ff ff       	callq  1040 <recv@plt>
    1a55:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a58:	48 63 d0             	movslq %eax,%rdx
    1a5b:	48 89 d0             	mov    %rdx,%rax
    1a5e:	48 01 c0             	add    %rax,%rax
    1a61:	48 01 d0             	add    %rdx,%rax
    1a64:	48 c1 e0 02          	shl    $0x2,%rax
    1a68:	48 01 e8             	add    %rbp,%rax
    1a6b:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1a71:	48 8b 40 04          	mov    0x4(%rax),%rax
    1a75:	48 05 28 01 00 00    	add    $0x128,%rax
    1a7b:	48 89 c7             	mov    %rax,%rdi
    1a7e:	e8 ed f5 ff ff       	callq  1070 <puts@plt>
    1a83:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a86:	48 63 d0             	movslq %eax,%rdx
    1a89:	48 89 d0             	mov    %rdx,%rax
    1a8c:	48 01 c0             	add    %rax,%rax
    1a8f:	48 01 d0             	add    %rdx,%rax
    1a92:	48 c1 e0 02          	shl    $0x2,%rax
    1a96:	48 01 e8             	add    %rbp,%rax
    1a99:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1a9f:	48 8b 40 04          	mov    0x4(%rax),%rax
    1aa3:	48 89 c1             	mov    %rax,%rcx
    1aa6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1aa9:	48 63 d0             	movslq %eax,%rdx
    1aac:	48 89 d0             	mov    %rdx,%rax
    1aaf:	48 01 c0             	add    %rax,%rax
    1ab2:	48 01 d0             	add    %rdx,%rax
    1ab5:	48 c1 e0 02          	shl    $0x2,%rax
    1ab9:	48 01 e8             	add    %rbp,%rax
    1abc:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1ac2:	48 8b 40 04          	mov    0x4(%rax),%rax
    1ac6:	48 05 28 01 00 00    	add    $0x128,%rax
    1acc:	48 89 ce             	mov    %rcx,%rsi
    1acf:	48 89 c7             	mov    %rax,%rdi
    1ad2:	e8 99 07 00 00       	callq  2270 <ParseHeader>
    1ad7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1ada:	48 63 d0             	movslq %eax,%rdx
    1add:	48 89 d0             	mov    %rdx,%rax
    1ae0:	48 01 c0             	add    %rax,%rax
    1ae3:	48 01 d0             	add    %rdx,%rax
    1ae6:	48 c1 e0 02          	shl    $0x2,%rax
    1aea:	48 01 e8             	add    %rbp,%rax
    1aed:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1af3:	48 8b 40 04          	mov    0x4(%rax),%rax
    1af7:	48 8b 40 08          	mov    0x8(%rax),%rax
    1afb:	48 89 c7             	mov    %rax,%rdi
    1afe:	e8 bd f5 ff ff       	callq  10c0 <strlen@plt>
    1b03:	89 85 4c 17 fe ff    	mov    %eax,-0x1e8b4(%rbp)
    1b09:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1b0c:	48 63 d0             	movslq %eax,%rdx
    1b0f:	48 89 d0             	mov    %rdx,%rax
    1b12:	48 01 c0             	add    %rax,%rax
    1b15:	48 01 d0             	add    %rdx,%rax
    1b18:	48 c1 e0 02          	shl    $0x2,%rax
    1b1c:	48 01 e8             	add    %rbp,%rax
    1b1f:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1b25:	48 8b 40 04          	mov    0x4(%rax),%rax
    1b29:	48 8b 40 08          	mov    0x8(%rax),%rax
    1b2d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1b31:	48 8d 85 4c 17 fe ff 	lea    -0x1e8b4(%rbp),%rax
    1b38:	48 89 85 40 17 fe ff 	mov    %rax,-0x1e8c0(%rbp)
    1b3f:	48 8b 85 40 17 fe ff 	mov    -0x1e8c0(%rbp),%rax
    1b46:	48 85 c0             	test   %rax,%rax
    1b49:	75 16                	jne    1b61 <worker_proc+0x4f6>
    1b4b:	48 8d 05 df 65 00 00 	lea    0x65df(%rip),%rax        # 8131 <_IO_stdin_used+0x131>
    1b52:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1b56:	48 c7 85 40 17 fe ff 	movq   $0xa,-0x1e8c0(%rbp)
    1b5d:	0a 00 00 00 
    1b61:	8b 15 59 98 00 00    	mov    0x9859(%rip),%edx        # b3c0 <dirfd_>
    1b67:	48 8d 8d 40 17 fe ff 	lea    -0x1e8c0(%rbp),%rcx
    1b6e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1b72:	48 89 ce             	mov    %rcx,%rsi
    1b75:	48 89 c7             	mov    %rax,%rdi
    1b78:	e8 f8 f7 ff ff       	callq  1375 <RetrieveFile>
    1b7d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1b81:	48 83 7d e8 ff       	cmpq   $0xffffffffffffffff,-0x18(%rbp)
    1b86:	75 43                	jne    1bcb <worker_proc+0x560>
    1b88:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1b8b:	48 63 d0             	movslq %eax,%rdx
    1b8e:	48 89 d0             	mov    %rdx,%rax
    1b91:	48 01 c0             	add    %rax,%rax
    1b94:	48 01 d0             	add    %rdx,%rax
    1b97:	48 c1 e0 02          	shl    $0x2,%rax
    1b9b:	48 01 e8             	add    %rbp,%rax
    1b9e:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1ba4:	48 8b 40 04          	mov    0x4(%rax),%rax
    1ba8:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    1bae:	b9 00 00 00 00       	mov    $0x0,%ecx
    1bb3:	ba 76 00 00 00       	mov    $0x76,%edx
    1bb8:	48 8d 35 81 65 00 00 	lea    0x6581(%rip),%rsi        # 8140 <_IO_stdin_used+0x140>
    1bbf:	89 c7                	mov    %eax,%edi
    1bc1:	e8 4a f5 ff ff       	callq  1110 <send@plt>
    1bc6:	e9 45 01 00 00       	jmpq   1d10 <worker_proc+0x6a5>
    1bcb:	8b 8d 4c 17 fe ff    	mov    -0x1e8b4(%rbp),%ecx
    1bd1:	8b 95 4c 17 fe ff    	mov    -0x1e8b4(%rbp),%edx
    1bd7:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    1bdb:	48 8d 85 50 17 fe ff 	lea    -0x1e8b0(%rbp),%rax
    1be2:	49 89 f0             	mov    %rsi,%r8
    1be5:	48 8d 35 cc 65 00 00 	lea    0x65cc(%rip),%rsi        # 81b8 <_IO_stdin_used+0x1b8>
    1bec:	48 89 c7             	mov    %rax,%rdi
    1bef:	b8 00 00 00 00       	mov    $0x0,%eax
    1bf4:	e8 27 f6 ff ff       	callq  1220 <sprintf@plt>
    1bf9:	48 8d 85 50 17 fe ff 	lea    -0x1e8b0(%rbp),%rax
    1c00:	48 89 c7             	mov    %rax,%rdi
    1c03:	e8 b8 f4 ff ff       	callq  10c0 <strlen@plt>
    1c08:	48 89 c7             	mov    %rax,%rdi
    1c0b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1c0e:	48 63 d0             	movslq %eax,%rdx
    1c11:	48 89 d0             	mov    %rdx,%rax
    1c14:	48 01 c0             	add    %rax,%rax
    1c17:	48 01 d0             	add    %rdx,%rax
    1c1a:	48 c1 e0 02          	shl    $0x2,%rax
    1c1e:	48 01 e8             	add    %rbp,%rax
    1c21:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1c27:	48 8b 40 04          	mov    0x4(%rax),%rax
    1c2b:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    1c31:	48 8d b5 50 17 fe ff 	lea    -0x1e8b0(%rbp),%rsi
    1c38:	b9 00 00 00 00       	mov    $0x0,%ecx
    1c3d:	48 89 fa             	mov    %rdi,%rdx
    1c40:	89 c7                	mov    %eax,%edi
    1c42:	e8 c9 f4 ff ff       	callq  1110 <send@plt>
    1c47:	e9 c4 00 00 00       	jmpq   1d10 <worker_proc+0x6a5>
    1c4c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1c4f:	48 63 d0             	movslq %eax,%rdx
    1c52:	48 89 d0             	mov    %rdx,%rax
    1c55:	48 01 c0             	add    %rax,%rax
    1c58:	48 01 d0             	add    %rdx,%rax
    1c5b:	48 c1 e0 02          	shl    $0x2,%rax
    1c5f:	48 01 e8             	add    %rbp,%rax
    1c62:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1c68:	48 8b 40 04          	mov    0x4(%rax),%rax
    1c6c:	48 89 c7             	mov    %rax,%rdi
    1c6f:	e8 bc f3 ff ff       	callq  1030 <free@plt>
    1c74:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1c77:	48 63 d0             	movslq %eax,%rdx
    1c7a:	48 89 d0             	mov    %rdx,%rax
    1c7d:	48 01 c0             	add    %rax,%rax
    1c80:	48 01 d0             	add    %rdx,%rax
    1c83:	48 c1 e0 02          	shl    $0x2,%rax
    1c87:	48 01 e8             	add    %rbp,%rax
    1c8a:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1c90:	48 8b 40 04          	mov    0x4(%rax),%rax
    1c94:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    1c9a:	be 02 00 00 00       	mov    $0x2,%esi
    1c9f:	89 c7                	mov    %eax,%edi
    1ca1:	e8 0a f4 ff ff       	callq  10b0 <shutdown@plt>
    1ca6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1ca9:	48 63 d0             	movslq %eax,%rdx
    1cac:	48 89 d0             	mov    %rdx,%rax
    1caf:	48 01 c0             	add    %rax,%rax
    1cb2:	48 01 d0             	add    %rdx,%rax
    1cb5:	48 c1 e0 02          	shl    $0x2,%rax
    1cb9:	48 01 e8             	add    %rbp,%rax
    1cbc:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1cc2:	48 8b 40 04          	mov    0x4(%rax),%rax
    1cc6:	8b 80 f8 17 00 00    	mov    0x17f8(%rax),%eax
    1ccc:	89 c7                	mov    %eax,%edi
    1cce:	e8 7d f4 ff ff       	callq  1150 <close@plt>
    1cd3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1cd6:	48 63 d0             	movslq %eax,%rdx
    1cd9:	48 89 d0             	mov    %rdx,%rax
    1cdc:	48 01 c0             	add    %rax,%rax
    1cdf:	48 01 d0             	add    %rdx,%rax
    1ce2:	48 c1 e0 02          	shl    $0x2,%rax
    1ce6:	48 01 e8             	add    %rbp,%rax
    1ce9:	48 2d f0 d4 01 00    	sub    $0x1d4f0,%rax
    1cef:	48 8b 40 04          	mov    0x4(%rax),%rax
    1cf3:	8b 90 f8 17 00 00    	mov    0x17f8(%rax),%edx
    1cf9:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1cfc:	b9 00 00 00 00       	mov    $0x0,%ecx
    1d01:	be 02 00 00 00       	mov    $0x2,%esi
    1d06:	89 c7                	mov    %eax,%edi
    1d08:	e8 53 f4 ff ff       	callq  1160 <epoll_ctl@plt>
    1d0d:	eb 01                	jmp    1d10 <worker_proc+0x6a5>
    1d0f:	90                   	nop
    1d10:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1d14:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1d17:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    1d1a:	0f 8c 47 fa ff ff    	jl     1767 <worker_proc+0xfc>
    1d20:	e9 fb f9 ff ff       	jmpq   1720 <worker_proc+0xb5>

0000000000001d25 <main>:
    1d25:	55                   	push   %rbp
    1d26:	48 89 e5             	mov    %rsp,%rbp
    1d29:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1d30:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    1d37:	00 
    1d38:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    1d3f:	00 
    1d40:	66 c7 45 e0 02 00    	movw   $0x2,-0x20(%rbp)
    1d46:	bf 90 1f 00 00       	mov    $0x1f90,%edi
    1d4b:	e8 b0 f3 ff ff       	callq  1100 <htons@plt>
    1d50:	66 89 45 e2          	mov    %ax,-0x1e(%rbp)
    1d54:	be 00 00 20 00       	mov    $0x200000,%esi
    1d59:	48 8d 3d dc 64 00 00 	lea    0x64dc(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    1d60:	b8 00 00 00 00       	mov    $0x0,%eax
    1d65:	e8 96 f4 ff ff       	callq  1200 <open@plt>
    1d6a:	89 05 50 96 00 00    	mov    %eax,0x9650(%rip)        # b3c0 <dirfd_>
    1d70:	8b 05 4a 96 00 00    	mov    0x964a(%rip),%eax        # b3c0 <dirfd_>
    1d76:	83 f8 ff             	cmp    $0xffffffff,%eax
    1d79:	75 36                	jne    1db1 <main+0x8c>
    1d7b:	e8 e0 f2 ff ff       	callq  1060 <__errno_location@plt>
    1d80:	8b 00                	mov    (%rax),%eax
    1d82:	89 c7                	mov    %eax,%edi
    1d84:	e8 b7 f4 ff ff       	callq  1240 <strerror@plt>
    1d89:	48 89 c2             	mov    %rax,%rdx
    1d8c:	48 8b 05 cd 94 00 00 	mov    0x94cd(%rip),%rax        # b260 <stderr@@GLIBC_2.2.5>
    1d93:	48 8d 35 a7 64 00 00 	lea    0x64a7(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    1d9a:	48 89 c7             	mov    %rax,%rdi
    1d9d:	b8 00 00 00 00       	mov    $0x0,%eax
    1da2:	e8 d9 f3 ff ff       	callq  1180 <fprintf@plt>
    1da7:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    1dac:	e8 7f f4 ff ff       	callq  1230 <exit@plt>
    1db1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1db8:	e9 1b 02 00 00       	jmpq   1fd8 <main+0x2b3>
    1dbd:	ba 00 00 00 00       	mov    $0x0,%edx
    1dc2:	be 01 08 00 00       	mov    $0x801,%esi
    1dc7:	bf 02 00 00 00       	mov    $0x2,%edi
    1dcc:	e8 9f f4 ff ff       	callq  1270 <socket@plt>
    1dd1:	48 98                	cltq   
    1dd3:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1dd6:	48 63 d2             	movslq %edx,%rdx
    1dd9:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    1de0:	00 
    1de1:	48 8d 15 e0 95 00 00 	lea    0x95e0(%rip),%rdx        # b3c8 <listeners>
    1de8:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
    1dec:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1def:	48 98                	cltq   
    1df1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1df8:	00 
    1df9:	48 8d 05 c8 95 00 00 	lea    0x95c8(%rip),%rax        # b3c8 <listeners>
    1e00:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1e04:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    1e08:	75 11                	jne    1e1b <main+0xf6>
    1e0a:	48 8d 3d 4f 64 00 00 	lea    0x644f(%rip),%rdi        # 8260 <_IO_stdin_used+0x260>
    1e11:	e8 fa f3 ff ff       	callq  1210 <perror@plt>
    1e16:	e9 21 02 00 00       	jmpq   203c <main+0x317>
    1e1b:	c7 85 3c ff ff ff 01 	movl   $0x1,-0xc4(%rbp)
    1e22:	00 00 00 
    1e25:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1e28:	48 98                	cltq   
    1e2a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1e31:	00 
    1e32:	48 8d 05 8f 95 00 00 	lea    0x958f(%rip),%rax        # b3c8 <listeners>
    1e39:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1e3d:	89 c7                	mov    %eax,%edi
    1e3f:	48 8d 85 3c ff ff ff 	lea    -0xc4(%rbp),%rax
    1e46:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    1e4c:	48 89 c1             	mov    %rax,%rcx
    1e4f:	ba 3c 00 00 00       	mov    $0x3c,%edx
    1e54:	be 01 00 00 00       	mov    $0x1,%esi
    1e59:	e8 42 f2 ff ff       	callq  10a0 <setsockopt@plt>
    1e5e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1e61:	48 98                	cltq   
    1e63:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1e6a:	00 
    1e6b:	48 8d 05 56 95 00 00 	lea    0x9556(%rip),%rax        # b3c8 <listeners>
    1e72:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1e76:	89 c7                	mov    %eax,%edi
    1e78:	48 8d 85 3c ff ff ff 	lea    -0xc4(%rbp),%rax
    1e7f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    1e85:	48 89 c1             	mov    %rax,%rcx
    1e88:	ba 09 00 00 00       	mov    $0x9,%edx
    1e8d:	be 01 00 00 00       	mov    $0x1,%esi
    1e92:	e8 09 f2 ff ff       	callq  10a0 <setsockopt@plt>
    1e97:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1e9a:	48 98                	cltq   
    1e9c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1ea3:	00 
    1ea4:	48 8d 05 1d 95 00 00 	lea    0x951d(%rip),%rax        # b3c8 <listeners>
    1eab:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1eaf:	89 c7                	mov    %eax,%edi
    1eb1:	48 8d 85 3c ff ff ff 	lea    -0xc4(%rbp),%rax
    1eb8:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    1ebe:	48 89 c1             	mov    %rax,%rcx
    1ec1:	ba 0f 00 00 00       	mov    $0xf,%edx
    1ec6:	be 01 00 00 00       	mov    $0x1,%esi
    1ecb:	e8 d0 f1 ff ff       	callq  10a0 <setsockopt@plt>
    1ed0:	c7 85 3c ff ff ff 01 	movl   $0x1,-0xc4(%rbp)
    1ed7:	00 00 00 
    1eda:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1edd:	48 98                	cltq   
    1edf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1ee6:	00 
    1ee7:	48 8d 05 da 94 00 00 	lea    0x94da(%rip),%rax        # b3c8 <listeners>
    1eee:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1ef2:	89 c1                	mov    %eax,%ecx
    1ef4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1ef8:	ba 10 00 00 00       	mov    $0x10,%edx
    1efd:	48 89 c6             	mov    %rax,%rsi
    1f00:	89 cf                	mov    %ecx,%edi
    1f02:	e8 e9 f2 ff ff       	callq  11f0 <bind@plt>
    1f07:	83 f8 ff             	cmp    $0xffffffff,%eax
    1f0a:	75 11                	jne    1f1d <main+0x1f8>
    1f0c:	48 8d 3d 75 63 00 00 	lea    0x6375(%rip),%rdi        # 8288 <_IO_stdin_used+0x288>
    1f13:	e8 f8 f2 ff ff       	callq  1210 <perror@plt>
    1f18:	e9 1f 01 00 00       	jmpq   203c <main+0x317>
    1f1d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1f20:	48 98                	cltq   
    1f22:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1f29:	00 
    1f2a:	48 8d 05 97 94 00 00 	lea    0x9497(%rip),%rax        # b3c8 <listeners>
    1f31:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1f35:	be 10 27 00 00       	mov    $0x2710,%esi
    1f3a:	89 c7                	mov    %eax,%edi
    1f3c:	e8 8f f2 ff ff       	callq  11d0 <listen@plt>
    1f41:	83 f8 ff             	cmp    $0xffffffff,%eax
    1f44:	75 11                	jne    1f57 <main+0x232>
    1f46:	48 8d 3d 65 63 00 00 	lea    0x6365(%rip),%rdi        # 82b2 <_IO_stdin_used+0x2b2>
    1f4d:	e8 be f2 ff ff       	callq  1210 <perror@plt>
    1f52:	e9 e5 00 00 00       	jmpq   203c <main+0x317>
    1f57:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1f5a:	48 98                	cltq   
    1f5c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1f63:	00 
    1f64:	48 8d 05 5d 94 00 00 	lea    0x945d(%rip),%rax        # b3c8 <listeners>
    1f6b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1f6f:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1f72:	8d 4a 01             	lea    0x1(%rdx),%ecx
    1f75:	48 89 c2             	mov    %rax,%rdx
    1f78:	89 ce                	mov    %ecx,%esi
    1f7a:	48 8d 3d 4a 63 00 00 	lea    0x634a(%rip),%rdi        # 82cb <_IO_stdin_used+0x2cb>
    1f81:	b8 00 00 00 00       	mov    $0x0,%eax
    1f86:	e8 95 f1 ff ff       	callq  1120 <printf@plt>
    1f8b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1f8e:	48 98                	cltq   
    1f90:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1f97:	00 
    1f98:	48 8d 05 29 94 00 00 	lea    0x9429(%rip),%rax        # b3c8 <listeners>
    1f9f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    1fa3:	48 89 c2             	mov    %rax,%rdx
    1fa6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1fa9:	48 98                	cltq   
    1fab:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    1fb2:	00 
    1fb3:	48 8d 05 16 94 00 00 	lea    0x9416(%rip),%rax        # b3d0 <workers>
    1fba:	48 01 c8             	add    %rcx,%rax
    1fbd:	48 89 d1             	mov    %rdx,%rcx
    1fc0:	48 8d 15 a4 f6 ff ff 	lea    -0x95c(%rip),%rdx        # 166b <worker_proc>
    1fc7:	be 00 00 00 00       	mov    $0x0,%esi
    1fcc:	48 89 c7             	mov    %rax,%rdi
    1fcf:	e8 7c f0 ff ff       	callq  1050 <pthread_create@plt>
    1fd4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1fd8:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    1fdc:	0f 8e db fd ff ff    	jle    1dbd <main+0x98>
    1fe2:	48 8d 3d ff 62 00 00 	lea    0x62ff(%rip),%rdi        # 82e8 <_IO_stdin_used+0x2e8>
    1fe9:	e8 82 f0 ff ff       	callq  1070 <puts@plt>
    1fee:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    1ff5:	48 89 c6             	mov    %rax,%rsi
    1ff8:	b8 00 00 00 00       	mov    $0x0,%eax
    1ffd:	ba 13 00 00 00       	mov    $0x13,%edx
    2002:	48 89 f7             	mov    %rsi,%rdi
    2005:	48 89 d1             	mov    %rdx,%rcx
    2008:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    200b:	48 8d 05 e6 f5 ff ff 	lea    -0xa1a(%rip),%rax        # 15f8 <siginthandler>
    2012:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    2019:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    2020:	ba 00 00 00 00       	mov    $0x0,%edx
    2025:	48 89 c6             	mov    %rax,%rsi
    2028:	bf 02 00 00 00       	mov    $0x2,%edi
    202d:	e8 5e f0 ff ff       	callq  1090 <sigaction@plt>
    2032:	bf 80 96 98 00       	mov    $0x989680,%edi
    2037:	e8 14 f2 ff ff       	callq  1250 <sleep@plt>
    203c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    2043:	eb 43                	jmp    2088 <main+0x363>
    2045:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2048:	48 98                	cltq   
    204a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2051:	00 
    2052:	48 8d 05 6f 93 00 00 	lea    0x936f(%rip),%rax        # b3c8 <listeners>
    2059:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    205d:	89 c7                	mov    %eax,%edi
    205f:	e8 ec f0 ff ff       	callq  1150 <close@plt>
    2064:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2067:	48 98                	cltq   
    2069:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2070:	00 
    2071:	48 8d 05 58 93 00 00 	lea    0x9358(%rip),%rax        # b3d0 <workers>
    2078:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    207c:	48 89 c7             	mov    %rax,%rdi
    207f:	e8 fc ef ff ff       	callq  1080 <pthread_cancel@plt>
    2084:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    2088:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    208c:	7e b7                	jle    2045 <main+0x320>
    208e:	48 8d 3d 8a 62 00 00 	lea    0x628a(%rip),%rdi        # 831f <_IO_stdin_used+0x31f>
    2095:	e8 d6 ef ff ff       	callq  1070 <puts@plt>
    209a:	bf 00 00 00 00       	mov    $0x0,%edi
    209f:	e8 fc f0 ff ff       	callq  11a0 <pthread_exit@plt>

00000000000020a4 <hash>:
    20a4:	55                   	push   %rbp
    20a5:	48 89 e5             	mov    %rsp,%rbp
    20a8:	53                   	push   %rbx
    20a9:	48 89 f8             	mov    %rdi,%rax
    20ac:	48 89 f2             	mov    %rsi,%rdx
    20af:	89 d3                	mov    %edx,%ebx
    20b1:	8d 53 ff             	lea    -0x1(%rbx),%edx
    20b4:	83 fa 06             	cmp    $0x6,%edx
    20b7:	76 1d                	jbe    20d6 <hash+0x32>
    20b9:	48 8d 50 07          	lea    0x7(%rax),%rdx
    20bd:	0f b6 12             	movzbl (%rdx),%edx
    20c0:	0f b6 d2             	movzbl %dl,%edx
    20c3:	48 63 d2             	movslq %edx,%rdx
    20c6:	48 8d 0d 93 90 00 00 	lea    0x9093(%rip),%rcx        # b160 <asso_values.0>
    20cd:	0f b6 14 0a          	movzbl (%rdx,%rcx,1),%edx
    20d1:	0f b6 d2             	movzbl %dl,%edx
    20d4:	01 d3                	add    %edx,%ebx
    20d6:	0f b6 00             	movzbl (%rax),%eax
    20d9:	0f b6 c0             	movzbl %al,%eax
    20dc:	48 98                	cltq   
    20de:	48 8d 15 7b 90 00 00 	lea    0x907b(%rip),%rdx        # b160 <asso_values.0>
    20e5:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    20e9:	0f b6 c0             	movzbl %al,%eax
    20ec:	01 c3                	add    %eax,%ebx
    20ee:	90                   	nop
    20ef:	89 d8                	mov    %ebx,%eax
    20f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    20f5:	c9                   	leaveq 
    20f6:	c3                   	retq   

00000000000020f7 <hdr_ind>:
    20f7:	55                   	push   %rbp
    20f8:	48 89 e5             	mov    %rsp,%rbp
    20fb:	53                   	push   %rbx
    20fc:	48 89 f8             	mov    %rdi,%rax
    20ff:	48 89 f2             	mov    %rsi,%rdx
    2102:	48 89 d6             	mov    %rdx,%rsi
    2105:	48 89 c7             	mov    %rax,%rdi
    2108:	e8 97 ff ff ff       	callq  20a4 <hash>
    210d:	89 c3                	mov    %eax,%ebx
    210f:	8d 43 fe             	lea    -0x2(%rbx),%eax
    2112:	83 f8 35             	cmp    $0x35,%eax
    2115:	0f 87 4a 01 00 00    	ja     2265 <hdr_ind+0x16e>
    211b:	89 c0                	mov    %eax,%eax
    211d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2124:	00 
    2125:	48 8d 05 0c 62 00 00 	lea    0x620c(%rip),%rax        # 8338 <_IO_stdin_used+0x338>
    212c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    212f:	48 98                	cltq   
    2131:	48 8d 15 00 62 00 00 	lea    0x6200(%rip),%rdx        # 8338 <_IO_stdin_used+0x338>
    2138:	48 01 d0             	add    %rdx,%rax
    213b:	ff e0                	jmpq   *%rax
    213d:	b8 00 00 00 00       	mov    $0x0,%eax
    2142:	e9 23 01 00 00       	jmpq   226a <hdr_ind+0x173>
    2147:	b8 01 00 00 00       	mov    $0x1,%eax
    214c:	e9 19 01 00 00       	jmpq   226a <hdr_ind+0x173>
    2151:	b8 02 00 00 00       	mov    $0x2,%eax
    2156:	e9 0f 01 00 00       	jmpq   226a <hdr_ind+0x173>
    215b:	b8 03 00 00 00       	mov    $0x3,%eax
    2160:	e9 05 01 00 00       	jmpq   226a <hdr_ind+0x173>
    2165:	b8 04 00 00 00       	mov    $0x4,%eax
    216a:	e9 fb 00 00 00       	jmpq   226a <hdr_ind+0x173>
    216f:	b8 05 00 00 00       	mov    $0x5,%eax
    2174:	e9 f1 00 00 00       	jmpq   226a <hdr_ind+0x173>
    2179:	b8 06 00 00 00       	mov    $0x6,%eax
    217e:	e9 e7 00 00 00       	jmpq   226a <hdr_ind+0x173>
    2183:	b8 07 00 00 00       	mov    $0x7,%eax
    2188:	e9 dd 00 00 00       	jmpq   226a <hdr_ind+0x173>
    218d:	b8 08 00 00 00       	mov    $0x8,%eax
    2192:	e9 d3 00 00 00       	jmpq   226a <hdr_ind+0x173>
    2197:	b8 09 00 00 00       	mov    $0x9,%eax
    219c:	e9 c9 00 00 00       	jmpq   226a <hdr_ind+0x173>
    21a1:	b8 0a 00 00 00       	mov    $0xa,%eax
    21a6:	e9 bf 00 00 00       	jmpq   226a <hdr_ind+0x173>
    21ab:	b8 0b 00 00 00       	mov    $0xb,%eax
    21b0:	e9 b5 00 00 00       	jmpq   226a <hdr_ind+0x173>
    21b5:	b8 0c 00 00 00       	mov    $0xc,%eax
    21ba:	e9 ab 00 00 00       	jmpq   226a <hdr_ind+0x173>
    21bf:	b8 0d 00 00 00       	mov    $0xd,%eax
    21c4:	e9 a1 00 00 00       	jmpq   226a <hdr_ind+0x173>
    21c9:	b8 0e 00 00 00       	mov    $0xe,%eax
    21ce:	e9 97 00 00 00       	jmpq   226a <hdr_ind+0x173>
    21d3:	b8 0f 00 00 00       	mov    $0xf,%eax
    21d8:	e9 8d 00 00 00       	jmpq   226a <hdr_ind+0x173>
    21dd:	b8 10 00 00 00       	mov    $0x10,%eax
    21e2:	e9 83 00 00 00       	jmpq   226a <hdr_ind+0x173>
    21e7:	b8 11 00 00 00       	mov    $0x11,%eax
    21ec:	eb 7c                	jmp    226a <hdr_ind+0x173>
    21ee:	b8 12 00 00 00       	mov    $0x12,%eax
    21f3:	eb 75                	jmp    226a <hdr_ind+0x173>
    21f5:	b8 13 00 00 00       	mov    $0x13,%eax
    21fa:	eb 6e                	jmp    226a <hdr_ind+0x173>
    21fc:	b8 14 00 00 00       	mov    $0x14,%eax
    2201:	eb 67                	jmp    226a <hdr_ind+0x173>
    2203:	b8 15 00 00 00       	mov    $0x15,%eax
    2208:	eb 60                	jmp    226a <hdr_ind+0x173>
    220a:	b8 16 00 00 00       	mov    $0x16,%eax
    220f:	eb 59                	jmp    226a <hdr_ind+0x173>
    2211:	b8 17 00 00 00       	mov    $0x17,%eax
    2216:	eb 52                	jmp    226a <hdr_ind+0x173>
    2218:	b8 18 00 00 00       	mov    $0x18,%eax
    221d:	eb 4b                	jmp    226a <hdr_ind+0x173>
    221f:	b8 19 00 00 00       	mov    $0x19,%eax
    2224:	eb 44                	jmp    226a <hdr_ind+0x173>
    2226:	b8 1a 00 00 00       	mov    $0x1a,%eax
    222b:	eb 3d                	jmp    226a <hdr_ind+0x173>
    222d:	b8 1b 00 00 00       	mov    $0x1b,%eax
    2232:	eb 36                	jmp    226a <hdr_ind+0x173>
    2234:	b8 1c 00 00 00       	mov    $0x1c,%eax
    2239:	eb 2f                	jmp    226a <hdr_ind+0x173>
    223b:	b8 1d 00 00 00       	mov    $0x1d,%eax
    2240:	eb 28                	jmp    226a <hdr_ind+0x173>
    2242:	b8 1e 00 00 00       	mov    $0x1e,%eax
    2247:	eb 21                	jmp    226a <hdr_ind+0x173>
    2249:	b8 1f 00 00 00       	mov    $0x1f,%eax
    224e:	eb 1a                	jmp    226a <hdr_ind+0x173>
    2250:	b8 20 00 00 00       	mov    $0x20,%eax
    2255:	eb 13                	jmp    226a <hdr_ind+0x173>
    2257:	b8 21 00 00 00       	mov    $0x21,%eax
    225c:	eb 0c                	jmp    226a <hdr_ind+0x173>
    225e:	b8 22 00 00 00       	mov    $0x22,%eax
    2263:	eb 05                	jmp    226a <hdr_ind+0x173>
    2265:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    226a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    226e:	c9                   	leaveq 
    226f:	c3                   	retq   

0000000000002270 <ParseHeader>:
    2270:	55                   	push   %rbp
    2271:	48 89 e5             	mov    %rsp,%rbp
    2274:	53                   	push   %rbx
    2275:	48 83 ec 28          	sub    $0x28,%rsp
    2279:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    227d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2281:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2285:	48 8d 58 10          	lea    0x10(%rax),%rbx
    2289:	4c 8b 5d d8          	mov    -0x28(%rbp),%r11
    228d:	4c 8b 4d d8          	mov    -0x28(%rbp),%r9
    2291:	41 ba 00 00 00 00    	mov    $0x0,%r10d
    2297:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    229e:	00 
    229f:	4c 89 d8             	mov    %r11,%rax
    22a2:	48 8d 50 01          	lea    0x1(%rax),%rdx
    22a6:	49 89 d3             	mov    %rdx,%r11
    22a9:	0f b6 10             	movzbl (%rax),%edx
    22ac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    22b0:	8b 08                	mov    (%rax),%ecx
    22b2:	0f be c2             	movsbl %dl,%eax
    22b5:	8d 14 01             	lea    (%rcx,%rax,1),%edx
    22b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    22bc:	89 10                	mov    %edx,(%rax)
    22be:	4c 89 d8             	mov    %r11,%rax
    22c1:	0f b6 00             	movzbl (%rax),%eax
    22c4:	3c 20                	cmp    $0x20,%al
    22c6:	75 d7                	jne    229f <ParseHeader+0x2f>
    22c8:	4c 89 d8             	mov    %r11,%rax
    22cb:	48 83 c0 02          	add    $0x2,%rax
    22cf:	49 89 c3             	mov    %rax,%r11
    22d2:	4c 89 da             	mov    %r11,%rdx
    22d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    22d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    22dd:	48 8d 05 2c 61 00 00 	lea    0x612c(%rip),%rax        # 8410 <_IO_stdin_used+0x410>
    22e4:	f3 0f 6f 08          	movdqu (%rax),%xmm1
    22e8:	f3 41 0f 6f 13       	movdqu (%r11),%xmm2
    22ed:	66 0f 74 d1          	pcmpeqb %xmm1,%xmm2
    22f1:	66 0f 38 17 d2       	ptest  %xmm2,%xmm2
    22f6:	75 06                	jne    22fe <ParseHeader+0x8e>
    22f8:	49 83 c3 10          	add    $0x10,%r11
    22fc:	eb ea                	jmp    22e8 <ParseHeader+0x78>
    22fe:	66 0f d7 ca          	pmovmskb %xmm2,%ecx
    2302:	48 0f bc c9          	bsf    %rcx,%rcx
    2306:	4d 8d 5c 0b 01       	lea    0x1(%r11,%rcx,1),%r11
    230b:	4c 89 d8             	mov    %r11,%rax
    230e:	48 83 e8 01          	sub    $0x1,%rax
    2312:	c6 00 00             	movb   $0x0,(%rax)
    2315:	f3 0f 6f 25 1f 61 00 	movdqu 0x611f(%rip),%xmm4        # 843c <_IO_stdin_used+0x43c>
    231c:	00 
    231d:	f3 0f 6f 1d 06 61 00 	movdqu 0x6106(%rip),%xmm3        # 842b <_IO_stdin_used+0x42b>
    2324:	00 

0000000000002325 <HEAD>:
    2325:	41 0f b6 0b          	movzbl (%r11),%ecx
    2329:	83 f9 0d             	cmp    $0xd,%ecx
    232c:	0f 86 b5 00 00 00    	jbe    23e7 <END>
    2332:	f3 41 0f 6f 0b       	movdqu (%r11),%xmm1
    2337:	f3 0f 6f d4          	movdqu %xmm4,%xmm2
    233b:	66 0f 74 d1          	pcmpeqb %xmm1,%xmm2
    233f:	66 0f 38 17 d2       	ptest  %xmm2,%xmm2
    2344:	75 06                	jne    234c <SKIPADD>
    2346:	49 83 c3 10          	add    $0x10,%r11
    234a:	eb d9                	jmp    2325 <HEAD>

000000000000234c <SKIPADD>:
    234c:	66 44 0f d7 d2       	pmovmskb %xmm2,%r10d
    2351:	66 0f df d1          	pandn  %xmm1,%xmm2
    2355:	f3 41 0f 7f 13       	movdqu %xmm2,(%r11)
    235a:	41 0f bc ca          	bsf    %r10d,%ecx
    235e:	4d 8d 5c 0b 02       	lea    0x2(%r11,%rcx,1),%r11
    2363:	41 0f b6 0b          	movzbl (%r11),%ecx
    2367:	83 f9 0d             	cmp    $0xd,%ecx
    236a:	76 7b                	jbe    23e7 <END>
    236c:	4d 89 d9             	mov    %r11,%r9

000000000000236f <TOKENIZE>:
    236f:	f3 41 0f 6f 0b       	movdqu (%r11),%xmm1
    2374:	66 0f 74 cb          	pcmpeqb %xmm3,%xmm1
    2378:	66 0f 38 17 c9       	ptest  %xmm1,%xmm1
    237d:	75 06                	jne    2385 <FOUND>
    237f:	49 83 c3 10          	add    $0x10,%r11
    2383:	eb ea                	jmp    236f <TOKENIZE>

0000000000002385 <FOUND>:
    2385:	66 44 0f d7 d1       	pmovmskb %xmm1,%r10d
    238a:	41 0f bc ca          	bsf    %r10d,%ecx
    238e:	4d 8d 5c 0b 02       	lea    0x2(%r11,%rcx,1),%r11
    2393:	4c 89 d8             	mov    %r11,%rax
    2396:	48 89 c6             	mov    %rax,%rsi
    2399:	48 8d 3d 81 60 00 00 	lea    0x6081(%rip),%rdi        # 8421 <_IO_stdin_used+0x421>
    23a0:	b8 00 00 00 00       	mov    $0x0,%eax
    23a5:	e8 76 ed ff ff       	callq  1120 <printf@plt>
    23aa:	4c 89 d8             	mov    %r11,%rax
    23ad:	4c 89 ca             	mov    %r9,%rdx
    23b0:	48 29 d0             	sub    %rdx,%rax
    23b3:	48 83 e8 02          	sub    $0x2,%rax
    23b7:	48 89 c2             	mov    %rax,%rdx
    23ba:	4c 89 c8             	mov    %r9,%rax
    23bd:	48 89 d6             	mov    %rdx,%rsi
    23c0:	48 89 c7             	mov    %rax,%rdi
    23c3:	e8 2f fd ff ff       	callq  20f7 <hdr_ind>
    23c8:	48 98                	cltq   
    23ca:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    23ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    23d2:	48 a9 ff ff ff ff    	test   $0xffffffffffffffff,%rax
    23d8:	0f 88 47 ff ff ff    	js     2325 <HEAD>
    23de:	4c 89 1c c3          	mov    %r11,(%rbx,%rax,8)
    23e2:	e9 3e ff ff ff       	jmpq   2325 <HEAD>

00000000000023e7 <END>:
    23e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    23eb:	90                   	nop
    23ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    23f0:	c9                   	leaveq 
    23f1:	c3                   	retq   

00000000000023f2 <XXH_malloc>:
    23f2:	55                   	push   %rbp
    23f3:	48 89 e5             	mov    %rsp,%rbp
    23f6:	48 83 ec 10          	sub    $0x10,%rsp
    23fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    23fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2402:	48 89 c7             	mov    %rax,%rdi
    2405:	e8 a6 ed ff ff       	callq  11b0 <malloc@plt>
    240a:	c9                   	leaveq 
    240b:	c3                   	retq   

000000000000240c <XXH_free>:
    240c:	55                   	push   %rbp
    240d:	48 89 e5             	mov    %rsp,%rbp
    2410:	48 83 ec 10          	sub    $0x10,%rsp
    2414:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    241c:	48 89 c7             	mov    %rax,%rdi
    241f:	e8 0c ec ff ff       	callq  1030 <free@plt>
    2424:	90                   	nop
    2425:	c9                   	leaveq 
    2426:	c3                   	retq   

0000000000002427 <XXH_memcpy>:
    2427:	55                   	push   %rbp
    2428:	48 89 e5             	mov    %rsp,%rbp
    242b:	48 83 ec 20          	sub    $0x20,%rsp
    242f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2433:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2437:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    243b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    243f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2447:	48 89 ce             	mov    %rcx,%rsi
    244a:	48 89 c7             	mov    %rax,%rdi
    244d:	e8 3e ed ff ff       	callq  1190 <memcpy@plt>
    2452:	c9                   	leaveq 
    2453:	c3                   	retq   

0000000000002454 <XXH_read32>:
    2454:	55                   	push   %rbp
    2455:	48 89 e5             	mov    %rsp,%rbp
    2458:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    245c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2460:	8b 00                	mov    (%rax),%eax
    2462:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2465:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2468:	5d                   	pop    %rbp
    2469:	c3                   	retq   

000000000000246a <XXH_readLE32>:
    246a:	55                   	push   %rbp
    246b:	48 89 e5             	mov    %rsp,%rbp
    246e:	48 83 ec 08          	sub    $0x8,%rsp
    2472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2476:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    247a:	48 89 c7             	mov    %rax,%rdi
    247d:	e8 d2 ff ff ff       	callq  2454 <XXH_read32>
    2482:	c9                   	leaveq 
    2483:	c3                   	retq   

0000000000002484 <XXH_readBE32>:
    2484:	55                   	push   %rbp
    2485:	48 89 e5             	mov    %rsp,%rbp
    2488:	48 83 ec 08          	sub    $0x8,%rsp
    248c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2494:	48 89 c7             	mov    %rax,%rdi
    2497:	e8 b8 ff ff ff       	callq  2454 <XXH_read32>
    249c:	0f c8                	bswap  %eax
    249e:	c9                   	leaveq 
    249f:	c3                   	retq   

00000000000024a0 <XXH_readLE32_align>:
    24a0:	55                   	push   %rbp
    24a1:	48 89 e5             	mov    %rsp,%rbp
    24a4:	48 83 ec 10          	sub    $0x10,%rsp
    24a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    24ac:	89 75 f4             	mov    %esi,-0xc(%rbp)
    24af:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
    24b3:	75 0e                	jne    24c3 <XXH_readLE32_align+0x23>
    24b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    24b9:	48 89 c7             	mov    %rax,%rdi
    24bc:	e8 a9 ff ff ff       	callq  246a <XXH_readLE32>
    24c1:	eb 06                	jmp    24c9 <XXH_readLE32_align+0x29>
    24c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    24c7:	8b 00                	mov    (%rax),%eax
    24c9:	c9                   	leaveq 
    24ca:	c3                   	retq   

00000000000024cb <XXH_versionNumber>:
    24cb:	55                   	push   %rbp
    24cc:	48 89 e5             	mov    %rsp,%rbp
    24cf:	b8 20 03 00 00       	mov    $0x320,%eax
    24d4:	5d                   	pop    %rbp
    24d5:	c3                   	retq   

00000000000024d6 <XXH32_round>:
    24d6:	55                   	push   %rbp
    24d7:	48 89 e5             	mov    %rsp,%rbp
    24da:	89 7d fc             	mov    %edi,-0x4(%rbp)
    24dd:	89 75 f8             	mov    %esi,-0x8(%rbp)
    24e0:	b8 77 ca eb 85       	mov    $0x85ebca77,%eax
    24e5:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    24e9:	01 45 fc             	add    %eax,-0x4(%rbp)
    24ec:	c1 45 fc 0d          	roll   $0xd,-0x4(%rbp)
    24f0:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    24f5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    24f8:	0f af c2             	imul   %edx,%eax
    24fb:	89 45 fc             	mov    %eax,-0x4(%rbp)
    24fe:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2501:	5d                   	pop    %rbp
    2502:	c3                   	retq   

0000000000002503 <XXH32_avalanche>:
    2503:	55                   	push   %rbp
    2504:	48 89 e5             	mov    %rsp,%rbp
    2507:	89 7d fc             	mov    %edi,-0x4(%rbp)
    250a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    250d:	c1 e8 0f             	shr    $0xf,%eax
    2510:	31 45 fc             	xor    %eax,-0x4(%rbp)
    2513:	ba 77 ca eb 85       	mov    $0x85ebca77,%edx
    2518:	8b 45 fc             	mov    -0x4(%rbp),%eax
    251b:	0f af c2             	imul   %edx,%eax
    251e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2521:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2524:	c1 e8 0d             	shr    $0xd,%eax
    2527:	31 45 fc             	xor    %eax,-0x4(%rbp)
    252a:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    252f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2532:	0f af c2             	imul   %edx,%eax
    2535:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2538:	8b 45 fc             	mov    -0x4(%rbp),%eax
    253b:	c1 e8 10             	shr    $0x10,%eax
    253e:	31 45 fc             	xor    %eax,-0x4(%rbp)
    2541:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2544:	5d                   	pop    %rbp
    2545:	c3                   	retq   

0000000000002546 <XXH32_finalize>:
    2546:	55                   	push   %rbp
    2547:	48 89 e5             	mov    %rsp,%rbp
    254a:	48 83 ec 18          	sub    $0x18,%rsp
    254e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2551:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2555:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    2559:	89 4d f8             	mov    %ecx,-0x8(%rbp)
    255c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2560:	83 e0 0f             	and    $0xf,%eax
    2563:	48 83 f8 0f          	cmp    $0xf,%rax
    2567:	0f 87 c5 03 00 00    	ja     2932 <XXH32_finalize+0x3ec>
    256d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2574:	00 
    2575:	48 8d 05 18 5f 00 00 	lea    0x5f18(%rip),%rax        # 8494 <XXH_PRIME32_5+0x4>
    257c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    257f:	48 98                	cltq   
    2581:	48 8d 15 0c 5f 00 00 	lea    0x5f0c(%rip),%rdx        # 8494 <XXH_PRIME32_5+0x4>
    2588:	48 01 d0             	add    %rdx,%rax
    258b:	ff e0                	jmpq   *%rax
    258d:	8b 55 f8             	mov    -0x8(%rbp),%edx
    2590:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2594:	89 d6                	mov    %edx,%esi
    2596:	48 89 c7             	mov    %rax,%rdi
    2599:	e8 02 ff ff ff       	callq  24a0 <XXH_readLE32_align>
    259e:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    25a3:	0f af c2             	imul   %edx,%eax
    25a6:	01 45 fc             	add    %eax,-0x4(%rbp)
    25a9:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    25ae:	8b 45 fc             	mov    -0x4(%rbp),%eax
    25b1:	c1 c8 0f             	ror    $0xf,%eax
    25b4:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    25b9:	0f af c2             	imul   %edx,%eax
    25bc:	89 45 fc             	mov    %eax,-0x4(%rbp)
    25bf:	8b 55 f8             	mov    -0x8(%rbp),%edx
    25c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    25c6:	89 d6                	mov    %edx,%esi
    25c8:	48 89 c7             	mov    %rax,%rdi
    25cb:	e8 d0 fe ff ff       	callq  24a0 <XXH_readLE32_align>
    25d0:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    25d5:	0f af c2             	imul   %edx,%eax
    25d8:	01 45 fc             	add    %eax,-0x4(%rbp)
    25db:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    25e0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    25e3:	c1 c8 0f             	ror    $0xf,%eax
    25e6:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    25eb:	0f af c2             	imul   %edx,%eax
    25ee:	89 45 fc             	mov    %eax,-0x4(%rbp)
    25f1:	8b 55 f8             	mov    -0x8(%rbp),%edx
    25f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    25f8:	89 d6                	mov    %edx,%esi
    25fa:	48 89 c7             	mov    %rax,%rdi
    25fd:	e8 9e fe ff ff       	callq  24a0 <XXH_readLE32_align>
    2602:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    2607:	0f af c2             	imul   %edx,%eax
    260a:	01 45 fc             	add    %eax,-0x4(%rbp)
    260d:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    2612:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2615:	c1 c8 0f             	ror    $0xf,%eax
    2618:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    261d:	0f af c2             	imul   %edx,%eax
    2620:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2623:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2626:	89 c7                	mov    %eax,%edi
    2628:	e8 d6 fe ff ff       	callq  2503 <XXH32_avalanche>
    262d:	e9 03 03 00 00       	jmpq   2935 <XXH32_finalize+0x3ef>
    2632:	8b 55 f8             	mov    -0x8(%rbp),%edx
    2635:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2639:	89 d6                	mov    %edx,%esi
    263b:	48 89 c7             	mov    %rax,%rdi
    263e:	e8 5d fe ff ff       	callq  24a0 <XXH_readLE32_align>
    2643:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    2648:	0f af c2             	imul   %edx,%eax
    264b:	01 45 fc             	add    %eax,-0x4(%rbp)
    264e:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    2653:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2656:	c1 c8 0f             	ror    $0xf,%eax
    2659:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    265e:	0f af c2             	imul   %edx,%eax
    2661:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2664:	8b 55 f8             	mov    -0x8(%rbp),%edx
    2667:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    266b:	89 d6                	mov    %edx,%esi
    266d:	48 89 c7             	mov    %rax,%rdi
    2670:	e8 2b fe ff ff       	callq  24a0 <XXH_readLE32_align>
    2675:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    267a:	0f af c2             	imul   %edx,%eax
    267d:	01 45 fc             	add    %eax,-0x4(%rbp)
    2680:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    2685:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2688:	c1 c8 0f             	ror    $0xf,%eax
    268b:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    2690:	0f af c2             	imul   %edx,%eax
    2693:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2696:	8b 55 f8             	mov    -0x8(%rbp),%edx
    2699:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    269d:	89 d6                	mov    %edx,%esi
    269f:	48 89 c7             	mov    %rax,%rdi
    26a2:	e8 f9 fd ff ff       	callq  24a0 <XXH_readLE32_align>
    26a7:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    26ac:	0f af c2             	imul   %edx,%eax
    26af:	01 45 fc             	add    %eax,-0x4(%rbp)
    26b2:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    26b7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    26ba:	c1 c8 0f             	ror    $0xf,%eax
    26bd:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    26c2:	0f af c2             	imul   %edx,%eax
    26c5:	89 45 fc             	mov    %eax,-0x4(%rbp)
    26c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    26cc:	48 8d 50 01          	lea    0x1(%rax),%rdx
    26d0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    26d4:	0f b6 00             	movzbl (%rax),%eax
    26d7:	0f b6 c0             	movzbl %al,%eax
    26da:	ba b1 67 56 16       	mov    $0x165667b1,%edx
    26df:	0f af c2             	imul   %edx,%eax
    26e2:	01 45 fc             	add    %eax,-0x4(%rbp)
    26e5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    26e8:	c1 c0 0b             	rol    $0xb,%eax
    26eb:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    26f0:	0f af c2             	imul   %edx,%eax
    26f3:	89 45 fc             	mov    %eax,-0x4(%rbp)
    26f6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    26f9:	89 c7                	mov    %eax,%edi
    26fb:	e8 03 fe ff ff       	callq  2503 <XXH32_avalanche>
    2700:	e9 30 02 00 00       	jmpq   2935 <XXH32_finalize+0x3ef>
    2705:	8b 55 f8             	mov    -0x8(%rbp),%edx
    2708:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    270c:	89 d6                	mov    %edx,%esi
    270e:	48 89 c7             	mov    %rax,%rdi
    2711:	e8 8a fd ff ff       	callq  24a0 <XXH_readLE32_align>
    2716:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    271b:	0f af c2             	imul   %edx,%eax
    271e:	01 45 fc             	add    %eax,-0x4(%rbp)
    2721:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    2726:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2729:	c1 c8 0f             	ror    $0xf,%eax
    272c:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    2731:	0f af c2             	imul   %edx,%eax
    2734:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2737:	8b 55 f8             	mov    -0x8(%rbp),%edx
    273a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    273e:	89 d6                	mov    %edx,%esi
    2740:	48 89 c7             	mov    %rax,%rdi
    2743:	e8 58 fd ff ff       	callq  24a0 <XXH_readLE32_align>
    2748:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    274d:	0f af c2             	imul   %edx,%eax
    2750:	01 45 fc             	add    %eax,-0x4(%rbp)
    2753:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    2758:	8b 45 fc             	mov    -0x4(%rbp),%eax
    275b:	c1 c8 0f             	ror    $0xf,%eax
    275e:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    2763:	0f af c2             	imul   %edx,%eax
    2766:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2769:	8b 55 f8             	mov    -0x8(%rbp),%edx
    276c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2770:	89 d6                	mov    %edx,%esi
    2772:	48 89 c7             	mov    %rax,%rdi
    2775:	e8 26 fd ff ff       	callq  24a0 <XXH_readLE32_align>
    277a:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    277f:	0f af c2             	imul   %edx,%eax
    2782:	01 45 fc             	add    %eax,-0x4(%rbp)
    2785:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    278a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    278d:	c1 c8 0f             	ror    $0xf,%eax
    2790:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    2795:	0f af c2             	imul   %edx,%eax
    2798:	89 45 fc             	mov    %eax,-0x4(%rbp)
    279b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    279f:	48 8d 50 01          	lea    0x1(%rax),%rdx
    27a3:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    27a7:	0f b6 00             	movzbl (%rax),%eax
    27aa:	0f b6 c0             	movzbl %al,%eax
    27ad:	ba b1 67 56 16       	mov    $0x165667b1,%edx
    27b2:	0f af c2             	imul   %edx,%eax
    27b5:	01 45 fc             	add    %eax,-0x4(%rbp)
    27b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27bb:	c1 c0 0b             	rol    $0xb,%eax
    27be:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    27c3:	0f af c2             	imul   %edx,%eax
    27c6:	89 45 fc             	mov    %eax,-0x4(%rbp)
    27c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    27cd:	48 8d 50 01          	lea    0x1(%rax),%rdx
    27d1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    27d5:	0f b6 00             	movzbl (%rax),%eax
    27d8:	0f b6 c0             	movzbl %al,%eax
    27db:	ba b1 67 56 16       	mov    $0x165667b1,%edx
    27e0:	0f af c2             	imul   %edx,%eax
    27e3:	01 45 fc             	add    %eax,-0x4(%rbp)
    27e6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27e9:	c1 c0 0b             	rol    $0xb,%eax
    27ec:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    27f1:	0f af c2             	imul   %edx,%eax
    27f4:	89 45 fc             	mov    %eax,-0x4(%rbp)
    27f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27fa:	89 c7                	mov    %eax,%edi
    27fc:	e8 02 fd ff ff       	callq  2503 <XXH32_avalanche>
    2801:	e9 2f 01 00 00       	jmpq   2935 <XXH32_finalize+0x3ef>
    2806:	8b 55 f8             	mov    -0x8(%rbp),%edx
    2809:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    280d:	89 d6                	mov    %edx,%esi
    280f:	48 89 c7             	mov    %rax,%rdi
    2812:	e8 89 fc ff ff       	callq  24a0 <XXH_readLE32_align>
    2817:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    281c:	0f af c2             	imul   %edx,%eax
    281f:	01 45 fc             	add    %eax,-0x4(%rbp)
    2822:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    2827:	8b 45 fc             	mov    -0x4(%rbp),%eax
    282a:	c1 c8 0f             	ror    $0xf,%eax
    282d:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    2832:	0f af c2             	imul   %edx,%eax
    2835:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2838:	8b 55 f8             	mov    -0x8(%rbp),%edx
    283b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    283f:	89 d6                	mov    %edx,%esi
    2841:	48 89 c7             	mov    %rax,%rdi
    2844:	e8 57 fc ff ff       	callq  24a0 <XXH_readLE32_align>
    2849:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    284e:	0f af c2             	imul   %edx,%eax
    2851:	01 45 fc             	add    %eax,-0x4(%rbp)
    2854:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    2859:	8b 45 fc             	mov    -0x4(%rbp),%eax
    285c:	c1 c8 0f             	ror    $0xf,%eax
    285f:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    2864:	0f af c2             	imul   %edx,%eax
    2867:	89 45 fc             	mov    %eax,-0x4(%rbp)
    286a:	8b 55 f8             	mov    -0x8(%rbp),%edx
    286d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2871:	89 d6                	mov    %edx,%esi
    2873:	48 89 c7             	mov    %rax,%rdi
    2876:	e8 25 fc ff ff       	callq  24a0 <XXH_readLE32_align>
    287b:	ba 3d ae b2 c2       	mov    $0xc2b2ae3d,%edx
    2880:	0f af c2             	imul   %edx,%eax
    2883:	01 45 fc             	add    %eax,-0x4(%rbp)
    2886:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    288b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    288e:	c1 c8 0f             	ror    $0xf,%eax
    2891:	ba 2f eb d4 27       	mov    $0x27d4eb2f,%edx
    2896:	0f af c2             	imul   %edx,%eax
    2899:	89 45 fc             	mov    %eax,-0x4(%rbp)
    289c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    28a0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    28a4:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    28a8:	0f b6 00             	movzbl (%rax),%eax
    28ab:	0f b6 c0             	movzbl %al,%eax
    28ae:	ba b1 67 56 16       	mov    $0x165667b1,%edx
    28b3:	0f af c2             	imul   %edx,%eax
    28b6:	01 45 fc             	add    %eax,-0x4(%rbp)
    28b9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    28bc:	c1 c0 0b             	rol    $0xb,%eax
    28bf:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    28c4:	0f af c2             	imul   %edx,%eax
    28c7:	89 45 fc             	mov    %eax,-0x4(%rbp)
    28ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    28ce:	48 8d 50 01          	lea    0x1(%rax),%rdx
    28d2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    28d6:	0f b6 00             	movzbl (%rax),%eax
    28d9:	0f b6 c0             	movzbl %al,%eax
    28dc:	ba b1 67 56 16       	mov    $0x165667b1,%edx
    28e1:	0f af c2             	imul   %edx,%eax
    28e4:	01 45 fc             	add    %eax,-0x4(%rbp)
    28e7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    28ea:	c1 c0 0b             	rol    $0xb,%eax
    28ed:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    28f2:	0f af c2             	imul   %edx,%eax
    28f5:	89 45 fc             	mov    %eax,-0x4(%rbp)
    28f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    28fc:	48 8d 50 01          	lea    0x1(%rax),%rdx
    2900:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    2904:	0f b6 00             	movzbl (%rax),%eax
    2907:	0f b6 c0             	movzbl %al,%eax
    290a:	ba b1 67 56 16       	mov    $0x165667b1,%edx
    290f:	0f af c2             	imul   %edx,%eax
    2912:	01 45 fc             	add    %eax,-0x4(%rbp)
    2915:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2918:	c1 c0 0b             	rol    $0xb,%eax
    291b:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    2920:	0f af c2             	imul   %edx,%eax
    2923:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2926:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2929:	89 c7                	mov    %eax,%edi
    292b:	e8 d3 fb ff ff       	callq  2503 <XXH32_avalanche>
    2930:	eb 03                	jmp    2935 <XXH32_finalize+0x3ef>
    2932:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2935:	c9                   	leaveq 
    2936:	c3                   	retq   

0000000000002937 <XXH32_endian_align>:
    2937:	55                   	push   %rbp
    2938:	48 89 e5             	mov    %rsp,%rbp
    293b:	48 83 ec 48          	sub    $0x48,%rsp
    293f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2943:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    2947:	89 55 bc             	mov    %edx,-0x44(%rbp)
    294a:	89 4d b8             	mov    %ecx,-0x48(%rbp)
    294d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2951:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2955:	48 01 d0             	add    %rdx,%rax
    2958:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    295c:	48 83 7d c0 0f       	cmpq   $0xf,-0x40(%rbp)
    2961:	0f 86 0e 01 00 00    	jbe    2a75 <XXH32_endian_align+0x13e>
    2967:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    296b:	48 83 e8 0f          	sub    $0xf,%rax
    296f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2973:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    2978:	8b 45 bc             	mov    -0x44(%rbp),%eax
    297b:	01 d0                	add    %edx,%eax
    297d:	ba 77 ca eb 85       	mov    $0x85ebca77,%edx
    2982:	01 d0                	add    %edx,%eax
    2984:	89 45 f8             	mov    %eax,-0x8(%rbp)
    2987:	ba 77 ca eb 85       	mov    $0x85ebca77,%edx
    298c:	8b 45 bc             	mov    -0x44(%rbp),%eax
    298f:	01 d0                	add    %edx,%eax
    2991:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2994:	8b 45 bc             	mov    -0x44(%rbp),%eax
    2997:	89 45 f0             	mov    %eax,-0x10(%rbp)
    299a:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    299f:	8b 45 bc             	mov    -0x44(%rbp),%eax
    29a2:	29 d0                	sub    %edx,%eax
    29a4:	89 45 ec             	mov    %eax,-0x14(%rbp)
    29a7:	8b 55 b8             	mov    -0x48(%rbp),%edx
    29aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    29ae:	89 d6                	mov    %edx,%esi
    29b0:	48 89 c7             	mov    %rax,%rdi
    29b3:	e8 e8 fa ff ff       	callq  24a0 <XXH_readLE32_align>
    29b8:	89 c2                	mov    %eax,%edx
    29ba:	8b 45 f8             	mov    -0x8(%rbp),%eax
    29bd:	89 d6                	mov    %edx,%esi
    29bf:	89 c7                	mov    %eax,%edi
    29c1:	e8 10 fb ff ff       	callq  24d6 <XXH32_round>
    29c6:	89 45 f8             	mov    %eax,-0x8(%rbp)
    29c9:	48 83 45 c8 04       	addq   $0x4,-0x38(%rbp)
    29ce:	8b 55 b8             	mov    -0x48(%rbp),%edx
    29d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    29d5:	89 d6                	mov    %edx,%esi
    29d7:	48 89 c7             	mov    %rax,%rdi
    29da:	e8 c1 fa ff ff       	callq  24a0 <XXH_readLE32_align>
    29df:	89 c2                	mov    %eax,%edx
    29e1:	8b 45 f4             	mov    -0xc(%rbp),%eax
    29e4:	89 d6                	mov    %edx,%esi
    29e6:	89 c7                	mov    %eax,%edi
    29e8:	e8 e9 fa ff ff       	callq  24d6 <XXH32_round>
    29ed:	89 45 f4             	mov    %eax,-0xc(%rbp)
    29f0:	48 83 45 c8 04       	addq   $0x4,-0x38(%rbp)
    29f5:	8b 55 b8             	mov    -0x48(%rbp),%edx
    29f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    29fc:	89 d6                	mov    %edx,%esi
    29fe:	48 89 c7             	mov    %rax,%rdi
    2a01:	e8 9a fa ff ff       	callq  24a0 <XXH_readLE32_align>
    2a06:	89 c2                	mov    %eax,%edx
    2a08:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2a0b:	89 d6                	mov    %edx,%esi
    2a0d:	89 c7                	mov    %eax,%edi
    2a0f:	e8 c2 fa ff ff       	callq  24d6 <XXH32_round>
    2a14:	89 45 f0             	mov    %eax,-0x10(%rbp)
    2a17:	48 83 45 c8 04       	addq   $0x4,-0x38(%rbp)
    2a1c:	8b 55 b8             	mov    -0x48(%rbp),%edx
    2a1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a23:	89 d6                	mov    %edx,%esi
    2a25:	48 89 c7             	mov    %rax,%rdi
    2a28:	e8 73 fa ff ff       	callq  24a0 <XXH_readLE32_align>
    2a2d:	89 c2                	mov    %eax,%edx
    2a2f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2a32:	89 d6                	mov    %edx,%esi
    2a34:	89 c7                	mov    %eax,%edi
    2a36:	e8 9b fa ff ff       	callq  24d6 <XXH32_round>
    2a3b:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2a3e:	48 83 45 c8 04       	addq   $0x4,-0x38(%rbp)
    2a43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a47:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    2a4b:	0f 82 56 ff ff ff    	jb     29a7 <XXH32_endian_align+0x70>
    2a51:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2a54:	d1 c0                	rol    %eax
    2a56:	89 c2                	mov    %eax,%edx
    2a58:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2a5b:	c1 c0 07             	rol    $0x7,%eax
    2a5e:	01 c2                	add    %eax,%edx
    2a60:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2a63:	c1 c0 0c             	rol    $0xc,%eax
    2a66:	01 c2                	add    %eax,%edx
    2a68:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2a6b:	c1 c8 0e             	ror    $0xe,%eax
    2a6e:	01 d0                	add    %edx,%eax
    2a70:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2a73:	eb 0d                	jmp    2a82 <XXH32_endian_align+0x14b>
    2a75:	ba b1 67 56 16       	mov    $0x165667b1,%edx
    2a7a:	8b 45 bc             	mov    -0x44(%rbp),%eax
    2a7d:	01 d0                	add    %edx,%eax
    2a7f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2a82:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2a86:	01 45 fc             	add    %eax,-0x4(%rbp)
    2a89:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2a8d:	83 e0 0f             	and    $0xf,%eax
    2a90:	48 89 c7             	mov    %rax,%rdi
    2a93:	8b 55 b8             	mov    -0x48(%rbp),%edx
    2a96:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2a9a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2a9d:	89 d1                	mov    %edx,%ecx
    2a9f:	48 89 fa             	mov    %rdi,%rdx
    2aa2:	89 c7                	mov    %eax,%edi
    2aa4:	e8 9d fa ff ff       	callq  2546 <XXH32_finalize>
    2aa9:	c9                   	leaveq 
    2aaa:	c3                   	retq   

0000000000002aab <XXH32>:
    2aab:	55                   	push   %rbp
    2aac:	48 89 e5             	mov    %rsp,%rbp
    2aaf:	48 83 ec 18          	sub    $0x18,%rsp
    2ab3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2ab7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2abb:	89 55 ec             	mov    %edx,-0x14(%rbp)
    2abe:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2ac1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ac9:	b9 01 00 00 00       	mov    $0x1,%ecx
    2ace:	48 89 c7             	mov    %rax,%rdi
    2ad1:	e8 61 fe ff ff       	callq  2937 <XXH32_endian_align>
    2ad6:	c9                   	leaveq 
    2ad7:	c3                   	retq   

0000000000002ad8 <XXH32_createState>:
    2ad8:	55                   	push   %rbp
    2ad9:	48 89 e5             	mov    %rsp,%rbp
    2adc:	bf 30 00 00 00       	mov    $0x30,%edi
    2ae1:	e8 0c f9 ff ff       	callq  23f2 <XXH_malloc>
    2ae6:	5d                   	pop    %rbp
    2ae7:	c3                   	retq   

0000000000002ae8 <XXH32_freeState>:
    2ae8:	55                   	push   %rbp
    2ae9:	48 89 e5             	mov    %rsp,%rbp
    2aec:	48 83 ec 10          	sub    $0x10,%rsp
    2af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2af8:	48 89 c7             	mov    %rax,%rdi
    2afb:	e8 0c f9 ff ff       	callq  240c <XXH_free>
    2b00:	b8 00 00 00 00       	mov    $0x0,%eax
    2b05:	c9                   	leaveq 
    2b06:	c3                   	retq   

0000000000002b07 <XXH32_copyState>:
    2b07:	55                   	push   %rbp
    2b08:	48 89 e5             	mov    %rsp,%rbp
    2b0b:	48 83 ec 10          	sub    $0x10,%rsp
    2b0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2b13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2b17:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b1f:	ba 30 00 00 00       	mov    $0x30,%edx
    2b24:	48 89 ce             	mov    %rcx,%rsi
    2b27:	48 89 c7             	mov    %rax,%rdi
    2b2a:	e8 61 e6 ff ff       	callq  1190 <memcpy@plt>
    2b2f:	90                   	nop
    2b30:	c9                   	leaveq 
    2b31:	c3                   	retq   

0000000000002b32 <XXH32_reset>:
    2b32:	55                   	push   %rbp
    2b33:	48 89 e5             	mov    %rsp,%rbp
    2b36:	48 83 ec 40          	sub    $0x40,%rsp
    2b3a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2b3e:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    2b41:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2b45:	ba 30 00 00 00       	mov    $0x30,%edx
    2b4a:	be 00 00 00 00       	mov    $0x0,%esi
    2b4f:	48 89 c7             	mov    %rax,%rdi
    2b52:	e8 d9 e5 ff ff       	callq  1130 <memset@plt>
    2b57:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    2b5c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2b5f:	01 d0                	add    %edx,%eax
    2b61:	ba 77 ca eb 85       	mov    $0x85ebca77,%edx
    2b66:	01 d0                	add    %edx,%eax
    2b68:	89 45 d8             	mov    %eax,-0x28(%rbp)
    2b6b:	ba 77 ca eb 85       	mov    $0x85ebca77,%edx
    2b70:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2b73:	01 d0                	add    %edx,%eax
    2b75:	89 45 dc             	mov    %eax,-0x24(%rbp)
    2b78:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2b7b:	89 45 e0             	mov    %eax,-0x20(%rbp)
    2b7e:	ba b1 79 37 9e       	mov    $0x9e3779b1,%edx
    2b83:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2b86:	29 d0                	sub    %edx,%eax
    2b88:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    2b8b:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    2b8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2b93:	ba 2c 00 00 00       	mov    $0x2c,%edx
    2b98:	48 89 ce             	mov    %rcx,%rsi
    2b9b:	48 89 c7             	mov    %rax,%rdi
    2b9e:	e8 ed e5 ff ff       	callq  1190 <memcpy@plt>
    2ba3:	b8 00 00 00 00       	mov    $0x0,%eax
    2ba8:	c9                   	leaveq 
    2ba9:	c3                   	retq   

0000000000002baa <XXH32_update>:
    2baa:	55                   	push   %rbp
    2bab:	48 89 e5             	mov    %rsp,%rbp
    2bae:	48 83 ec 50          	sub    $0x50,%rsp
    2bb2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2bb6:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    2bba:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    2bbe:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    2bc3:	75 0a                	jne    2bcf <XXH32_update+0x25>
    2bc5:	b8 01 00 00 00       	mov    $0x1,%eax
    2bca:	e9 04 03 00 00       	jmpq   2ed3 <XXH32_update+0x329>
    2bcf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2bd3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2bd7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2bdb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2bdf:	48 01 d0             	add    %rdx,%rax
    2be2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2be6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2bea:	8b 10                	mov    (%rax),%edx
    2bec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2bf0:	01 c2                	add    %eax,%edx
    2bf2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2bf6:	89 10                	mov    %edx,(%rax)
    2bf8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2bfc:	8b 50 04             	mov    0x4(%rax),%edx
    2bff:	48 83 7d b8 0f       	cmpq   $0xf,-0x48(%rbp)
    2c04:	0f 97 c1             	seta   %cl
    2c07:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c0b:	8b 00                	mov    (%rax),%eax
    2c0d:	83 f8 0f             	cmp    $0xf,%eax
    2c10:	0f 97 c0             	seta   %al
    2c13:	09 c8                	or     %ecx,%eax
    2c15:	0f b6 c0             	movzbl %al,%eax
    2c18:	09 c2                	or     %eax,%edx
    2c1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c1e:	89 50 04             	mov    %edx,0x4(%rax)
    2c21:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c25:	8b 40 28             	mov    0x28(%rax),%eax
    2c28:	89 c2                	mov    %eax,%edx
    2c2a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2c2e:	48 01 d0             	add    %rdx,%rax
    2c31:	48 83 f8 0f          	cmp    $0xf,%rax
    2c35:	77 46                	ja     2c7d <XXH32_update+0xd3>
    2c37:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c3b:	48 8d 50 18          	lea    0x18(%rax),%rdx
    2c3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c43:	8b 40 28             	mov    0x28(%rax),%eax
    2c46:	89 c0                	mov    %eax,%eax
    2c48:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    2c4c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    2c50:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2c54:	48 89 c6             	mov    %rax,%rsi
    2c57:	48 89 cf             	mov    %rcx,%rdi
    2c5a:	e8 c8 f7 ff ff       	callq  2427 <XXH_memcpy>
    2c5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c63:	8b 50 28             	mov    0x28(%rax),%edx
    2c66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2c6a:	01 c2                	add    %eax,%edx
    2c6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c70:	89 50 28             	mov    %edx,0x28(%rax)
    2c73:	b8 00 00 00 00       	mov    $0x0,%eax
    2c78:	e9 56 02 00 00       	jmpq   2ed3 <XXH32_update+0x329>
    2c7d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c81:	8b 40 28             	mov    0x28(%rax),%eax
    2c84:	85 c0                	test   %eax,%eax
    2c86:	0f 84 01 01 00 00    	je     2d8d <XXH32_update+0x1e3>
    2c8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c90:	8b 40 28             	mov    0x28(%rax),%eax
    2c93:	ba 10 00 00 00       	mov    $0x10,%edx
    2c98:	29 c2                	sub    %eax,%edx
    2c9a:	89 d2                	mov    %edx,%edx
    2c9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ca0:	48 8d 48 18          	lea    0x18(%rax),%rcx
    2ca4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ca8:	8b 40 28             	mov    0x28(%rax),%eax
    2cab:	89 c0                	mov    %eax,%eax
    2cad:	48 01 c1             	add    %rax,%rcx
    2cb0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2cb4:	48 89 c6             	mov    %rax,%rsi
    2cb7:	48 89 cf             	mov    %rcx,%rdi
    2cba:	e8 68 f7 ff ff       	callq  2427 <XXH_memcpy>
    2cbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2cc3:	48 83 c0 18          	add    $0x18,%rax
    2cc7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2ccb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ccf:	48 89 c7             	mov    %rax,%rdi
    2cd2:	e8 93 f7 ff ff       	callq  246a <XXH_readLE32>
    2cd7:	89 c2                	mov    %eax,%edx
    2cd9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2cdd:	8b 40 08             	mov    0x8(%rax),%eax
    2ce0:	89 d6                	mov    %edx,%esi
    2ce2:	89 c7                	mov    %eax,%edi
    2ce4:	e8 ed f7 ff ff       	callq  24d6 <XXH32_round>
    2ce9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2ced:	89 42 08             	mov    %eax,0x8(%rdx)
    2cf0:	48 83 45 d8 04       	addq   $0x4,-0x28(%rbp)
    2cf5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cf9:	48 89 c7             	mov    %rax,%rdi
    2cfc:	e8 69 f7 ff ff       	callq  246a <XXH_readLE32>
    2d01:	89 c2                	mov    %eax,%edx
    2d03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2d07:	8b 40 0c             	mov    0xc(%rax),%eax
    2d0a:	89 d6                	mov    %edx,%esi
    2d0c:	89 c7                	mov    %eax,%edi
    2d0e:	e8 c3 f7 ff ff       	callq  24d6 <XXH32_round>
    2d13:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2d17:	89 42 0c             	mov    %eax,0xc(%rdx)
    2d1a:	48 83 45 d8 04       	addq   $0x4,-0x28(%rbp)
    2d1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d23:	48 89 c7             	mov    %rax,%rdi
    2d26:	e8 3f f7 ff ff       	callq  246a <XXH_readLE32>
    2d2b:	89 c2                	mov    %eax,%edx
    2d2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2d31:	8b 40 10             	mov    0x10(%rax),%eax
    2d34:	89 d6                	mov    %edx,%esi
    2d36:	89 c7                	mov    %eax,%edi
    2d38:	e8 99 f7 ff ff       	callq  24d6 <XXH32_round>
    2d3d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2d41:	89 42 10             	mov    %eax,0x10(%rdx)
    2d44:	48 83 45 d8 04       	addq   $0x4,-0x28(%rbp)
    2d49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d4d:	48 89 c7             	mov    %rax,%rdi
    2d50:	e8 15 f7 ff ff       	callq  246a <XXH_readLE32>
    2d55:	89 c2                	mov    %eax,%edx
    2d57:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2d5b:	8b 40 14             	mov    0x14(%rax),%eax
    2d5e:	89 d6                	mov    %edx,%esi
    2d60:	89 c7                	mov    %eax,%edi
    2d62:	e8 6f f7 ff ff       	callq  24d6 <XXH32_round>
    2d67:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2d6b:	89 42 14             	mov    %eax,0x14(%rdx)
    2d6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2d72:	8b 40 28             	mov    0x28(%rax),%eax
    2d75:	ba 10 00 00 00       	mov    $0x10,%edx
    2d7a:	29 c2                	sub    %eax,%edx
    2d7c:	89 d0                	mov    %edx,%eax
    2d7e:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    2d82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2d86:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
    2d8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2d91:	48 83 e8 10          	sub    $0x10,%rax
    2d95:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    2d99:	0f 87 f2 00 00 00    	ja     2e91 <XXH32_update+0x2e7>
    2d9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2da3:	48 83 e8 10          	sub    $0x10,%rax
    2da7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2dab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2daf:	8b 40 08             	mov    0x8(%rax),%eax
    2db2:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2db5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2db9:	8b 40 0c             	mov    0xc(%rax),%eax
    2dbc:	89 45 f0             	mov    %eax,-0x10(%rbp)
    2dbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2dc3:	8b 40 10             	mov    0x10(%rax),%eax
    2dc6:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2dc9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2dcd:	8b 40 14             	mov    0x14(%rax),%eax
    2dd0:	89 45 e8             	mov    %eax,-0x18(%rbp)
    2dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2dd7:	48 89 c7             	mov    %rax,%rdi
    2dda:	e8 8b f6 ff ff       	callq  246a <XXH_readLE32>
    2ddf:	89 c2                	mov    %eax,%edx
    2de1:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2de4:	89 d6                	mov    %edx,%esi
    2de6:	89 c7                	mov    %eax,%edi
    2de8:	e8 e9 f6 ff ff       	callq  24d6 <XXH32_round>
    2ded:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2df0:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    2df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2df9:	48 89 c7             	mov    %rax,%rdi
    2dfc:	e8 69 f6 ff ff       	callq  246a <XXH_readLE32>
    2e01:	89 c2                	mov    %eax,%edx
    2e03:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2e06:	89 d6                	mov    %edx,%esi
    2e08:	89 c7                	mov    %eax,%edi
    2e0a:	e8 c7 f6 ff ff       	callq  24d6 <XXH32_round>
    2e0f:	89 45 f0             	mov    %eax,-0x10(%rbp)
    2e12:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    2e17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e1b:	48 89 c7             	mov    %rax,%rdi
    2e1e:	e8 47 f6 ff ff       	callq  246a <XXH_readLE32>
    2e23:	89 c2                	mov    %eax,%edx
    2e25:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2e28:	89 d6                	mov    %edx,%esi
    2e2a:	89 c7                	mov    %eax,%edi
    2e2c:	e8 a5 f6 ff ff       	callq  24d6 <XXH32_round>
    2e31:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2e34:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    2e39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e3d:	48 89 c7             	mov    %rax,%rdi
    2e40:	e8 25 f6 ff ff       	callq  246a <XXH_readLE32>
    2e45:	89 c2                	mov    %eax,%edx
    2e47:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2e4a:	89 d6                	mov    %edx,%esi
    2e4c:	89 c7                	mov    %eax,%edi
    2e4e:	e8 83 f6 ff ff       	callq  24d6 <XXH32_round>
    2e53:	89 45 e8             	mov    %eax,-0x18(%rbp)
    2e56:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    2e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e5f:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    2e63:	0f 86 6a ff ff ff    	jbe    2dd3 <XXH32_update+0x229>
    2e69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2e6d:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2e70:	89 50 08             	mov    %edx,0x8(%rax)
    2e73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2e77:	8b 55 f0             	mov    -0x10(%rbp),%edx
    2e7a:	89 50 0c             	mov    %edx,0xc(%rax)
    2e7d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2e81:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2e84:	89 50 10             	mov    %edx,0x10(%rax)
    2e87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2e8b:	8b 55 e8             	mov    -0x18(%rbp),%edx
    2e8e:	89 50 14             	mov    %edx,0x14(%rax)
    2e91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e95:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    2e99:	73 33                	jae    2ece <XXH32_update+0x324>
    2e9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2e9f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    2ea3:	48 89 c2             	mov    %rax,%rdx
    2ea6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2eaa:	48 8d 48 18          	lea    0x18(%rax),%rcx
    2eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2eb2:	48 89 c6             	mov    %rax,%rsi
    2eb5:	48 89 cf             	mov    %rcx,%rdi
    2eb8:	e8 6a f5 ff ff       	callq  2427 <XXH_memcpy>
    2ebd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2ec1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    2ec5:	89 c2                	mov    %eax,%edx
    2ec7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ecb:	89 50 28             	mov    %edx,0x28(%rax)
    2ece:	b8 00 00 00 00       	mov    $0x0,%eax
    2ed3:	c9                   	leaveq 
    2ed4:	c3                   	retq   

0000000000002ed5 <XXH32_digest>:
    2ed5:	55                   	push   %rbp
    2ed6:	48 89 e5             	mov    %rsp,%rbp
    2ed9:	48 83 ec 18          	sub    $0x18,%rsp
    2edd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ee5:	8b 40 04             	mov    0x4(%rax),%eax
    2ee8:	85 c0                	test   %eax,%eax
    2eea:	74 34                	je     2f20 <XXH32_digest+0x4b>
    2eec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ef0:	8b 40 08             	mov    0x8(%rax),%eax
    2ef3:	d1 c0                	rol    %eax
    2ef5:	89 c2                	mov    %eax,%edx
    2ef7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2efb:	8b 40 0c             	mov    0xc(%rax),%eax
    2efe:	c1 c0 07             	rol    $0x7,%eax
    2f01:	01 c2                	add    %eax,%edx
    2f03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f07:	8b 40 10             	mov    0x10(%rax),%eax
    2f0a:	c1 c0 0c             	rol    $0xc,%eax
    2f0d:	01 c2                	add    %eax,%edx
    2f0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f13:	8b 40 14             	mov    0x14(%rax),%eax
    2f16:	c1 c8 0e             	ror    $0xe,%eax
    2f19:	01 d0                	add    %edx,%eax
    2f1b:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2f1e:	eb 11                	jmp    2f31 <XXH32_digest+0x5c>
    2f20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f24:	8b 40 10             	mov    0x10(%rax),%eax
    2f27:	ba b1 67 56 16       	mov    $0x165667b1,%edx
    2f2c:	01 d0                	add    %edx,%eax
    2f2e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2f31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f35:	8b 00                	mov    (%rax),%eax
    2f37:	01 45 fc             	add    %eax,-0x4(%rbp)
    2f3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f3e:	8b 40 28             	mov    0x28(%rax),%eax
    2f41:	89 c2                	mov    %eax,%edx
    2f43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f47:	48 8d 70 18          	lea    0x18(%rax),%rsi
    2f4b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2f4e:	b9 00 00 00 00       	mov    $0x0,%ecx
    2f53:	89 c7                	mov    %eax,%edi
    2f55:	e8 ec f5 ff ff       	callq  2546 <XXH32_finalize>
    2f5a:	c9                   	leaveq 
    2f5b:	c3                   	retq   

0000000000002f5c <XXH32_canonicalFromHash>:
    2f5c:	55                   	push   %rbp
    2f5d:	48 89 e5             	mov    %rsp,%rbp
    2f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f64:	89 75 f4             	mov    %esi,-0xc(%rbp)
    2f67:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2f6a:	0f c8                	bswap  %eax
    2f6c:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2f6f:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f76:	89 10                	mov    %edx,(%rax)
    2f78:	90                   	nop
    2f79:	5d                   	pop    %rbp
    2f7a:	c3                   	retq   

0000000000002f7b <XXH32_hashFromCanonical>:
    2f7b:	55                   	push   %rbp
    2f7c:	48 89 e5             	mov    %rsp,%rbp
    2f7f:	48 83 ec 08          	sub    $0x8,%rsp
    2f83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f8b:	48 89 c7             	mov    %rax,%rdi
    2f8e:	e8 f1 f4 ff ff       	callq  2484 <XXH_readBE32>
    2f93:	c9                   	leaveq 
    2f94:	c3                   	retq   

0000000000002f95 <XXH_read64>:
    2f95:	55                   	push   %rbp
    2f96:	48 89 e5             	mov    %rsp,%rbp
    2f99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2f9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2fa1:	48 8b 00             	mov    (%rax),%rax
    2fa4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fac:	5d                   	pop    %rbp
    2fad:	c3                   	retq   

0000000000002fae <XXH_readLE64>:
    2fae:	55                   	push   %rbp
    2faf:	48 89 e5             	mov    %rsp,%rbp
    2fb2:	48 83 ec 08          	sub    $0x8,%rsp
    2fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fbe:	48 89 c7             	mov    %rax,%rdi
    2fc1:	e8 cf ff ff ff       	callq  2f95 <XXH_read64>
    2fc6:	c9                   	leaveq 
    2fc7:	c3                   	retq   

0000000000002fc8 <XXH_readBE64>:
    2fc8:	55                   	push   %rbp
    2fc9:	48 89 e5             	mov    %rsp,%rbp
    2fcc:	48 83 ec 08          	sub    $0x8,%rsp
    2fd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fd8:	48 89 c7             	mov    %rax,%rdi
    2fdb:	e8 b5 ff ff ff       	callq  2f95 <XXH_read64>
    2fe0:	48 0f c8             	bswap  %rax
    2fe3:	c9                   	leaveq 
    2fe4:	c3                   	retq   

0000000000002fe5 <XXH_readLE64_align>:
    2fe5:	55                   	push   %rbp
    2fe6:	48 89 e5             	mov    %rsp,%rbp
    2fe9:	48 83 ec 10          	sub    $0x10,%rsp
    2fed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2ff1:	89 75 f4             	mov    %esi,-0xc(%rbp)
    2ff4:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
    2ff8:	75 0e                	jne    3008 <XXH_readLE64_align+0x23>
    2ffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ffe:	48 89 c7             	mov    %rax,%rdi
    3001:	e8 a8 ff ff ff       	callq  2fae <XXH_readLE64>
    3006:	eb 07                	jmp    300f <XXH_readLE64_align+0x2a>
    3008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    300c:	48 8b 00             	mov    (%rax),%rax
    300f:	c9                   	leaveq 
    3010:	c3                   	retq   

0000000000003011 <XXH64_round>:
    3011:	55                   	push   %rbp
    3012:	48 89 e5             	mov    %rsp,%rbp
    3015:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3019:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    301d:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    3024:	ae b2 c2 
    3027:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
    302c:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    3030:	48 c1 45 f8 1f       	rolq   $0x1f,-0x8(%rbp)
    3035:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    303c:	79 37 9e 
    303f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3043:	48 0f af c2          	imul   %rdx,%rax
    3047:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    304b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    304f:	5d                   	pop    %rbp
    3050:	c3                   	retq   

0000000000003051 <XXH64_mergeRound>:
    3051:	55                   	push   %rbp
    3052:	48 89 e5             	mov    %rsp,%rbp
    3055:	48 83 ec 10          	sub    $0x10,%rsp
    3059:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    305d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3061:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3065:	48 89 c6             	mov    %rax,%rsi
    3068:	bf 00 00 00 00       	mov    $0x0,%edi
    306d:	e8 9f ff ff ff       	callq  3011 <XXH64_round>
    3072:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3076:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    307a:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
    307e:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3085:	79 37 9e 
    3088:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
    308d:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3094:	ca eb 85 
    3097:	48 01 d0             	add    %rdx,%rax
    309a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    309e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30a2:	c9                   	leaveq 
    30a3:	c3                   	retq   

00000000000030a4 <XXH64_avalanche>:
    30a4:	55                   	push   %rbp
    30a5:	48 89 e5             	mov    %rsp,%rbp
    30a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    30ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30b0:	48 c1 e8 21          	shr    $0x21,%rax
    30b4:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
    30b8:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    30bf:	ae b2 c2 
    30c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30c6:	48 0f af c2          	imul   %rdx,%rax
    30ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    30ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30d2:	48 c1 e8 1d          	shr    $0x1d,%rax
    30d6:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
    30da:	48 ba f9 79 37 9e b1 	movabs $0x165667b19e3779f9,%rdx
    30e1:	67 56 16 
    30e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30e8:	48 0f af c2          	imul   %rdx,%rax
    30ec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    30f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30f4:	48 c1 e8 20          	shr    $0x20,%rax
    30f8:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
    30fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3100:	5d                   	pop    %rbp
    3101:	c3                   	retq   

0000000000003102 <XXH64_finalize>:
    3102:	55                   	push   %rbp
    3103:	48 89 e5             	mov    %rsp,%rbp
    3106:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    310d:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    3114:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    311b:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    3122:	89 8d 24 ff ff ff    	mov    %ecx,-0xdc(%rbp)
    3128:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    312f:	83 e0 1f             	and    $0x1f,%eax
    3132:	48 83 f8 1f          	cmp    $0x1f,%rax
    3136:	0f 87 4d 10 00 00    	ja     4189 <XXH64_finalize+0x1087>
    313c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3143:	00 
    3144:	48 8d 05 b5 53 00 00 	lea    0x53b5(%rip),%rax        # 8500 <XXH_PRIME64_5+0x8>
    314b:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    314e:	48 98                	cltq   
    3150:	48 8d 15 a9 53 00 00 	lea    0x53a9(%rip),%rdx        # 8500 <XXH_PRIME64_5+0x8>
    3157:	48 01 d0             	add    %rdx,%rax
    315a:	ff e0                	jmpq   *%rax
    315c:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3162:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3169:	89 d6                	mov    %edx,%esi
    316b:	48 89 c7             	mov    %rax,%rdi
    316e:	e8 72 fe ff ff       	callq  2fe5 <XXH_readLE64_align>
    3173:	48 89 c6             	mov    %rax,%rsi
    3176:	bf 00 00 00 00       	mov    $0x0,%edi
    317b:	e8 91 fe ff ff       	callq  3011 <XXH64_round>
    3180:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3184:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    318b:	08 
    318c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    3190:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3197:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    319e:	48 c1 c0 1b          	rol    $0x1b,%rax
    31a2:	48 89 c2             	mov    %rax,%rdx
    31a5:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    31ac:	79 37 9e 
    31af:	48 0f af c2          	imul   %rdx,%rax
    31b3:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    31ba:	ca eb 85 
    31bd:	48 01 d0             	add    %rdx,%rax
    31c0:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    31c7:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    31cd:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    31d4:	89 d6                	mov    %edx,%esi
    31d6:	48 89 c7             	mov    %rax,%rdi
    31d9:	e8 07 fe ff ff       	callq  2fe5 <XXH_readLE64_align>
    31de:	48 89 c6             	mov    %rax,%rsi
    31e1:	bf 00 00 00 00       	mov    $0x0,%edi
    31e6:	e8 26 fe ff ff       	callq  3011 <XXH64_round>
    31eb:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    31ef:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    31f6:	08 
    31f7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    31fb:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3202:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3209:	48 c1 c0 1b          	rol    $0x1b,%rax
    320d:	48 89 c2             	mov    %rax,%rdx
    3210:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3217:	79 37 9e 
    321a:	48 0f af c2          	imul   %rdx,%rax
    321e:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3225:	ca eb 85 
    3228:	48 01 d0             	add    %rdx,%rax
    322b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3232:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3238:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    323f:	89 d6                	mov    %edx,%esi
    3241:	48 89 c7             	mov    %rax,%rdi
    3244:	e8 9c fd ff ff       	callq  2fe5 <XXH_readLE64_align>
    3249:	48 89 c6             	mov    %rax,%rsi
    324c:	bf 00 00 00 00       	mov    $0x0,%edi
    3251:	e8 bb fd ff ff       	callq  3011 <XXH64_round>
    3256:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    325d:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3264:	08 
    3265:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    326c:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3273:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    327a:	48 c1 c0 1b          	rol    $0x1b,%rax
    327e:	48 89 c2             	mov    %rax,%rdx
    3281:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3288:	79 37 9e 
    328b:	48 0f af c2          	imul   %rdx,%rax
    328f:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3296:	ca eb 85 
    3299:	48 01 d0             	add    %rdx,%rax
    329c:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    32a3:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    32aa:	48 89 c7             	mov    %rax,%rdi
    32ad:	e8 f2 fd ff ff       	callq  30a4 <XXH64_avalanche>
    32b2:	e9 d7 0e 00 00       	jmpq   418e <XXH64_finalize+0x108c>
    32b7:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    32bd:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    32c4:	89 d6                	mov    %edx,%esi
    32c6:	48 89 c7             	mov    %rax,%rdi
    32c9:	e8 17 fd ff ff       	callq  2fe5 <XXH_readLE64_align>
    32ce:	48 89 c6             	mov    %rax,%rsi
    32d1:	bf 00 00 00 00       	mov    $0x0,%edi
    32d6:	e8 36 fd ff ff       	callq  3011 <XXH64_round>
    32db:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    32df:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    32e6:	08 
    32e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    32eb:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    32f2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    32f9:	48 c1 c0 1b          	rol    $0x1b,%rax
    32fd:	48 89 c2             	mov    %rax,%rdx
    3300:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3307:	79 37 9e 
    330a:	48 0f af c2          	imul   %rdx,%rax
    330e:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3315:	ca eb 85 
    3318:	48 01 d0             	add    %rdx,%rax
    331b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3322:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3328:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    332f:	89 d6                	mov    %edx,%esi
    3331:	48 89 c7             	mov    %rax,%rdi
    3334:	e8 ac fc ff ff       	callq  2fe5 <XXH_readLE64_align>
    3339:	48 89 c6             	mov    %rax,%rsi
    333c:	bf 00 00 00 00       	mov    $0x0,%edi
    3341:	e8 cb fc ff ff       	callq  3011 <XXH64_round>
    3346:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    334a:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3351:	08 
    3352:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    3356:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    335d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3364:	48 c1 c0 1b          	rol    $0x1b,%rax
    3368:	48 89 c2             	mov    %rax,%rdx
    336b:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3372:	79 37 9e 
    3375:	48 0f af c2          	imul   %rdx,%rax
    3379:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3380:	ca eb 85 
    3383:	48 01 d0             	add    %rdx,%rax
    3386:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    338d:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3393:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    339a:	89 d6                	mov    %edx,%esi
    339c:	48 89 c7             	mov    %rax,%rdi
    339f:	e8 41 fc ff ff       	callq  2fe5 <XXH_readLE64_align>
    33a4:	48 89 c6             	mov    %rax,%rsi
    33a7:	bf 00 00 00 00       	mov    $0x0,%edi
    33ac:	e8 60 fc ff ff       	callq  3011 <XXH64_round>
    33b1:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    33b8:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    33bf:	08 
    33c0:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    33c7:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    33ce:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    33d5:	48 c1 c0 1b          	rol    $0x1b,%rax
    33d9:	48 89 c2             	mov    %rax,%rdx
    33dc:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    33e3:	79 37 9e 
    33e6:	48 0f af c2          	imul   %rdx,%rax
    33ea:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    33f1:	ca eb 85 
    33f4:	48 01 d0             	add    %rdx,%rax
    33f7:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    33fe:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3404:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    340b:	89 d6                	mov    %edx,%esi
    340d:	48 89 c7             	mov    %rax,%rdi
    3410:	e8 8b f0 ff ff       	callq  24a0 <XXH_readLE32_align>
    3415:	89 c2                	mov    %eax,%edx
    3417:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    341e:	79 37 9e 
    3421:	48 0f af c2          	imul   %rdx,%rax
    3425:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    342c:	48 83 85 30 ff ff ff 	addq   $0x4,-0xd0(%rbp)
    3433:	04 
    3434:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    343b:	48 c1 c0 17          	rol    $0x17,%rax
    343f:	48 89 c2             	mov    %rax,%rdx
    3442:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    3449:	ae b2 c2 
    344c:	48 0f af c2          	imul   %rdx,%rax
    3450:	48 ba f9 79 37 9e b1 	movabs $0x165667b19e3779f9,%rdx
    3457:	67 56 16 
    345a:	48 01 d0             	add    %rdx,%rax
    345d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3464:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    346b:	48 89 c7             	mov    %rax,%rdi
    346e:	e8 31 fc ff ff       	callq  30a4 <XXH64_avalanche>
    3473:	e9 16 0d 00 00       	jmpq   418e <XXH64_finalize+0x108c>
    3478:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    347e:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3485:	89 d6                	mov    %edx,%esi
    3487:	48 89 c7             	mov    %rax,%rdi
    348a:	e8 56 fb ff ff       	callq  2fe5 <XXH_readLE64_align>
    348f:	48 89 c6             	mov    %rax,%rsi
    3492:	bf 00 00 00 00       	mov    $0x0,%edi
    3497:	e8 75 fb ff ff       	callq  3011 <XXH64_round>
    349c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    34a0:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    34a7:	08 
    34a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    34ac:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    34b3:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    34ba:	48 c1 c0 1b          	rol    $0x1b,%rax
    34be:	48 89 c2             	mov    %rax,%rdx
    34c1:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    34c8:	79 37 9e 
    34cb:	48 0f af c2          	imul   %rdx,%rax
    34cf:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    34d6:	ca eb 85 
    34d9:	48 01 d0             	add    %rdx,%rax
    34dc:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    34e3:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    34e9:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    34f0:	89 d6                	mov    %edx,%esi
    34f2:	48 89 c7             	mov    %rax,%rdi
    34f5:	e8 eb fa ff ff       	callq  2fe5 <XXH_readLE64_align>
    34fa:	48 89 c6             	mov    %rax,%rsi
    34fd:	bf 00 00 00 00       	mov    $0x0,%edi
    3502:	e8 0a fb ff ff       	callq  3011 <XXH64_round>
    3507:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    350b:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3512:	08 
    3513:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3517:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    351e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3525:	48 c1 c0 1b          	rol    $0x1b,%rax
    3529:	48 89 c2             	mov    %rax,%rdx
    352c:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3533:	79 37 9e 
    3536:	48 0f af c2          	imul   %rdx,%rax
    353a:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3541:	ca eb 85 
    3544:	48 01 d0             	add    %rdx,%rax
    3547:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    354e:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3554:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    355b:	89 d6                	mov    %edx,%esi
    355d:	48 89 c7             	mov    %rax,%rdi
    3560:	e8 80 fa ff ff       	callq  2fe5 <XXH_readLE64_align>
    3565:	48 89 c6             	mov    %rax,%rsi
    3568:	bf 00 00 00 00       	mov    $0x0,%edi
    356d:	e8 9f fa ff ff       	callq  3011 <XXH64_round>
    3572:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    3579:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3580:	08 
    3581:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    3588:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    358f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3596:	48 c1 c0 1b          	rol    $0x1b,%rax
    359a:	48 89 c2             	mov    %rax,%rdx
    359d:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    35a4:	79 37 9e 
    35a7:	48 0f af c2          	imul   %rdx,%rax
    35ab:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    35b2:	ca eb 85 
    35b5:	48 01 d0             	add    %rdx,%rax
    35b8:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    35bf:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    35c6:	48 8d 50 01          	lea    0x1(%rax),%rdx
    35ca:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    35d1:	0f b6 00             	movzbl (%rax),%eax
    35d4:	0f b6 c0             	movzbl %al,%eax
    35d7:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    35de:	eb d4 27 
    35e1:	48 0f af c2          	imul   %rdx,%rax
    35e5:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    35ec:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    35f3:	48 c1 c0 0b          	rol    $0xb,%rax
    35f7:	48 89 c2             	mov    %rax,%rdx
    35fa:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3601:	79 37 9e 
    3604:	48 0f af c2          	imul   %rdx,%rax
    3608:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    360f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3616:	48 89 c7             	mov    %rax,%rdi
    3619:	e8 86 fa ff ff       	callq  30a4 <XXH64_avalanche>
    361e:	e9 6b 0b 00 00       	jmpq   418e <XXH64_finalize+0x108c>
    3623:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3629:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3630:	89 d6                	mov    %edx,%esi
    3632:	48 89 c7             	mov    %rax,%rdi
    3635:	e8 ab f9 ff ff       	callq  2fe5 <XXH_readLE64_align>
    363a:	48 89 c6             	mov    %rax,%rsi
    363d:	bf 00 00 00 00       	mov    $0x0,%edi
    3642:	e8 ca f9 ff ff       	callq  3011 <XXH64_round>
    3647:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    364b:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3652:	08 
    3653:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3657:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    365e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3665:	48 c1 c0 1b          	rol    $0x1b,%rax
    3669:	48 89 c2             	mov    %rax,%rdx
    366c:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3673:	79 37 9e 
    3676:	48 0f af c2          	imul   %rdx,%rax
    367a:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3681:	ca eb 85 
    3684:	48 01 d0             	add    %rdx,%rax
    3687:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    368e:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3694:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    369b:	89 d6                	mov    %edx,%esi
    369d:	48 89 c7             	mov    %rax,%rdi
    36a0:	e8 40 f9 ff ff       	callq  2fe5 <XXH_readLE64_align>
    36a5:	48 89 c6             	mov    %rax,%rsi
    36a8:	bf 00 00 00 00       	mov    $0x0,%edi
    36ad:	e8 5f f9 ff ff       	callq  3011 <XXH64_round>
    36b2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    36b6:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    36bd:	08 
    36be:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    36c2:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    36c9:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    36d0:	48 c1 c0 1b          	rol    $0x1b,%rax
    36d4:	48 89 c2             	mov    %rax,%rdx
    36d7:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    36de:	79 37 9e 
    36e1:	48 0f af c2          	imul   %rdx,%rax
    36e5:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    36ec:	ca eb 85 
    36ef:	48 01 d0             	add    %rdx,%rax
    36f2:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    36f9:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    36ff:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3706:	89 d6                	mov    %edx,%esi
    3708:	48 89 c7             	mov    %rax,%rdi
    370b:	e8 d5 f8 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3710:	48 89 c6             	mov    %rax,%rsi
    3713:	bf 00 00 00 00       	mov    $0x0,%edi
    3718:	e8 f4 f8 ff ff       	callq  3011 <XXH64_round>
    371d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    3724:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    372b:	08 
    372c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    3733:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    373a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3741:	48 c1 c0 1b          	rol    $0x1b,%rax
    3745:	48 89 c2             	mov    %rax,%rdx
    3748:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    374f:	79 37 9e 
    3752:	48 0f af c2          	imul   %rdx,%rax
    3756:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    375d:	ca eb 85 
    3760:	48 01 d0             	add    %rdx,%rax
    3763:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    376a:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3770:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3777:	89 d6                	mov    %edx,%esi
    3779:	48 89 c7             	mov    %rax,%rdi
    377c:	e8 1f ed ff ff       	callq  24a0 <XXH_readLE32_align>
    3781:	89 c2                	mov    %eax,%edx
    3783:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    378a:	79 37 9e 
    378d:	48 0f af c2          	imul   %rdx,%rax
    3791:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3798:	48 83 85 30 ff ff ff 	addq   $0x4,-0xd0(%rbp)
    379f:	04 
    37a0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    37a7:	48 c1 c0 17          	rol    $0x17,%rax
    37ab:	48 89 c2             	mov    %rax,%rdx
    37ae:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    37b5:	ae b2 c2 
    37b8:	48 0f af c2          	imul   %rdx,%rax
    37bc:	48 ba f9 79 37 9e b1 	movabs $0x165667b19e3779f9,%rdx
    37c3:	67 56 16 
    37c6:	48 01 d0             	add    %rdx,%rax
    37c9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    37d0:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    37d7:	48 8d 50 01          	lea    0x1(%rax),%rdx
    37db:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    37e2:	0f b6 00             	movzbl (%rax),%eax
    37e5:	0f b6 c0             	movzbl %al,%eax
    37e8:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    37ef:	eb d4 27 
    37f2:	48 0f af c2          	imul   %rdx,%rax
    37f6:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    37fd:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3804:	48 c1 c0 0b          	rol    $0xb,%rax
    3808:	48 89 c2             	mov    %rax,%rdx
    380b:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3812:	79 37 9e 
    3815:	48 0f af c2          	imul   %rdx,%rax
    3819:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3820:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3827:	48 89 c7             	mov    %rax,%rdi
    382a:	e8 75 f8 ff ff       	callq  30a4 <XXH64_avalanche>
    382f:	e9 5a 09 00 00       	jmpq   418e <XXH64_finalize+0x108c>
    3834:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    383a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3841:	89 d6                	mov    %edx,%esi
    3843:	48 89 c7             	mov    %rax,%rdi
    3846:	e8 9a f7 ff ff       	callq  2fe5 <XXH_readLE64_align>
    384b:	48 89 c6             	mov    %rax,%rsi
    384e:	bf 00 00 00 00       	mov    $0x0,%edi
    3853:	e8 b9 f7 ff ff       	callq  3011 <XXH64_round>
    3858:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    385c:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3863:	08 
    3864:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3868:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    386f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3876:	48 c1 c0 1b          	rol    $0x1b,%rax
    387a:	48 89 c2             	mov    %rax,%rdx
    387d:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3884:	79 37 9e 
    3887:	48 0f af c2          	imul   %rdx,%rax
    388b:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3892:	ca eb 85 
    3895:	48 01 d0             	add    %rdx,%rax
    3898:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    389f:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    38a5:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    38ac:	89 d6                	mov    %edx,%esi
    38ae:	48 89 c7             	mov    %rax,%rdi
    38b1:	e8 2f f7 ff ff       	callq  2fe5 <XXH_readLE64_align>
    38b6:	48 89 c6             	mov    %rax,%rsi
    38b9:	bf 00 00 00 00       	mov    $0x0,%edi
    38be:	e8 4e f7 ff ff       	callq  3011 <XXH64_round>
    38c3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    38c7:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    38ce:	08 
    38cf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    38d3:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    38da:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    38e1:	48 c1 c0 1b          	rol    $0x1b,%rax
    38e5:	48 89 c2             	mov    %rax,%rdx
    38e8:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    38ef:	79 37 9e 
    38f2:	48 0f af c2          	imul   %rdx,%rax
    38f6:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    38fd:	ca eb 85 
    3900:	48 01 d0             	add    %rdx,%rax
    3903:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    390a:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3910:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3917:	89 d6                	mov    %edx,%esi
    3919:	48 89 c7             	mov    %rax,%rdi
    391c:	e8 c4 f6 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3921:	48 89 c6             	mov    %rax,%rsi
    3924:	bf 00 00 00 00       	mov    $0x0,%edi
    3929:	e8 e3 f6 ff ff       	callq  3011 <XXH64_round>
    392e:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    3935:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    393c:	08 
    393d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    3944:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    394b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3952:	48 c1 c0 1b          	rol    $0x1b,%rax
    3956:	48 89 c2             	mov    %rax,%rdx
    3959:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3960:	79 37 9e 
    3963:	48 0f af c2          	imul   %rdx,%rax
    3967:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    396e:	ca eb 85 
    3971:	48 01 d0             	add    %rdx,%rax
    3974:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    397b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3982:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3986:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    398d:	0f b6 00             	movzbl (%rax),%eax
    3990:	0f b6 c0             	movzbl %al,%eax
    3993:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    399a:	eb d4 27 
    399d:	48 0f af c2          	imul   %rdx,%rax
    39a1:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    39a8:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    39af:	48 c1 c0 0b          	rol    $0xb,%rax
    39b3:	48 89 c2             	mov    %rax,%rdx
    39b6:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    39bd:	79 37 9e 
    39c0:	48 0f af c2          	imul   %rdx,%rax
    39c4:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    39cb:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    39d2:	48 8d 50 01          	lea    0x1(%rax),%rdx
    39d6:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    39dd:	0f b6 00             	movzbl (%rax),%eax
    39e0:	0f b6 c0             	movzbl %al,%eax
    39e3:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    39ea:	eb d4 27 
    39ed:	48 0f af c2          	imul   %rdx,%rax
    39f1:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    39f8:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    39ff:	48 c1 c0 0b          	rol    $0xb,%rax
    3a03:	48 89 c2             	mov    %rax,%rdx
    3a06:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3a0d:	79 37 9e 
    3a10:	48 0f af c2          	imul   %rdx,%rax
    3a14:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3a1b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3a22:	48 89 c7             	mov    %rax,%rdi
    3a25:	e8 7a f6 ff ff       	callq  30a4 <XXH64_avalanche>
    3a2a:	e9 5f 07 00 00       	jmpq   418e <XXH64_finalize+0x108c>
    3a2f:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3a35:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3a3c:	89 d6                	mov    %edx,%esi
    3a3e:	48 89 c7             	mov    %rax,%rdi
    3a41:	e8 9f f5 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3a46:	48 89 c6             	mov    %rax,%rsi
    3a49:	bf 00 00 00 00       	mov    $0x0,%edi
    3a4e:	e8 be f5 ff ff       	callq  3011 <XXH64_round>
    3a53:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3a57:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3a5e:	08 
    3a5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a63:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3a6a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3a71:	48 c1 c0 1b          	rol    $0x1b,%rax
    3a75:	48 89 c2             	mov    %rax,%rdx
    3a78:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3a7f:	79 37 9e 
    3a82:	48 0f af c2          	imul   %rdx,%rax
    3a86:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3a8d:	ca eb 85 
    3a90:	48 01 d0             	add    %rdx,%rax
    3a93:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3a9a:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3aa0:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3aa7:	89 d6                	mov    %edx,%esi
    3aa9:	48 89 c7             	mov    %rax,%rdi
    3aac:	e8 34 f5 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3ab1:	48 89 c6             	mov    %rax,%rsi
    3ab4:	bf 00 00 00 00       	mov    $0x0,%edi
    3ab9:	e8 53 f5 ff ff       	callq  3011 <XXH64_round>
    3abe:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    3ac2:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3ac9:	08 
    3aca:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3ace:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3ad5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3adc:	48 c1 c0 1b          	rol    $0x1b,%rax
    3ae0:	48 89 c2             	mov    %rax,%rdx
    3ae3:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3aea:	79 37 9e 
    3aed:	48 0f af c2          	imul   %rdx,%rax
    3af1:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3af8:	ca eb 85 
    3afb:	48 01 d0             	add    %rdx,%rax
    3afe:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3b05:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3b0b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3b12:	89 d6                	mov    %edx,%esi
    3b14:	48 89 c7             	mov    %rax,%rdi
    3b17:	e8 c9 f4 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3b1c:	48 89 c6             	mov    %rax,%rsi
    3b1f:	bf 00 00 00 00       	mov    $0x0,%edi
    3b24:	e8 e8 f4 ff ff       	callq  3011 <XXH64_round>
    3b29:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    3b30:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3b37:	08 
    3b38:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    3b3f:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3b46:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3b4d:	48 c1 c0 1b          	rol    $0x1b,%rax
    3b51:	48 89 c2             	mov    %rax,%rdx
    3b54:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3b5b:	79 37 9e 
    3b5e:	48 0f af c2          	imul   %rdx,%rax
    3b62:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3b69:	ca eb 85 
    3b6c:	48 01 d0             	add    %rdx,%rax
    3b6f:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3b76:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3b7c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3b83:	89 d6                	mov    %edx,%esi
    3b85:	48 89 c7             	mov    %rax,%rdi
    3b88:	e8 13 e9 ff ff       	callq  24a0 <XXH_readLE32_align>
    3b8d:	89 c2                	mov    %eax,%edx
    3b8f:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3b96:	79 37 9e 
    3b99:	48 0f af c2          	imul   %rdx,%rax
    3b9d:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3ba4:	48 83 85 30 ff ff ff 	addq   $0x4,-0xd0(%rbp)
    3bab:	04 
    3bac:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3bb3:	48 c1 c0 17          	rol    $0x17,%rax
    3bb7:	48 89 c2             	mov    %rax,%rdx
    3bba:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    3bc1:	ae b2 c2 
    3bc4:	48 0f af c2          	imul   %rdx,%rax
    3bc8:	48 ba f9 79 37 9e b1 	movabs $0x165667b19e3779f9,%rdx
    3bcf:	67 56 16 
    3bd2:	48 01 d0             	add    %rdx,%rax
    3bd5:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3bdc:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3be3:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3be7:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    3bee:	0f b6 00             	movzbl (%rax),%eax
    3bf1:	0f b6 c0             	movzbl %al,%eax
    3bf4:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    3bfb:	eb d4 27 
    3bfe:	48 0f af c2          	imul   %rdx,%rax
    3c02:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3c09:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3c10:	48 c1 c0 0b          	rol    $0xb,%rax
    3c14:	48 89 c2             	mov    %rax,%rdx
    3c17:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3c1e:	79 37 9e 
    3c21:	48 0f af c2          	imul   %rdx,%rax
    3c25:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3c2c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3c33:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3c37:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    3c3e:	0f b6 00             	movzbl (%rax),%eax
    3c41:	0f b6 c0             	movzbl %al,%eax
    3c44:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    3c4b:	eb d4 27 
    3c4e:	48 0f af c2          	imul   %rdx,%rax
    3c52:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3c59:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3c60:	48 c1 c0 0b          	rol    $0xb,%rax
    3c64:	48 89 c2             	mov    %rax,%rdx
    3c67:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3c6e:	79 37 9e 
    3c71:	48 0f af c2          	imul   %rdx,%rax
    3c75:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3c7c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3c83:	48 89 c7             	mov    %rax,%rdi
    3c86:	e8 19 f4 ff ff       	callq  30a4 <XXH64_avalanche>
    3c8b:	e9 fe 04 00 00       	jmpq   418e <XXH64_finalize+0x108c>
    3c90:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3c96:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3c9d:	89 d6                	mov    %edx,%esi
    3c9f:	48 89 c7             	mov    %rax,%rdi
    3ca2:	e8 3e f3 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3ca7:	48 89 c6             	mov    %rax,%rsi
    3caa:	bf 00 00 00 00       	mov    $0x0,%edi
    3caf:	e8 5d f3 ff ff       	callq  3011 <XXH64_round>
    3cb4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3cb8:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3cbf:	08 
    3cc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3cc4:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3ccb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3cd2:	48 c1 c0 1b          	rol    $0x1b,%rax
    3cd6:	48 89 c2             	mov    %rax,%rdx
    3cd9:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3ce0:	79 37 9e 
    3ce3:	48 0f af c2          	imul   %rdx,%rax
    3ce7:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3cee:	ca eb 85 
    3cf1:	48 01 d0             	add    %rdx,%rax
    3cf4:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3cfb:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3d01:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3d08:	89 d6                	mov    %edx,%esi
    3d0a:	48 89 c7             	mov    %rax,%rdi
    3d0d:	e8 d3 f2 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3d12:	48 89 c6             	mov    %rax,%rsi
    3d15:	bf 00 00 00 00       	mov    $0x0,%edi
    3d1a:	e8 f2 f2 ff ff       	callq  3011 <XXH64_round>
    3d1f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3d23:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3d2a:	08 
    3d2b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3d2f:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3d36:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3d3d:	48 c1 c0 1b          	rol    $0x1b,%rax
    3d41:	48 89 c2             	mov    %rax,%rdx
    3d44:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3d4b:	79 37 9e 
    3d4e:	48 0f af c2          	imul   %rdx,%rax
    3d52:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3d59:	ca eb 85 
    3d5c:	48 01 d0             	add    %rdx,%rax
    3d5f:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3d66:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3d6c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3d73:	89 d6                	mov    %edx,%esi
    3d75:	48 89 c7             	mov    %rax,%rdi
    3d78:	e8 68 f2 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3d7d:	48 89 c6             	mov    %rax,%rsi
    3d80:	bf 00 00 00 00       	mov    $0x0,%edi
    3d85:	e8 87 f2 ff ff       	callq  3011 <XXH64_round>
    3d8a:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    3d91:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3d98:	08 
    3d99:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    3da0:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3da7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3dae:	48 c1 c0 1b          	rol    $0x1b,%rax
    3db2:	48 89 c2             	mov    %rax,%rdx
    3db5:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3dbc:	79 37 9e 
    3dbf:	48 0f af c2          	imul   %rdx,%rax
    3dc3:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3dca:	ca eb 85 
    3dcd:	48 01 d0             	add    %rdx,%rax
    3dd0:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3dd7:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3dde:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3de2:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    3de9:	0f b6 00             	movzbl (%rax),%eax
    3dec:	0f b6 c0             	movzbl %al,%eax
    3def:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    3df6:	eb d4 27 
    3df9:	48 0f af c2          	imul   %rdx,%rax
    3dfd:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3e04:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3e0b:	48 c1 c0 0b          	rol    $0xb,%rax
    3e0f:	48 89 c2             	mov    %rax,%rdx
    3e12:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3e19:	79 37 9e 
    3e1c:	48 0f af c2          	imul   %rdx,%rax
    3e20:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3e27:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3e2e:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3e32:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    3e39:	0f b6 00             	movzbl (%rax),%eax
    3e3c:	0f b6 c0             	movzbl %al,%eax
    3e3f:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    3e46:	eb d4 27 
    3e49:	48 0f af c2          	imul   %rdx,%rax
    3e4d:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3e54:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3e5b:	48 c1 c0 0b          	rol    $0xb,%rax
    3e5f:	48 89 c2             	mov    %rax,%rdx
    3e62:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3e69:	79 37 9e 
    3e6c:	48 0f af c2          	imul   %rdx,%rax
    3e70:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3e77:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3e7e:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3e82:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    3e89:	0f b6 00             	movzbl (%rax),%eax
    3e8c:	0f b6 c0             	movzbl %al,%eax
    3e8f:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    3e96:	eb d4 27 
    3e99:	48 0f af c2          	imul   %rdx,%rax
    3e9d:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3ea4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3eab:	48 c1 c0 0b          	rol    $0xb,%rax
    3eaf:	48 89 c2             	mov    %rax,%rdx
    3eb2:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3eb9:	79 37 9e 
    3ebc:	48 0f af c2          	imul   %rdx,%rax
    3ec0:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3ec7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3ece:	48 89 c7             	mov    %rax,%rdi
    3ed1:	e8 ce f1 ff ff       	callq  30a4 <XXH64_avalanche>
    3ed6:	e9 b3 02 00 00       	jmpq   418e <XXH64_finalize+0x108c>
    3edb:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3ee1:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3ee8:	89 d6                	mov    %edx,%esi
    3eea:	48 89 c7             	mov    %rax,%rdi
    3eed:	e8 f3 f0 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3ef2:	48 89 c6             	mov    %rax,%rsi
    3ef5:	bf 00 00 00 00       	mov    $0x0,%edi
    3efa:	e8 12 f1 ff ff       	callq  3011 <XXH64_round>
    3eff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3f03:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3f0a:	08 
    3f0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f0f:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3f16:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3f1d:	48 c1 c0 1b          	rol    $0x1b,%rax
    3f21:	48 89 c2             	mov    %rax,%rdx
    3f24:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3f2b:	79 37 9e 
    3f2e:	48 0f af c2          	imul   %rdx,%rax
    3f32:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3f39:	ca eb 85 
    3f3c:	48 01 d0             	add    %rdx,%rax
    3f3f:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3f46:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3f4c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3f53:	89 d6                	mov    %edx,%esi
    3f55:	48 89 c7             	mov    %rax,%rdi
    3f58:	e8 88 f0 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3f5d:	48 89 c6             	mov    %rax,%rsi
    3f60:	bf 00 00 00 00       	mov    $0x0,%edi
    3f65:	e8 a7 f0 ff ff       	callq  3011 <XXH64_round>
    3f6a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3f6e:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3f75:	08 
    3f76:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3f7a:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3f81:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3f88:	48 c1 c0 1b          	rol    $0x1b,%rax
    3f8c:	48 89 c2             	mov    %rax,%rdx
    3f8f:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    3f96:	79 37 9e 
    3f99:	48 0f af c2          	imul   %rdx,%rax
    3f9d:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    3fa4:	ca eb 85 
    3fa7:	48 01 d0             	add    %rdx,%rax
    3faa:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3fb1:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    3fb7:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    3fbe:	89 d6                	mov    %edx,%esi
    3fc0:	48 89 c7             	mov    %rax,%rdi
    3fc3:	e8 1d f0 ff ff       	callq  2fe5 <XXH_readLE64_align>
    3fc8:	48 89 c6             	mov    %rax,%rsi
    3fcb:	bf 00 00 00 00       	mov    $0x0,%edi
    3fd0:	e8 3c f0 ff ff       	callq  3011 <XXH64_round>
    3fd5:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    3fdc:	48 83 85 30 ff ff ff 	addq   $0x8,-0xd0(%rbp)
    3fe3:	08 
    3fe4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    3feb:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    3ff2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    3ff9:	48 c1 c0 1b          	rol    $0x1b,%rax
    3ffd:	48 89 c2             	mov    %rax,%rdx
    4000:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    4007:	79 37 9e 
    400a:	48 0f af c2          	imul   %rdx,%rax
    400e:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    4015:	ca eb 85 
    4018:	48 01 d0             	add    %rdx,%rax
    401b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    4022:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    4028:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    402f:	89 d6                	mov    %edx,%esi
    4031:	48 89 c7             	mov    %rax,%rdi
    4034:	e8 67 e4 ff ff       	callq  24a0 <XXH_readLE32_align>
    4039:	89 c2                	mov    %eax,%edx
    403b:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    4042:	79 37 9e 
    4045:	48 0f af c2          	imul   %rdx,%rax
    4049:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    4050:	48 83 85 30 ff ff ff 	addq   $0x4,-0xd0(%rbp)
    4057:	04 
    4058:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    405f:	48 c1 c0 17          	rol    $0x17,%rax
    4063:	48 89 c2             	mov    %rax,%rdx
    4066:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    406d:	ae b2 c2 
    4070:	48 0f af c2          	imul   %rdx,%rax
    4074:	48 ba f9 79 37 9e b1 	movabs $0x165667b19e3779f9,%rdx
    407b:	67 56 16 
    407e:	48 01 d0             	add    %rdx,%rax
    4081:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    4088:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    408f:	48 8d 50 01          	lea    0x1(%rax),%rdx
    4093:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    409a:	0f b6 00             	movzbl (%rax),%eax
    409d:	0f b6 c0             	movzbl %al,%eax
    40a0:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    40a7:	eb d4 27 
    40aa:	48 0f af c2          	imul   %rdx,%rax
    40ae:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    40b5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    40bc:	48 c1 c0 0b          	rol    $0xb,%rax
    40c0:	48 89 c2             	mov    %rax,%rdx
    40c3:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    40ca:	79 37 9e 
    40cd:	48 0f af c2          	imul   %rdx,%rax
    40d1:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    40d8:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    40df:	48 8d 50 01          	lea    0x1(%rax),%rdx
    40e3:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    40ea:	0f b6 00             	movzbl (%rax),%eax
    40ed:	0f b6 c0             	movzbl %al,%eax
    40f0:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    40f7:	eb d4 27 
    40fa:	48 0f af c2          	imul   %rdx,%rax
    40fe:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    4105:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    410c:	48 c1 c0 0b          	rol    $0xb,%rax
    4110:	48 89 c2             	mov    %rax,%rdx
    4113:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    411a:	79 37 9e 
    411d:	48 0f af c2          	imul   %rdx,%rax
    4121:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    4128:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    412f:	48 8d 50 01          	lea    0x1(%rax),%rdx
    4133:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    413a:	0f b6 00             	movzbl (%rax),%eax
    413d:	0f b6 c0             	movzbl %al,%eax
    4140:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    4147:	eb d4 27 
    414a:	48 0f af c2          	imul   %rdx,%rax
    414e:	48 31 85 38 ff ff ff 	xor    %rax,-0xc8(%rbp)
    4155:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    415c:	48 c1 c0 0b          	rol    $0xb,%rax
    4160:	48 89 c2             	mov    %rax,%rdx
    4163:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    416a:	79 37 9e 
    416d:	48 0f af c2          	imul   %rdx,%rax
    4171:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    4178:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    417f:	48 89 c7             	mov    %rax,%rdi
    4182:	e8 1d ef ff ff       	callq  30a4 <XXH64_avalanche>
    4187:	eb 05                	jmp    418e <XXH64_finalize+0x108c>
    4189:	b8 00 00 00 00       	mov    $0x0,%eax
    418e:	c9                   	leaveq 
    418f:	c3                   	retq   

0000000000004190 <XXH64_endian_align>:
    4190:	55                   	push   %rbp
    4191:	48 89 e5             	mov    %rsp,%rbp
    4194:	48 83 ec 60          	sub    $0x60,%rsp
    4198:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    419c:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    41a0:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    41a4:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
    41a7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    41ab:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    41af:	48 01 d0             	add    %rdx,%rax
    41b2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    41b6:	48 83 7d b0 1f       	cmpq   $0x1f,-0x50(%rbp)
    41bb:	0f 86 ab 01 00 00    	jbe    436c <XXH64_endian_align+0x1dc>
    41c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    41c5:	48 83 e8 20          	sub    $0x20,%rax
    41c9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    41cd:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    41d4:	79 37 9e 
    41d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    41db:	48 01 c2             	add    %rax,%rdx
    41de:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    41e5:	ae b2 c2 
    41e8:	48 01 d0             	add    %rdx,%rax
    41eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    41ef:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    41f6:	ae b2 c2 
    41f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    41fd:	48 01 d0             	add    %rdx,%rax
    4200:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4204:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4208:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    420c:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    4213:	79 37 9e 
    4216:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    421a:	48 29 d0             	sub    %rdx,%rax
    421d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4221:	8b 55 a4             	mov    -0x5c(%rbp),%edx
    4224:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4228:	89 d6                	mov    %edx,%esi
    422a:	48 89 c7             	mov    %rax,%rdi
    422d:	e8 b3 ed ff ff       	callq  2fe5 <XXH_readLE64_align>
    4232:	48 89 c2             	mov    %rax,%rdx
    4235:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4239:	48 89 d6             	mov    %rdx,%rsi
    423c:	48 89 c7             	mov    %rax,%rdi
    423f:	e8 cd ed ff ff       	callq  3011 <XXH64_round>
    4244:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4248:	48 83 45 b8 08       	addq   $0x8,-0x48(%rbp)
    424d:	8b 55 a4             	mov    -0x5c(%rbp),%edx
    4250:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4254:	89 d6                	mov    %edx,%esi
    4256:	48 89 c7             	mov    %rax,%rdi
    4259:	e8 87 ed ff ff       	callq  2fe5 <XXH_readLE64_align>
    425e:	48 89 c2             	mov    %rax,%rdx
    4261:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4265:	48 89 d6             	mov    %rdx,%rsi
    4268:	48 89 c7             	mov    %rax,%rdi
    426b:	e8 a1 ed ff ff       	callq  3011 <XXH64_round>
    4270:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4274:	48 83 45 b8 08       	addq   $0x8,-0x48(%rbp)
    4279:	8b 55 a4             	mov    -0x5c(%rbp),%edx
    427c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4280:	89 d6                	mov    %edx,%esi
    4282:	48 89 c7             	mov    %rax,%rdi
    4285:	e8 5b ed ff ff       	callq  2fe5 <XXH_readLE64_align>
    428a:	48 89 c2             	mov    %rax,%rdx
    428d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4291:	48 89 d6             	mov    %rdx,%rsi
    4294:	48 89 c7             	mov    %rax,%rdi
    4297:	e8 75 ed ff ff       	callq  3011 <XXH64_round>
    429c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    42a0:	48 83 45 b8 08       	addq   $0x8,-0x48(%rbp)
    42a5:	8b 55 a4             	mov    -0x5c(%rbp),%edx
    42a8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    42ac:	89 d6                	mov    %edx,%esi
    42ae:	48 89 c7             	mov    %rax,%rdi
    42b1:	e8 2f ed ff ff       	callq  2fe5 <XXH_readLE64_align>
    42b6:	48 89 c2             	mov    %rax,%rdx
    42b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42bd:	48 89 d6             	mov    %rdx,%rsi
    42c0:	48 89 c7             	mov    %rax,%rdi
    42c3:	e8 49 ed ff ff       	callq  3011 <XXH64_round>
    42c8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    42cc:	48 83 45 b8 08       	addq   $0x8,-0x48(%rbp)
    42d1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    42d5:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    42d9:	0f 86 42 ff ff ff    	jbe    4221 <XXH64_endian_align+0x91>
    42df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    42e3:	48 d1 c0             	rol    %rax
    42e6:	48 89 c2             	mov    %rax,%rdx
    42e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42ed:	48 c1 c0 07          	rol    $0x7,%rax
    42f1:	48 01 c2             	add    %rax,%rdx
    42f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    42f8:	48 c1 c0 0c          	rol    $0xc,%rax
    42fc:	48 01 c2             	add    %rax,%rdx
    42ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4303:	48 c1 c0 12          	rol    $0x12,%rax
    4307:	48 01 d0             	add    %rdx,%rax
    430a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    430e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4316:	48 89 d6             	mov    %rdx,%rsi
    4319:	48 89 c7             	mov    %rax,%rdi
    431c:	e8 30 ed ff ff       	callq  3051 <XXH64_mergeRound>
    4321:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4325:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    432d:	48 89 d6             	mov    %rdx,%rsi
    4330:	48 89 c7             	mov    %rax,%rdi
    4333:	e8 19 ed ff ff       	callq  3051 <XXH64_mergeRound>
    4338:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    433c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4344:	48 89 d6             	mov    %rdx,%rsi
    4347:	48 89 c7             	mov    %rax,%rdi
    434a:	e8 02 ed ff ff       	callq  3051 <XXH64_mergeRound>
    434f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4353:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    435b:	48 89 d6             	mov    %rdx,%rsi
    435e:	48 89 c7             	mov    %rax,%rdi
    4361:	e8 eb ec ff ff       	callq  3051 <XXH64_mergeRound>
    4366:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    436a:	eb 15                	jmp    4381 <XXH64_endian_align+0x1f1>
    436c:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    4373:	eb d4 27 
    4376:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    437a:	48 01 d0             	add    %rdx,%rax
    437d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4381:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4385:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4389:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
    438c:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    4390:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    4394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4398:	48 89 c7             	mov    %rax,%rdi
    439b:	e8 62 ed ff ff       	callq  3102 <XXH64_finalize>
    43a0:	c9                   	leaveq 
    43a1:	c3                   	retq   

00000000000043a2 <XXH64>:
    43a2:	55                   	push   %rbp
    43a3:	48 89 e5             	mov    %rsp,%rbp
    43a6:	48 83 ec 18          	sub    $0x18,%rsp
    43aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    43b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    43ba:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    43be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43c2:	b9 01 00 00 00       	mov    $0x1,%ecx
    43c7:	48 89 c7             	mov    %rax,%rdi
    43ca:	e8 c1 fd ff ff       	callq  4190 <XXH64_endian_align>
    43cf:	c9                   	leaveq 
    43d0:	c3                   	retq   

00000000000043d1 <XXH64_createState>:
    43d1:	55                   	push   %rbp
    43d2:	48 89 e5             	mov    %rsp,%rbp
    43d5:	bf 58 00 00 00       	mov    $0x58,%edi
    43da:	e8 13 e0 ff ff       	callq  23f2 <XXH_malloc>
    43df:	5d                   	pop    %rbp
    43e0:	c3                   	retq   

00000000000043e1 <XXH64_freeState>:
    43e1:	55                   	push   %rbp
    43e2:	48 89 e5             	mov    %rsp,%rbp
    43e5:	48 83 ec 10          	sub    $0x10,%rsp
    43e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43f1:	48 89 c7             	mov    %rax,%rdi
    43f4:	e8 13 e0 ff ff       	callq  240c <XXH_free>
    43f9:	b8 00 00 00 00       	mov    $0x0,%eax
    43fe:	c9                   	leaveq 
    43ff:	c3                   	retq   

0000000000004400 <XXH64_copyState>:
    4400:	55                   	push   %rbp
    4401:	48 89 e5             	mov    %rsp,%rbp
    4404:	48 83 ec 10          	sub    $0x10,%rsp
    4408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    440c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4410:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4418:	ba 58 00 00 00       	mov    $0x58,%edx
    441d:	48 89 ce             	mov    %rcx,%rsi
    4420:	48 89 c7             	mov    %rax,%rdi
    4423:	e8 68 cd ff ff       	callq  1190 <memcpy@plt>
    4428:	90                   	nop
    4429:	c9                   	leaveq 
    442a:	c3                   	retq   

000000000000442b <XXH64_reset>:
    442b:	55                   	push   %rbp
    442c:	48 89 e5             	mov    %rsp,%rbp
    442f:	48 83 ec 70          	sub    $0x70,%rsp
    4433:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    4437:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    443b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    443f:	ba 58 00 00 00       	mov    $0x58,%edx
    4444:	be 00 00 00 00       	mov    $0x0,%esi
    4449:	48 89 c7             	mov    %rax,%rdi
    444c:	e8 df cc ff ff       	callq  1130 <memset@plt>
    4451:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    4458:	79 37 9e 
    445b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    445f:	48 01 c2             	add    %rax,%rdx
    4462:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    4469:	ae b2 c2 
    446c:	48 01 d0             	add    %rdx,%rax
    446f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4473:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    447a:	ae b2 c2 
    447d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    4481:	48 01 d0             	add    %rdx,%rax
    4484:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4488:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    448c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4490:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    4497:	79 37 9e 
    449a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    449e:	48 29 d0             	sub    %rdx,%rax
    44a1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    44a5:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    44a9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    44ad:	ba 50 00 00 00       	mov    $0x50,%edx
    44b2:	48 89 ce             	mov    %rcx,%rsi
    44b5:	48 89 c7             	mov    %rax,%rdi
    44b8:	e8 d3 cc ff ff       	callq  1190 <memcpy@plt>
    44bd:	b8 00 00 00 00       	mov    $0x0,%eax
    44c2:	c9                   	leaveq 
    44c3:	c3                   	retq   

00000000000044c4 <XXH64_update>:
    44c4:	55                   	push   %rbp
    44c5:	48 89 e5             	mov    %rsp,%rbp
    44c8:	48 83 ec 60          	sub    $0x60,%rsp
    44cc:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    44d0:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    44d4:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    44d8:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    44dd:	75 0a                	jne    44e9 <XXH64_update+0x25>
    44df:	b8 01 00 00 00       	mov    $0x1,%eax
    44e4:	e9 17 03 00 00       	jmpq   4800 <XXH64_update+0x33c>
    44e9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    44ed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    44f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    44f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    44f9:	48 01 d0             	add    %rdx,%rax
    44fc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4500:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4504:	48 8b 10             	mov    (%rax),%rdx
    4507:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    450b:	48 01 c2             	add    %rax,%rdx
    450e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4512:	48 89 10             	mov    %rdx,(%rax)
    4515:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4519:	8b 40 48             	mov    0x48(%rax),%eax
    451c:	89 c2                	mov    %eax,%edx
    451e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4522:	48 01 d0             	add    %rdx,%rax
    4525:	48 83 f8 1f          	cmp    $0x1f,%rax
    4529:	77 46                	ja     4571 <XXH64_update+0xad>
    452b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    452f:	48 8d 50 28          	lea    0x28(%rax),%rdx
    4533:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4537:	8b 40 48             	mov    0x48(%rax),%eax
    453a:	89 c0                	mov    %eax,%eax
    453c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4540:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4544:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4548:	48 89 c6             	mov    %rax,%rsi
    454b:	48 89 cf             	mov    %rcx,%rdi
    454e:	e8 d4 de ff ff       	callq  2427 <XXH_memcpy>
    4553:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4557:	8b 50 48             	mov    0x48(%rax),%edx
    455a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    455e:	01 c2                	add    %eax,%edx
    4560:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4564:	89 50 48             	mov    %edx,0x48(%rax)
    4567:	b8 00 00 00 00       	mov    $0x0,%eax
    456c:	e9 8f 02 00 00       	jmpq   4800 <XXH64_update+0x33c>
    4571:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4575:	8b 40 48             	mov    0x48(%rax),%eax
    4578:	85 c0                	test   %eax,%eax
    457a:	0f 84 16 01 00 00    	je     4696 <XXH64_update+0x1d2>
    4580:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4584:	8b 40 48             	mov    0x48(%rax),%eax
    4587:	ba 20 00 00 00       	mov    $0x20,%edx
    458c:	29 c2                	sub    %eax,%edx
    458e:	89 d2                	mov    %edx,%edx
    4590:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4594:	48 8d 48 28          	lea    0x28(%rax),%rcx
    4598:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    459c:	8b 40 48             	mov    0x48(%rax),%eax
    459f:	89 c0                	mov    %eax,%eax
    45a1:	48 01 c1             	add    %rax,%rcx
    45a4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    45a8:	48 89 c6             	mov    %rax,%rsi
    45ab:	48 89 cf             	mov    %rcx,%rdi
    45ae:	e8 74 de ff ff       	callq  2427 <XXH_memcpy>
    45b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    45b7:	48 83 c0 28          	add    $0x28,%rax
    45bb:	48 89 c7             	mov    %rax,%rdi
    45be:	e8 eb e9 ff ff       	callq  2fae <XXH_readLE64>
    45c3:	48 89 c2             	mov    %rax,%rdx
    45c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    45ca:	48 8b 40 08          	mov    0x8(%rax),%rax
    45ce:	48 89 d6             	mov    %rdx,%rsi
    45d1:	48 89 c7             	mov    %rax,%rdi
    45d4:	e8 38 ea ff ff       	callq  3011 <XXH64_round>
    45d9:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    45dd:	48 89 42 08          	mov    %rax,0x8(%rdx)
    45e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    45e5:	48 83 c0 28          	add    $0x28,%rax
    45e9:	48 83 c0 08          	add    $0x8,%rax
    45ed:	48 89 c7             	mov    %rax,%rdi
    45f0:	e8 b9 e9 ff ff       	callq  2fae <XXH_readLE64>
    45f5:	48 89 c2             	mov    %rax,%rdx
    45f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    45fc:	48 8b 40 10          	mov    0x10(%rax),%rax
    4600:	48 89 d6             	mov    %rdx,%rsi
    4603:	48 89 c7             	mov    %rax,%rdi
    4606:	e8 06 ea ff ff       	callq  3011 <XXH64_round>
    460b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    460f:	48 89 42 10          	mov    %rax,0x10(%rdx)
    4613:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4617:	48 83 c0 28          	add    $0x28,%rax
    461b:	48 83 c0 10          	add    $0x10,%rax
    461f:	48 89 c7             	mov    %rax,%rdi
    4622:	e8 87 e9 ff ff       	callq  2fae <XXH_readLE64>
    4627:	48 89 c2             	mov    %rax,%rdx
    462a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    462e:	48 8b 40 18          	mov    0x18(%rax),%rax
    4632:	48 89 d6             	mov    %rdx,%rsi
    4635:	48 89 c7             	mov    %rax,%rdi
    4638:	e8 d4 e9 ff ff       	callq  3011 <XXH64_round>
    463d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    4641:	48 89 42 18          	mov    %rax,0x18(%rdx)
    4645:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4649:	48 83 c0 28          	add    $0x28,%rax
    464d:	48 83 c0 18          	add    $0x18,%rax
    4651:	48 89 c7             	mov    %rax,%rdi
    4654:	e8 55 e9 ff ff       	callq  2fae <XXH_readLE64>
    4659:	48 89 c2             	mov    %rax,%rdx
    465c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4660:	48 8b 40 20          	mov    0x20(%rax),%rax
    4664:	48 89 d6             	mov    %rdx,%rsi
    4667:	48 89 c7             	mov    %rax,%rdi
    466a:	e8 a2 e9 ff ff       	callq  3011 <XXH64_round>
    466f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    4673:	48 89 42 20          	mov    %rax,0x20(%rdx)
    4677:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    467b:	8b 40 48             	mov    0x48(%rax),%eax
    467e:	ba 20 00 00 00       	mov    $0x20,%edx
    4683:	29 c2                	sub    %eax,%edx
    4685:	89 d0                	mov    %edx,%eax
    4687:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    468b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    468f:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%rax)
    4696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    469a:	48 83 c0 20          	add    $0x20,%rax
    469e:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
    46a2:	0f 82 16 01 00 00    	jb     47be <XXH64_update+0x2fa>
    46a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    46ac:	48 83 e8 20          	sub    $0x20,%rax
    46b0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    46b4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    46b8:	48 8b 40 08          	mov    0x8(%rax),%rax
    46bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    46c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    46c4:	48 8b 40 10          	mov    0x10(%rax),%rax
    46c8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    46cc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    46d0:	48 8b 40 18          	mov    0x18(%rax),%rax
    46d4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    46d8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    46dc:	48 8b 40 20          	mov    0x20(%rax),%rax
    46e0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    46e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46e8:	48 89 c7             	mov    %rax,%rdi
    46eb:	e8 be e8 ff ff       	callq  2fae <XXH_readLE64>
    46f0:	48 89 c2             	mov    %rax,%rdx
    46f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    46f7:	48 89 d6             	mov    %rdx,%rsi
    46fa:	48 89 c7             	mov    %rax,%rdi
    46fd:	e8 0f e9 ff ff       	callq  3011 <XXH64_round>
    4702:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4706:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    470b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    470f:	48 89 c7             	mov    %rax,%rdi
    4712:	e8 97 e8 ff ff       	callq  2fae <XXH_readLE64>
    4717:	48 89 c2             	mov    %rax,%rdx
    471a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    471e:	48 89 d6             	mov    %rdx,%rsi
    4721:	48 89 c7             	mov    %rax,%rdi
    4724:	e8 e8 e8 ff ff       	callq  3011 <XXH64_round>
    4729:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    472d:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    4732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4736:	48 89 c7             	mov    %rax,%rdi
    4739:	e8 70 e8 ff ff       	callq  2fae <XXH_readLE64>
    473e:	48 89 c2             	mov    %rax,%rdx
    4741:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4745:	48 89 d6             	mov    %rdx,%rsi
    4748:	48 89 c7             	mov    %rax,%rdi
    474b:	e8 c1 e8 ff ff       	callq  3011 <XXH64_round>
    4750:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4754:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    4759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    475d:	48 89 c7             	mov    %rax,%rdi
    4760:	e8 49 e8 ff ff       	callq  2fae <XXH_readLE64>
    4765:	48 89 c2             	mov    %rax,%rdx
    4768:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    476c:	48 89 d6             	mov    %rdx,%rsi
    476f:	48 89 c7             	mov    %rax,%rdi
    4772:	e8 9a e8 ff ff       	callq  3011 <XXH64_round>
    4777:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    477b:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    4780:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4784:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    4788:	0f 86 56 ff ff ff    	jbe    46e4 <XXH64_update+0x220>
    478e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4792:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4796:	48 89 50 08          	mov    %rdx,0x8(%rax)
    479a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    479e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    47a2:	48 89 50 10          	mov    %rdx,0x10(%rax)
    47a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    47aa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    47ae:	48 89 50 18          	mov    %rdx,0x18(%rax)
    47b2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    47b6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    47ba:	48 89 50 20          	mov    %rdx,0x20(%rax)
    47be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47c2:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    47c6:	73 33                	jae    47fb <XXH64_update+0x337>
    47c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    47cc:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    47d0:	48 89 c2             	mov    %rax,%rdx
    47d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    47d7:	48 8d 48 28          	lea    0x28(%rax),%rcx
    47db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47df:	48 89 c6             	mov    %rax,%rsi
    47e2:	48 89 cf             	mov    %rcx,%rdi
    47e5:	e8 3d dc ff ff       	callq  2427 <XXH_memcpy>
    47ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    47ee:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    47f2:	89 c2                	mov    %eax,%edx
    47f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    47f8:	89 50 48             	mov    %edx,0x48(%rax)
    47fb:	b8 00 00 00 00       	mov    $0x0,%eax
    4800:	c9                   	leaveq 
    4801:	c3                   	retq   

0000000000004802 <XXH64_digest>:
    4802:	55                   	push   %rbp
    4803:	48 89 e5             	mov    %rsp,%rbp
    4806:	48 83 ec 38          	sub    $0x38,%rsp
    480a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    480e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4812:	48 8b 00             	mov    (%rax),%rax
    4815:	48 83 f8 1f          	cmp    $0x1f,%rax
    4819:	0f 86 bd 00 00 00    	jbe    48dc <XXH64_digest+0xda>
    481f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4823:	48 8b 40 08          	mov    0x8(%rax),%rax
    4827:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    482b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    482f:	48 8b 40 10          	mov    0x10(%rax),%rax
    4833:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4837:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    483b:	48 8b 40 18          	mov    0x18(%rax),%rax
    483f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4843:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4847:	48 8b 40 20          	mov    0x20(%rax),%rax
    484b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    484f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4853:	48 d1 c0             	rol    %rax
    4856:	48 89 c2             	mov    %rax,%rdx
    4859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    485d:	48 c1 c0 07          	rol    $0x7,%rax
    4861:	48 01 c2             	add    %rax,%rdx
    4864:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4868:	48 c1 c0 0c          	rol    $0xc,%rax
    486c:	48 01 c2             	add    %rax,%rdx
    486f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4873:	48 c1 c0 12          	rol    $0x12,%rax
    4877:	48 01 d0             	add    %rdx,%rax
    487a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    487e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4886:	48 89 d6             	mov    %rdx,%rsi
    4889:	48 89 c7             	mov    %rax,%rdi
    488c:	e8 c0 e7 ff ff       	callq  3051 <XXH64_mergeRound>
    4891:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4895:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4899:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    489d:	48 89 d6             	mov    %rdx,%rsi
    48a0:	48 89 c7             	mov    %rax,%rdi
    48a3:	e8 a9 e7 ff ff       	callq  3051 <XXH64_mergeRound>
    48a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    48ac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    48b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48b4:	48 89 d6             	mov    %rdx,%rsi
    48b7:	48 89 c7             	mov    %rax,%rdi
    48ba:	e8 92 e7 ff ff       	callq  3051 <XXH64_mergeRound>
    48bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    48c3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    48c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48cb:	48 89 d6             	mov    %rdx,%rsi
    48ce:	48 89 c7             	mov    %rax,%rdi
    48d1:	e8 7b e7 ff ff       	callq  3051 <XXH64_mergeRound>
    48d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    48da:	eb 19                	jmp    48f5 <XXH64_digest+0xf3>
    48dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    48e0:	48 8b 40 18          	mov    0x18(%rax),%rax
    48e4:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    48eb:	eb d4 27 
    48ee:	48 01 d0             	add    %rdx,%rax
    48f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    48f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    48f9:	48 8b 00             	mov    (%rax),%rax
    48fc:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4900:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4904:	48 8b 10             	mov    (%rax),%rdx
    4907:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    490b:	48 8d 70 28          	lea    0x28(%rax),%rsi
    490f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4913:	b9 00 00 00 00       	mov    $0x0,%ecx
    4918:	48 89 c7             	mov    %rax,%rdi
    491b:	e8 e2 e7 ff ff       	callq  3102 <XXH64_finalize>
    4920:	c9                   	leaveq 
    4921:	c3                   	retq   

0000000000004922 <XXH64_canonicalFromHash>:
    4922:	55                   	push   %rbp
    4923:	48 89 e5             	mov    %rsp,%rbp
    4926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    492a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    492e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4932:	48 0f c8             	bswap  %rax
    4935:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4939:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    493d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4941:	48 89 10             	mov    %rdx,(%rax)
    4944:	90                   	nop
    4945:	5d                   	pop    %rbp
    4946:	c3                   	retq   

0000000000004947 <XXH64_hashFromCanonical>:
    4947:	55                   	push   %rbp
    4948:	48 89 e5             	mov    %rsp,%rbp
    494b:	48 83 ec 08          	sub    $0x8,%rsp
    494f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4957:	48 89 c7             	mov    %rax,%rdi
    495a:	e8 69 e6 ff ff       	callq  2fc8 <XXH_readBE64>
    495f:	c9                   	leaveq 
    4960:	c3                   	retq   

0000000000004961 <XXH_mult64to128>:
    4961:	55                   	push   %rbp
    4962:	48 89 e5             	mov    %rsp,%rbp
    4965:	53                   	push   %rbx
    4966:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    496a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    496e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4972:	48 89 f1             	mov    %rsi,%rcx
    4975:	bb 00 00 00 00       	mov    $0x0,%ebx
    497a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    497e:	48 89 f0             	mov    %rsi,%rax
    4981:	ba 00 00 00 00       	mov    $0x0,%edx
    4986:	48 89 df             	mov    %rbx,%rdi
    4989:	48 0f af f8          	imul   %rax,%rdi
    498d:	48 89 d6             	mov    %rdx,%rsi
    4990:	48 0f af f1          	imul   %rcx,%rsi
    4994:	48 01 fe             	add    %rdi,%rsi
    4997:	48 f7 e1             	mul    %rcx
    499a:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx
    499e:	48 89 ca             	mov    %rcx,%rdx
    49a1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    49a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    49a9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    49ad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    49b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    49b5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    49b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    49bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    49c1:	48 89 d0             	mov    %rdx,%rax
    49c4:	31 d2                	xor    %edx,%edx
    49c6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    49ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    49ce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    49d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49d6:	c9                   	leaveq 
    49d7:	c3                   	retq   

00000000000049d8 <XXH3_mul128_fold64>:
    49d8:	55                   	push   %rbp
    49d9:	48 89 e5             	mov    %rsp,%rbp
    49dc:	48 83 ec 20          	sub    $0x20,%rsp
    49e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    49e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    49e8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    49ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49f0:	48 89 d6             	mov    %rdx,%rsi
    49f3:	48 89 c7             	mov    %rax,%rdi
    49f6:	e8 66 ff ff ff       	callq  4961 <XXH_mult64to128>
    49fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    49ff:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    4a03:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a0b:	48 31 d0             	xor    %rdx,%rax
    4a0e:	c9                   	leaveq 
    4a0f:	c3                   	retq   

0000000000004a10 <XXH_xorshift64>:
    4a10:	55                   	push   %rbp
    4a11:	48 89 e5             	mov    %rsp,%rbp
    4a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a18:	89 75 f4             	mov    %esi,-0xc(%rbp)
    4a1b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4a1e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4a22:	89 c1                	mov    %eax,%ecx
    4a24:	48 d3 ea             	shr    %cl,%rdx
    4a27:	48 89 d0             	mov    %rdx,%rax
    4a2a:	48 33 45 f8          	xor    -0x8(%rbp),%rax
    4a2e:	5d                   	pop    %rbp
    4a2f:	c3                   	retq   

0000000000004a30 <XXH3_avalanche>:
    4a30:	55                   	push   %rbp
    4a31:	48 89 e5             	mov    %rsp,%rbp
    4a34:	48 83 ec 08          	sub    $0x8,%rsp
    4a38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a40:	be 25 00 00 00       	mov    $0x25,%esi
    4a45:	48 89 c7             	mov    %rax,%rdi
    4a48:	e8 c3 ff ff ff       	callq  4a10 <XXH_xorshift64>
    4a4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a55:	48 ba f9 79 37 9e 91 	movabs $0x165667919e3779f9,%rdx
    4a5c:	67 56 16 
    4a5f:	48 0f af c2          	imul   %rdx,%rax
    4a63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a6b:	be 20 00 00 00       	mov    $0x20,%esi
    4a70:	48 89 c7             	mov    %rax,%rdi
    4a73:	e8 98 ff ff ff       	callq  4a10 <XXH_xorshift64>
    4a78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a80:	c9                   	leaveq 
    4a81:	c3                   	retq   

0000000000004a82 <XXH3_rrmxmx>:
    4a82:	55                   	push   %rbp
    4a83:	48 89 e5             	mov    %rsp,%rbp
    4a86:	48 83 ec 10          	sub    $0x10,%rsp
    4a8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a96:	48 c1 c8 0f          	ror    $0xf,%rax
    4a9a:	48 89 c2             	mov    %rax,%rdx
    4a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa1:	48 c1 c0 18          	rol    $0x18,%rax
    4aa5:	48 31 d0             	xor    %rdx,%rax
    4aa8:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
    4aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab0:	48 ba 25 df 98 1e 65 	movabs $0x9fb21c651e98df25,%rdx
    4ab7:	1c b2 9f 
    4aba:	48 0f af c2          	imul   %rdx,%rax
    4abe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ac6:	48 c1 e8 23          	shr    $0x23,%rax
    4aca:	48 89 c2             	mov    %rax,%rdx
    4acd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ad1:	48 01 d0             	add    %rdx,%rax
    4ad4:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
    4ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4adc:	48 ba 25 df 98 1e 65 	movabs $0x9fb21c651e98df25,%rdx
    4ae3:	1c b2 9f 
    4ae6:	48 0f af c2          	imul   %rdx,%rax
    4aea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4af2:	be 1c 00 00 00       	mov    $0x1c,%esi
    4af7:	48 89 c7             	mov    %rax,%rdi
    4afa:	e8 11 ff ff ff       	callq  4a10 <XXH_xorshift64>
    4aff:	c9                   	leaveq 
    4b00:	c3                   	retq   

0000000000004b01 <XXH3_len_1to3_64b>:
    4b01:	55                   	push   %rbp
    4b02:	48 89 e5             	mov    %rsp,%rbp
    4b05:	53                   	push   %rbx
    4b06:	48 83 ec 40          	sub    $0x40,%rsp
    4b0a:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
    4b0e:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
    4b12:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    4b16:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    4b1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b1e:	0f b6 00             	movzbl (%rax),%eax
    4b21:	88 45 f7             	mov    %al,-0x9(%rbp)
    4b24:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b28:	48 d1 e8             	shr    %rax
    4b2b:	48 89 c2             	mov    %rax,%rdx
    4b2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b32:	48 01 d0             	add    %rdx,%rax
    4b35:	0f b6 00             	movzbl (%rax),%eax
    4b38:	88 45 f6             	mov    %al,-0xa(%rbp)
    4b3b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b3f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    4b43:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b47:	48 01 d0             	add    %rdx,%rax
    4b4a:	0f b6 00             	movzbl (%rax),%eax
    4b4d:	88 45 f5             	mov    %al,-0xb(%rbp)
    4b50:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
    4b54:	c1 e0 10             	shl    $0x10,%eax
    4b57:	89 c2                	mov    %eax,%edx
    4b59:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
    4b5d:	c1 e0 18             	shl    $0x18,%eax
    4b60:	09 c2                	or     %eax,%edx
    4b62:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
    4b66:	09 c2                	or     %eax,%edx
    4b68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b6c:	c1 e0 08             	shl    $0x8,%eax
    4b6f:	09 d0                	or     %edx,%eax
    4b71:	89 45 f0             	mov    %eax,-0x10(%rbp)
    4b74:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4b78:	48 89 c7             	mov    %rax,%rdi
    4b7b:	e8 ea d8 ff ff       	callq  246a <XXH_readLE32>
    4b80:	89 c3                	mov    %eax,%ebx
    4b82:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4b86:	48 83 c0 04          	add    $0x4,%rax
    4b8a:	48 89 c7             	mov    %rax,%rdi
    4b8d:	e8 d8 d8 ff ff       	callq  246a <XXH_readLE32>
    4b92:	31 d8                	xor    %ebx,%eax
    4b94:	89 c2                	mov    %eax,%edx
    4b96:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4b9a:	48 01 d0             	add    %rdx,%rax
    4b9d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4ba1:	8b 45 f0             	mov    -0x10(%rbp),%eax
    4ba4:	48 33 45 e8          	xor    -0x18(%rbp),%rax
    4ba8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4bac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4bb0:	48 89 c7             	mov    %rax,%rdi
    4bb3:	e8 ec e4 ff ff       	callq  30a4 <XXH64_avalanche>
    4bb8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4bbc:	c9                   	leaveq 
    4bbd:	c3                   	retq   

0000000000004bbe <XXH3_len_4to8_64b>:
    4bbe:	55                   	push   %rbp
    4bbf:	48 89 e5             	mov    %rsp,%rbp
    4bc2:	53                   	push   %rbx
    4bc3:	48 83 ec 40          	sub    $0x40,%rsp
    4bc7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
    4bcb:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
    4bcf:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    4bd3:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    4bd7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4bdb:	0f c8                	bswap  %eax
    4bdd:	89 c0                	mov    %eax,%eax
    4bdf:	48 c1 e0 20          	shl    $0x20,%rax
    4be3:	48 31 45 b8          	xor    %rax,-0x48(%rbp)
    4be7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4beb:	48 89 c7             	mov    %rax,%rdi
    4bee:	e8 77 d8 ff ff       	callq  246a <XXH_readLE32>
    4bf3:	89 45 f4             	mov    %eax,-0xc(%rbp)
    4bf6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4bfa:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
    4bfe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c02:	48 01 d0             	add    %rdx,%rax
    4c05:	48 89 c7             	mov    %rax,%rdi
    4c08:	e8 5d d8 ff ff       	callq  246a <XXH_readLE32>
    4c0d:	89 45 f0             	mov    %eax,-0x10(%rbp)
    4c10:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4c14:	48 83 c0 08          	add    $0x8,%rax
    4c18:	48 89 c7             	mov    %rax,%rdi
    4c1b:	e8 8e e3 ff ff       	callq  2fae <XXH_readLE64>
    4c20:	48 89 c3             	mov    %rax,%rbx
    4c23:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4c27:	48 83 c0 10          	add    $0x10,%rax
    4c2b:	48 89 c7             	mov    %rax,%rdi
    4c2e:	e8 7b e3 ff ff       	callq  2fae <XXH_readLE64>
    4c33:	48 31 d8             	xor    %rbx,%rax
    4c36:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
    4c3a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4c3e:	8b 55 f0             	mov    -0x10(%rbp),%edx
    4c41:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4c44:	48 c1 e0 20          	shl    $0x20,%rax
    4c48:	48 01 d0             	add    %rdx,%rax
    4c4b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4c4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4c53:	48 33 45 e8          	xor    -0x18(%rbp),%rax
    4c57:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4c5b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4c5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c63:	48 89 d6             	mov    %rdx,%rsi
    4c66:	48 89 c7             	mov    %rax,%rdi
    4c69:	e8 14 fe ff ff       	callq  4a82 <XXH3_rrmxmx>
    4c6e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4c72:	c9                   	leaveq 
    4c73:	c3                   	retq   

0000000000004c74 <XXH3_len_9to16_64b>:
    4c74:	55                   	push   %rbp
    4c75:	48 89 e5             	mov    %rsp,%rbp
    4c78:	53                   	push   %rbx
    4c79:	48 83 ec 58          	sub    $0x58,%rsp
    4c7d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    4c81:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    4c85:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    4c89:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    4c8d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4c91:	48 83 c0 18          	add    $0x18,%rax
    4c95:	48 89 c7             	mov    %rax,%rdi
    4c98:	e8 11 e3 ff ff       	callq  2fae <XXH_readLE64>
    4c9d:	48 89 c3             	mov    %rax,%rbx
    4ca0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4ca4:	48 83 c0 20          	add    $0x20,%rax
    4ca8:	48 89 c7             	mov    %rax,%rdi
    4cab:	e8 fe e2 ff ff       	callq  2fae <XXH_readLE64>
    4cb0:	48 31 c3             	xor    %rax,%rbx
    4cb3:	48 89 da             	mov    %rbx,%rdx
    4cb6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    4cba:	48 01 d0             	add    %rdx,%rax
    4cbd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4cc1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4cc5:	48 83 c0 28          	add    $0x28,%rax
    4cc9:	48 89 c7             	mov    %rax,%rdi
    4ccc:	e8 dd e2 ff ff       	callq  2fae <XXH_readLE64>
    4cd1:	48 89 c3             	mov    %rax,%rbx
    4cd4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4cd8:	48 83 c0 30          	add    $0x30,%rax
    4cdc:	48 89 c7             	mov    %rax,%rdi
    4cdf:	e8 ca e2 ff ff       	callq  2fae <XXH_readLE64>
    4ce4:	48 31 d8             	xor    %rbx,%rax
    4ce7:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
    4ceb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4cef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4cf3:	48 89 c7             	mov    %rax,%rdi
    4cf6:	e8 b3 e2 ff ff       	callq  2fae <XXH_readLE64>
    4cfb:	48 33 45 e8          	xor    -0x18(%rbp),%rax
    4cff:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4d03:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4d07:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    4d0b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4d0f:	48 01 d0             	add    %rdx,%rax
    4d12:	48 89 c7             	mov    %rax,%rdi
    4d15:	e8 94 e2 ff ff       	callq  2fae <XXH_readLE64>
    4d1a:	48 33 45 e0          	xor    -0x20(%rbp),%rax
    4d1e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4d22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d26:	48 0f c8             	bswap  %rax
    4d29:	48 89 c2             	mov    %rax,%rdx
    4d2c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4d30:	48 01 c2             	add    %rax,%rdx
    4d33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d37:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    4d3b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4d3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d43:	48 89 d6             	mov    %rdx,%rsi
    4d46:	48 89 c7             	mov    %rax,%rdi
    4d49:	e8 8a fc ff ff       	callq  49d8 <XXH3_mul128_fold64>
    4d4e:	48 01 d8             	add    %rbx,%rax
    4d51:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4d55:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4d59:	48 89 c7             	mov    %rax,%rdi
    4d5c:	e8 cf fc ff ff       	callq  4a30 <XXH3_avalanche>
    4d61:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4d65:	c9                   	leaveq 
    4d66:	c3                   	retq   

0000000000004d67 <XXH3_len_0to16_64b>:
    4d67:	55                   	push   %rbp
    4d68:	48 89 e5             	mov    %rsp,%rbp
    4d6b:	53                   	push   %rbx
    4d6c:	48 83 ec 28          	sub    $0x28,%rsp
    4d70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4d74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4d78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    4d7c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    4d80:	48 83 7d e0 08       	cmpq   $0x8,-0x20(%rbp)
    4d85:	0f 97 c0             	seta   %al
    4d88:	0f b6 c0             	movzbl %al,%eax
    4d8b:	48 85 c0             	test   %rax,%rax
    4d8e:	74 1a                	je     4daa <XXH3_len_0to16_64b+0x43>
    4d90:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4d94:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4d98:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    4d9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4da0:	48 89 c7             	mov    %rax,%rdi
    4da3:	e8 cc fe ff ff       	callq  4c74 <XXH3_len_9to16_64b>
    4da8:	eb 7d                	jmp    4e27 <XXH3_len_0to16_64b+0xc0>
    4daa:	48 83 7d e0 03       	cmpq   $0x3,-0x20(%rbp)
    4daf:	0f 97 c0             	seta   %al
    4db2:	0f b6 c0             	movzbl %al,%eax
    4db5:	48 85 c0             	test   %rax,%rax
    4db8:	74 1a                	je     4dd4 <XXH3_len_0to16_64b+0x6d>
    4dba:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4dbe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4dc2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    4dc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4dca:	48 89 c7             	mov    %rax,%rdi
    4dcd:	e8 ec fd ff ff       	callq  4bbe <XXH3_len_4to8_64b>
    4dd2:	eb 53                	jmp    4e27 <XXH3_len_0to16_64b+0xc0>
    4dd4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    4dd9:	74 1a                	je     4df5 <XXH3_len_0to16_64b+0x8e>
    4ddb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4ddf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4de3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    4de7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4deb:	48 89 c7             	mov    %rax,%rdi
    4dee:	e8 0e fd ff ff       	callq  4b01 <XXH3_len_1to3_64b>
    4df3:	eb 32                	jmp    4e27 <XXH3_len_0to16_64b+0xc0>
    4df5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4df9:	48 83 c0 38          	add    $0x38,%rax
    4dfd:	48 89 c7             	mov    %rax,%rdi
    4e00:	e8 a9 e1 ff ff       	callq  2fae <XXH_readLE64>
    4e05:	48 89 c3             	mov    %rax,%rbx
    4e08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e0c:	48 83 c0 40          	add    $0x40,%rax
    4e10:	48 89 c7             	mov    %rax,%rdi
    4e13:	e8 96 e1 ff ff       	callq  2fae <XXH_readLE64>
    4e18:	48 31 d8             	xor    %rbx,%rax
    4e1b:	48 33 45 d0          	xor    -0x30(%rbp),%rax
    4e1f:	48 89 c7             	mov    %rax,%rdi
    4e22:	e8 7d e2 ff ff       	callq  30a4 <XXH64_avalanche>
    4e27:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4e2b:	c9                   	leaveq 
    4e2c:	c3                   	retq   

0000000000004e2d <XXH3_mix16B>:
    4e2d:	55                   	push   %rbp
    4e2e:	48 89 e5             	mov    %rsp,%rbp
    4e31:	53                   	push   %rbx
    4e32:	48 83 ec 38          	sub    $0x38,%rsp
    4e36:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e3a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4e3e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    4e42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e46:	48 89 c7             	mov    %rax,%rdi
    4e49:	e8 60 e1 ff ff       	callq  2fae <XXH_readLE64>
    4e4e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4e52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e56:	48 83 c0 08          	add    $0x8,%rax
    4e5a:	48 89 c7             	mov    %rax,%rdi
    4e5d:	e8 4c e1 ff ff       	callq  2fae <XXH_readLE64>
    4e62:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4e66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4e6a:	48 83 c0 08          	add    $0x8,%rax
    4e6e:	48 89 c7             	mov    %rax,%rdi
    4e71:	e8 38 e1 ff ff       	callq  2fae <XXH_readLE64>
    4e76:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    4e7a:	48 33 45 e0          	xor    -0x20(%rbp),%rax
    4e7e:	48 89 c3             	mov    %rax,%rbx
    4e81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4e85:	48 89 c7             	mov    %rax,%rdi
    4e88:	e8 21 e1 ff ff       	callq  2fae <XXH_readLE64>
    4e8d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4e91:	48 01 d0             	add    %rdx,%rax
    4e94:	48 33 45 e8          	xor    -0x18(%rbp),%rax
    4e98:	48 89 de             	mov    %rbx,%rsi
    4e9b:	48 89 c7             	mov    %rax,%rdi
    4e9e:	e8 35 fb ff ff       	callq  49d8 <XXH3_mul128_fold64>
    4ea3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ea7:	c9                   	leaveq 
    4ea8:	c3                   	retq   

0000000000004ea9 <XXH3_len_17to128_64b>:
    4ea9:	55                   	push   %rbp
    4eaa:	48 89 e5             	mov    %rsp,%rbp
    4ead:	48 83 ec 40          	sub    $0x40,%rsp
    4eb1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4eb5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4eb9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    4ebd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    4ec1:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    4ec5:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    4ecc:	79 37 9e 
    4ecf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ed3:	48 0f af c2          	imul   %rdx,%rax
    4ed7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4edb:	48 83 7d e0 20       	cmpq   $0x20,-0x20(%rbp)
    4ee0:	0f 86 fc 00 00 00    	jbe    4fe2 <XXH3_len_17to128_64b+0x139>
    4ee6:	48 83 7d e0 40       	cmpq   $0x40,-0x20(%rbp)
    4eeb:	0f 86 a3 00 00 00    	jbe    4f94 <XXH3_len_17to128_64b+0xeb>
    4ef1:	48 83 7d e0 60       	cmpq   $0x60,-0x20(%rbp)
    4ef6:	76 4e                	jbe    4f46 <XXH3_len_17to128_64b+0x9d>
    4ef8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4efc:	48 8d 70 60          	lea    0x60(%rax),%rsi
    4f00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f04:	48 8d 48 30          	lea    0x30(%rax),%rcx
    4f08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4f0c:	48 89 c2             	mov    %rax,%rdx
    4f0f:	48 89 cf             	mov    %rcx,%rdi
    4f12:	e8 16 ff ff ff       	callq  4e2d <XXH3_mix16B>
    4f17:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4f1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f1f:	48 8d 70 70          	lea    0x70(%rax),%rsi
    4f23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4f27:	48 8d 50 c0          	lea    -0x40(%rax),%rdx
    4f2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f2f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4f33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4f37:	48 89 c2             	mov    %rax,%rdx
    4f3a:	48 89 cf             	mov    %rcx,%rdi
    4f3d:	e8 eb fe ff ff       	callq  4e2d <XXH3_mix16B>
    4f42:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4f46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f4a:	48 8d 70 40          	lea    0x40(%rax),%rsi
    4f4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f52:	48 8d 48 20          	lea    0x20(%rax),%rcx
    4f56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4f5a:	48 89 c2             	mov    %rax,%rdx
    4f5d:	48 89 cf             	mov    %rcx,%rdi
    4f60:	e8 c8 fe ff ff       	callq  4e2d <XXH3_mix16B>
    4f65:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4f69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f6d:	48 8d 70 50          	lea    0x50(%rax),%rsi
    4f71:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4f75:	48 8d 50 d0          	lea    -0x30(%rax),%rdx
    4f79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f7d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4f81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4f85:	48 89 c2             	mov    %rax,%rdx
    4f88:	48 89 cf             	mov    %rcx,%rdi
    4f8b:	e8 9d fe ff ff       	callq  4e2d <XXH3_mix16B>
    4f90:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4f94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f98:	48 8d 70 20          	lea    0x20(%rax),%rsi
    4f9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fa0:	48 8d 48 10          	lea    0x10(%rax),%rcx
    4fa4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4fa8:	48 89 c2             	mov    %rax,%rdx
    4fab:	48 89 cf             	mov    %rcx,%rdi
    4fae:	e8 7a fe ff ff       	callq  4e2d <XXH3_mix16B>
    4fb3:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4fb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fbb:	48 8d 70 30          	lea    0x30(%rax),%rsi
    4fbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4fc3:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    4fc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fcb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4fcf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4fd3:	48 89 c2             	mov    %rax,%rdx
    4fd6:	48 89 cf             	mov    %rcx,%rdi
    4fd9:	e8 4f fe ff ff       	callq  4e2d <XXH3_mix16B>
    4fde:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4fe2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4fe6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    4fea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fee:	48 89 ce             	mov    %rcx,%rsi
    4ff1:	48 89 c7             	mov    %rax,%rdi
    4ff4:	e8 34 fe ff ff       	callq  4e2d <XXH3_mix16B>
    4ff9:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    4ffd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5001:	48 8d 70 10          	lea    0x10(%rax),%rsi
    5005:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5009:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    500d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5011:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5015:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5019:	48 89 c2             	mov    %rax,%rdx
    501c:	48 89 cf             	mov    %rcx,%rdi
    501f:	e8 09 fe ff ff       	callq  4e2d <XXH3_mix16B>
    5024:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    5028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    502c:	48 89 c7             	mov    %rax,%rdi
    502f:	e8 fc f9 ff ff       	callq  4a30 <XXH3_avalanche>
    5034:	c9                   	leaveq 
    5035:	c3                   	retq   

0000000000005036 <XXH3_len_129to240_64b>:
    5036:	55                   	push   %rbp
    5037:	48 89 e5             	mov    %rsp,%rbp
    503a:	48 83 ec 40          	sub    $0x40,%rsp
    503e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5042:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5046:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    504a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    504e:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    5052:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    5059:	79 37 9e 
    505c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5060:	48 0f af c2          	imul   %rdx,%rax
    5064:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5068:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    506c:	8d 50 0f             	lea    0xf(%rax),%edx
    506f:	85 c0                	test   %eax,%eax
    5071:	0f 48 c2             	cmovs  %edx,%eax
    5074:	c1 f8 04             	sar    $0x4,%eax
    5077:	89 45 f0             	mov    %eax,-0x10(%rbp)
    507a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5081:	eb 39                	jmp    50bc <XXH3_len_129to240_64b+0x86>
    5083:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5086:	c1 e0 04             	shl    $0x4,%eax
    5089:	48 63 d0             	movslq %eax,%rdx
    508c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5090:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    5094:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5097:	c1 e0 04             	shl    $0x4,%eax
    509a:	48 63 d0             	movslq %eax,%rdx
    509d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50a1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    50a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    50a9:	48 89 c2             	mov    %rax,%rdx
    50ac:	48 89 cf             	mov    %rcx,%rdi
    50af:	e8 79 fd ff ff       	callq  4e2d <XXH3_mix16B>
    50b4:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    50b8:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    50bc:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
    50c0:	7e c1                	jle    5083 <XXH3_len_129to240_64b+0x4d>
    50c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50c6:	48 89 c7             	mov    %rax,%rdi
    50c9:	e8 62 f9 ff ff       	callq  4a30 <XXH3_avalanche>
    50ce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    50d2:	c7 45 f4 08 00 00 00 	movl   $0x8,-0xc(%rbp)
    50d9:	eb 3f                	jmp    511a <XXH3_len_129to240_64b+0xe4>
    50db:	8b 45 f4             	mov    -0xc(%rbp),%eax
    50de:	83 e8 08             	sub    $0x8,%eax
    50e1:	c1 e0 04             	shl    $0x4,%eax
    50e4:	48 98                	cltq   
    50e6:	48 8d 50 03          	lea    0x3(%rax),%rdx
    50ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50ee:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    50f2:	8b 45 f4             	mov    -0xc(%rbp),%eax
    50f5:	c1 e0 04             	shl    $0x4,%eax
    50f8:	48 63 d0             	movslq %eax,%rdx
    50fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50ff:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5103:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5107:	48 89 c2             	mov    %rax,%rdx
    510a:	48 89 cf             	mov    %rcx,%rdi
    510d:	e8 1b fd ff ff       	callq  4e2d <XXH3_mix16B>
    5112:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    5116:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    511a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    511d:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    5120:	7c b9                	jl     50db <XXH3_len_129to240_64b+0xa5>
    5122:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5126:	48 8d 70 77          	lea    0x77(%rax),%rsi
    512a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    512e:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    5132:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5136:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    513a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    513e:	48 89 c2             	mov    %rax,%rdx
    5141:	48 89 cf             	mov    %rcx,%rdi
    5144:	e8 e4 fc ff ff       	callq  4e2d <XXH3_mix16B>
    5149:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    514d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5151:	48 89 c7             	mov    %rax,%rdi
    5154:	e8 d7 f8 ff ff       	callq  4a30 <XXH3_avalanche>
    5159:	c9                   	leaveq 
    515a:	c3                   	retq   

000000000000515b <XXH_writeLE64>:
    515b:	55                   	push   %rbp
    515c:	48 89 e5             	mov    %rsp,%rbp
    515f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5163:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5167:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    516b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    516f:	48 89 10             	mov    %rdx,(%rax)
    5172:	90                   	nop
    5173:	5d                   	pop    %rbp
    5174:	c3                   	retq   

0000000000005175 <XXH3_accumulate_512_sse2>:
    5175:	55                   	push   %rbp
    5176:	48 89 e5             	mov    %rsp,%rbp
    5179:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    5180:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    5187:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    518e:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
    5195:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    519c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    51a0:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    51a7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    51ab:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    51b2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    51b6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    51bd:	00 
    51be:	e9 5b 01 00 00       	jmpq   531e <XXH3_accumulate_512_sse2+0x1a9>
    51c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51c7:	48 c1 e0 04          	shl    $0x4,%rax
    51cb:	48 89 c2             	mov    %rax,%rdx
    51ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51d2:	48 01 d0             	add    %rdx,%rax
    51d5:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    51dc:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    51e3:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    51e7:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    51eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ef:	48 c1 e0 04          	shl    $0x4,%rax
    51f3:	48 89 c2             	mov    %rax,%rdx
    51f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    51fa:	48 01 d0             	add    %rdx,%rax
    51fd:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    5204:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    520b:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    520f:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    5213:	66 0f 6f 45 d0       	movdqa -0x30(%rbp),%xmm0
    5218:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
    521f:	66 0f 6f 45 c0       	movdqa -0x40(%rbp),%xmm0
    5224:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    522b:	66 0f 6f 8d 00 ff ff 	movdqa -0x100(%rbp),%xmm1
    5232:	ff 
    5233:	66 0f 6f 85 f0 fe ff 	movdqa -0x110(%rbp),%xmm0
    523a:	ff 
    523b:	66 0f ef c1          	pxor   %xmm1,%xmm0
    523f:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    5243:	66 0f 6f 45 b0       	movdqa -0x50(%rbp),%xmm0
    5248:	66 0f 70 c0 31       	pshufd $0x31,%xmm0,%xmm0
    524d:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    5251:	66 0f 6f 45 b0       	movdqa -0x50(%rbp),%xmm0
    5256:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    525d:	66 0f 6f 45 a0       	movdqa -0x60(%rbp),%xmm0
    5262:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    5269:	66 0f 6f 85 10 ff ff 	movdqa -0xf0(%rbp),%xmm0
    5270:	ff 
    5271:	66 0f 6f 8d 20 ff ff 	movdqa -0xe0(%rbp),%xmm1
    5278:	ff 
    5279:	66 0f f4 c1          	pmuludq %xmm1,%xmm0
    527d:	90                   	nop
    527e:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    5282:	66 0f 6f 45 d0       	movdqa -0x30(%rbp),%xmm0
    5287:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
    528c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    5290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5294:	48 c1 e0 04          	shl    $0x4,%rax
    5298:	48 89 c2             	mov    %rax,%rdx
    529b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    529f:	48 01 d0             	add    %rdx,%rax
    52a2:	66 0f 6f 00          	movdqa (%rax),%xmm0
    52a6:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    52ad:	66 0f 6f 45 80       	movdqa -0x80(%rbp),%xmm0
    52b2:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
    52b9:	66 0f 6f 8d 40 ff ff 	movdqa -0xc0(%rbp),%xmm1
    52c0:	ff 
    52c1:	66 0f 6f 85 30 ff ff 	movdqa -0xd0(%rbp),%xmm0
    52c8:	ff 
    52c9:	66 0f d4 c1          	paddq  %xmm1,%xmm0
    52cd:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    52d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52d8:	48 c1 e0 04          	shl    $0x4,%rax
    52dc:	48 89 c2             	mov    %rax,%rdx
    52df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52e3:	48 01 d0             	add    %rdx,%rax
    52e6:	66 0f 6f 45 90       	movdqa -0x70(%rbp),%xmm0
    52eb:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    52f2:	66 0f 6f 85 70 ff ff 	movdqa -0x90(%rbp),%xmm0
    52f9:	ff 
    52fa:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    5301:	66 0f 6f 8d 60 ff ff 	movdqa -0xa0(%rbp),%xmm1
    5308:	ff 
    5309:	66 0f 6f 85 50 ff ff 	movdqa -0xb0(%rbp),%xmm0
    5310:	ff 
    5311:	66 0f d4 c1          	paddq  %xmm1,%xmm0
    5315:	90                   	nop
    5316:	0f 29 00             	movaps %xmm0,(%rax)
    5319:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    531e:	48 83 7d f8 03       	cmpq   $0x3,-0x8(%rbp)
    5323:	0f 86 9a fe ff ff    	jbe    51c3 <XXH3_accumulate_512_sse2+0x4e>
    5329:	90                   	nop
    532a:	90                   	nop
    532b:	c9                   	leaveq 
    532c:	c3                   	retq   

000000000000532d <XXH3_scrambleAcc_sse2>:
    532d:	55                   	push   %rbp
    532e:	48 89 e5             	mov    %rsp,%rbp
    5331:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
    5338:	48 89 bd 38 fe ff ff 	mov    %rdi,-0x1c8(%rbp)
    533f:	48 89 b5 30 fe ff ff 	mov    %rsi,-0x1d0(%rbp)
    5346:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    534d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5351:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
    5358:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    535c:	b8 b1 79 37 9e       	mov    $0x9e3779b1,%eax
    5361:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
    5367:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    536d:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    5373:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    5379:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    537f:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    5385:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
    538b:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    5391:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
    5397:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    539d:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
    53a3:	66 0f 6e ca          	movd   %edx,%xmm1
    53a7:	66 0f 6e d0          	movd   %eax,%xmm2
    53ab:	66 0f 62 ca          	punpckldq %xmm2,%xmm1
    53af:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    53b5:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
    53bb:	66 0f 6e c2          	movd   %edx,%xmm0
    53bf:	66 0f 6e d8          	movd   %eax,%xmm3
    53c3:	66 0f 62 c3          	punpckldq %xmm3,%xmm0
    53c7:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    53cb:	90                   	nop
    53cc:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    53d0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    53d7:	00 
    53d8:	e9 c0 01 00 00       	jmpq   559d <XXH3_scrambleAcc_sse2+0x270>
    53dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e1:	48 c1 e0 04          	shl    $0x4,%rax
    53e5:	48 89 c2             	mov    %rax,%rdx
    53e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    53ec:	48 01 d0             	add    %rdx,%rax
    53ef:	66 0f 6f 00          	movdqa (%rax),%xmm0
    53f3:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    53f7:	66 0f 6f 45 c0       	movdqa -0x40(%rbp),%xmm0
    53fc:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    5403:	c7 85 4c fe ff ff 2f 	movl   $0x2f,-0x1b4(%rbp)
    540a:	00 00 00 
    540d:	66 0f 6f 85 50 fe ff 	movdqa -0x1b0(%rbp),%xmm0
    5414:	ff 
    5415:	66 0f 6e 8d 4c fe ff 	movd   -0x1b4(%rbp),%xmm1
    541c:	ff 
    541d:	66 0f d3 c1          	psrlq  %xmm1,%xmm0
    5421:	90                   	nop
    5422:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    5426:	66 0f 6f 45 c0       	movdqa -0x40(%rbp),%xmm0
    542b:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
    5432:	66 0f 6f 45 b0       	movdqa -0x50(%rbp),%xmm0
    5437:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    543e:	66 0f 6f 8d 70 fe ff 	movdqa -0x190(%rbp),%xmm1
    5445:	ff 
    5446:	66 0f 6f 85 60 fe ff 	movdqa -0x1a0(%rbp),%xmm0
    544d:	ff 
    544e:	66 0f ef c1          	pxor   %xmm1,%xmm0
    5452:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    5456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    545a:	48 c1 e0 04          	shl    $0x4,%rax
    545e:	48 89 c2             	mov    %rax,%rdx
    5461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5465:	48 01 d0             	add    %rdx,%rax
    5468:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    546f:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
    5476:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    547a:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    547e:	66 0f 6f 45 a0       	movdqa -0x60(%rbp),%xmm0
    5483:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
    548a:	66 0f 6f 45 90       	movdqa -0x70(%rbp),%xmm0
    548f:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    5496:	66 0f 6f 8d a0 fe ff 	movdqa -0x160(%rbp),%xmm1
    549d:	ff 
    549e:	66 0f 6f 85 90 fe ff 	movdqa -0x170(%rbp),%xmm0
    54a5:	ff 
    54a6:	66 0f ef c1          	pxor   %xmm1,%xmm0
    54aa:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    54ae:	66 0f 6f 45 80       	movdqa -0x80(%rbp),%xmm0
    54b3:	66 0f 70 c0 31       	pshufd $0x31,%xmm0,%xmm0
    54b8:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    54bf:	66 0f 6f 45 80       	movdqa -0x80(%rbp),%xmm0
    54c4:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
    54cb:	66 0f 6f 45 d0       	movdqa -0x30(%rbp),%xmm0
    54d0:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    54d7:	66 0f 6f 85 b0 fe ff 	movdqa -0x150(%rbp),%xmm0
    54de:	ff 
    54df:	66 0f 6f 8d c0 fe ff 	movdqa -0x140(%rbp),%xmm1
    54e6:	ff 
    54e7:	66 0f f4 c1          	pmuludq %xmm1,%xmm0
    54eb:	90                   	nop
    54ec:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    54f3:	66 0f 6f 85 70 ff ff 	movdqa -0x90(%rbp),%xmm0
    54fa:	ff 
    54fb:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    5502:	66 0f 6f 45 d0       	movdqa -0x30(%rbp),%xmm0
    5507:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
    550e:	66 0f 6f 85 d0 fe ff 	movdqa -0x130(%rbp),%xmm0
    5515:	ff 
    5516:	66 0f 6f 8d e0 fe ff 	movdqa -0x120(%rbp),%xmm1
    551d:	ff 
    551e:	66 0f f4 c1          	pmuludq %xmm1,%xmm0
    5522:	90                   	nop
    5523:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    552a:	66 0f 6f 85 50 ff ff 	movdqa -0xb0(%rbp),%xmm0
    5531:	ff 
    5532:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
    5539:	c7 85 fc fe ff ff 20 	movl   $0x20,-0x104(%rbp)
    5540:	00 00 00 
    5543:	66 0f 6f 85 00 ff ff 	movdqa -0x100(%rbp),%xmm0
    554a:	ff 
    554b:	66 0f 6e 8d fc fe ff 	movd   -0x104(%rbp),%xmm1
    5552:	ff 
    5553:	66 0f f3 c1          	psllq  %xmm1,%xmm0
    5557:	90                   	nop
    5558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    555c:	48 c1 e0 04          	shl    $0x4,%rax
    5560:	48 89 c2             	mov    %rax,%rdx
    5563:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5567:	48 01 d0             	add    %rdx,%rax
    556a:	66 0f 6f 8d 60 ff ff 	movdqa -0xa0(%rbp),%xmm1
    5571:	ff 
    5572:	0f 29 8d 20 ff ff ff 	movaps %xmm1,-0xe0(%rbp)
    5579:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    5580:	66 0f 6f 8d 20 ff ff 	movdqa -0xe0(%rbp),%xmm1
    5587:	ff 
    5588:	66 0f 6f 85 10 ff ff 	movdqa -0xf0(%rbp),%xmm0
    558f:	ff 
    5590:	66 0f d4 c1          	paddq  %xmm1,%xmm0
    5594:	90                   	nop
    5595:	0f 29 00             	movaps %xmm0,(%rax)
    5598:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    559d:	48 83 7d f8 03       	cmpq   $0x3,-0x8(%rbp)
    55a2:	0f 86 35 fe ff ff    	jbe    53dd <XXH3_scrambleAcc_sse2+0xb0>
    55a8:	90                   	nop
    55a9:	90                   	nop
    55aa:	c9                   	leaveq 
    55ab:	c3                   	retq   

00000000000055ac <XXH3_initCustomSecret_sse2>:
    55ac:	55                   	push   %rbp
    55ad:	48 89 e5             	mov    %rsp,%rbp
    55b0:	48 83 ec 18          	sub    $0x18,%rsp
    55b4:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    55bb:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    55c2:	c7 45 f8 0c 00 00 00 	movl   $0xc,-0x8(%rbp)
    55c9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    55d0:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    55d7:	48 f7 da             	neg    %rdx
    55da:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    55de:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    55e2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    55e6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    55ea:	66 48 0f 6e c0       	movq   %rax,%xmm0
    55ef:	66 48 0f 6e d2       	movq   %rdx,%xmm2
    55f4:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    55f8:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    55fc:	48 8d 05 7d 2f 00 00 	lea    0x2f7d(%rip),%rax        # 8580 <XXH3_kSecret>
    5603:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5607:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    560e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5612:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5616:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    561a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    5621:	eb 61                	jmp    5684 <XXH3_initCustomSecret_sse2+0xd8>
    5623:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5626:	c1 e0 02             	shl    $0x2,%eax
    5629:	48 98                	cltq   
    562b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5632:	00 
    5633:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5637:	48 01 d0             	add    %rdx,%rax
    563a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    563e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    5642:	0f 28 00             	movaps (%rax),%xmm0
    5645:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    5649:	66 0f 6f 45 90       	movdqa -0x70(%rbp),%xmm0
    564e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5651:	48 98                	cltq   
    5653:	48 c1 e0 04          	shl    $0x4,%rax
    5657:	48 89 c2             	mov    %rax,%rdx
    565a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    565e:	48 01 d0             	add    %rdx,%rax
    5661:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    5665:	66 0f 6f 45 e0       	movdqa -0x20(%rbp),%xmm0
    566a:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    566e:	66 0f 6f 4d b0       	movdqa -0x50(%rbp),%xmm1
    5673:	66 0f 6f 45 a0       	movdqa -0x60(%rbp),%xmm0
    5678:	66 0f d4 c1          	paddq  %xmm1,%xmm0
    567c:	90                   	nop
    567d:	0f 29 00             	movaps %xmm0,(%rax)
    5680:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    5684:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5687:	3b 45 f8             	cmp    -0x8(%rbp),%eax
    568a:	7c 97                	jl     5623 <XXH3_initCustomSecret_sse2+0x77>
    568c:	90                   	nop
    568d:	90                   	nop
    568e:	c9                   	leaveq 
    568f:	c3                   	retq   

0000000000005690 <XXH3_accumulate_512_scalar>:
    5690:	55                   	push   %rbp
    5691:	48 89 e5             	mov    %rsp,%rbp
    5694:	48 83 ec 48          	sub    $0x48,%rsp
    5698:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    569c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    56a0:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    56a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    56a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    56ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    56b4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    56b8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    56bc:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    56c3:	00 
    56c4:	e9 c5 00 00 00       	jmpq   578e <XXH3_accumulate_512_scalar+0xfe>
    56c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56cd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    56d4:	00 
    56d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56d9:	48 01 d0             	add    %rdx,%rax
    56dc:	48 89 c7             	mov    %rax,%rdi
    56df:	e8 ca d8 ff ff       	callq  2fae <XXH_readLE64>
    56e4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    56e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56ec:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    56f3:	00 
    56f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    56f8:	48 01 d0             	add    %rdx,%rax
    56fb:	48 89 c7             	mov    %rax,%rdi
    56fe:	e8 ab d8 ff ff       	callq  2fae <XXH_readLE64>
    5703:	48 33 45 d8          	xor    -0x28(%rbp),%rax
    5707:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    570b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    570f:	48 83 f0 01          	xor    $0x1,%rax
    5713:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    571a:	00 
    571b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    571f:	48 01 d0             	add    %rdx,%rax
    5722:	48 8b 08             	mov    (%rax),%rcx
    5725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5729:	48 83 f0 01          	xor    $0x1,%rax
    572d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5734:	00 
    5735:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5739:	48 01 d0             	add    %rdx,%rax
    573c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5740:	48 01 ca             	add    %rcx,%rdx
    5743:	48 89 10             	mov    %rdx,(%rax)
    5746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    574a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5751:	00 
    5752:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5756:	48 01 d0             	add    %rdx,%rax
    5759:	48 8b 08             	mov    (%rax),%rcx
    575c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5760:	89 c2                	mov    %eax,%edx
    5762:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5766:	48 c1 e8 20          	shr    $0x20,%rax
    576a:	89 c0                	mov    %eax,%eax
    576c:	48 0f af d0          	imul   %rax,%rdx
    5770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5774:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    577b:	00 
    577c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5780:	48 01 f0             	add    %rsi,%rax
    5783:	48 01 ca             	add    %rcx,%rdx
    5786:	48 89 10             	mov    %rdx,(%rax)
    5789:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    578e:	48 83 7d f8 07       	cmpq   $0x7,-0x8(%rbp)
    5793:	0f 86 30 ff ff ff    	jbe    56c9 <XXH3_accumulate_512_scalar+0x39>
    5799:	90                   	nop
    579a:	90                   	nop
    579b:	c9                   	leaveq 
    579c:	c3                   	retq   

000000000000579d <XXH3_scrambleAcc_scalar>:
    579d:	55                   	push   %rbp
    579e:	48 89 e5             	mov    %rsp,%rbp
    57a1:	48 83 ec 40          	sub    $0x40,%rsp
    57a5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    57a9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    57ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    57b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    57b5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    57b9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    57bd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    57c4:	00 
    57c5:	e9 88 00 00 00       	jmpq   5852 <XXH3_scrambleAcc_scalar+0xb5>
    57ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ce:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    57d5:	00 
    57d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57da:	48 01 d0             	add    %rdx,%rax
    57dd:	48 89 c7             	mov    %rax,%rdi
    57e0:	e8 c9 d7 ff ff       	callq  2fae <XXH_readLE64>
    57e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    57e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ed:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    57f4:	00 
    57f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57f9:	48 01 d0             	add    %rdx,%rax
    57fc:	48 8b 00             	mov    (%rax),%rax
    57ff:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5803:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5807:	be 2f 00 00 00       	mov    $0x2f,%esi
    580c:	48 89 c7             	mov    %rax,%rdi
    580f:	e8 fc f1 ff ff       	callq  4a10 <XXH_xorshift64>
    5814:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5818:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    581c:	48 31 45 d8          	xor    %rax,-0x28(%rbp)
    5820:	b8 b1 79 37 9e       	mov    $0x9e3779b1,%eax
    5825:	89 c2                	mov    %eax,%edx
    5827:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    582b:	48 0f af c2          	imul   %rdx,%rax
    582f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5837:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    583e:	00 
    583f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5843:	48 01 c2             	add    %rax,%rdx
    5846:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    584a:	48 89 02             	mov    %rax,(%rdx)
    584d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    5852:	48 83 7d f8 07       	cmpq   $0x7,-0x8(%rbp)
    5857:	0f 86 6d ff ff ff    	jbe    57ca <XXH3_scrambleAcc_scalar+0x2d>
    585d:	90                   	nop
    585e:	90                   	nop
    585f:	c9                   	leaveq 
    5860:	c3                   	retq   

0000000000005861 <XXH3_initCustomSecret_scalar>:
    5861:	55                   	push   %rbp
    5862:	48 89 e5             	mov    %rsp,%rbp
    5865:	48 83 ec 40          	sub    $0x40,%rsp
    5869:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    586d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    5871:	48 8d 05 08 2d 00 00 	lea    0x2d08(%rip),%rax        # 8580 <XXH3_kSecret>
    5878:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    587c:	c7 45 ec 0c 00 00 00 	movl   $0xc,-0x14(%rbp)
    5883:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    588a:	e9 8b 00 00 00       	jmpq   591a <XXH3_initCustomSecret_scalar+0xb9>
    588f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5892:	c1 e0 04             	shl    $0x4,%eax
    5895:	48 63 d0             	movslq %eax,%rdx
    5898:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    589c:	48 01 d0             	add    %rdx,%rax
    589f:	48 89 c7             	mov    %rax,%rdi
    58a2:	e8 07 d7 ff ff       	callq  2fae <XXH_readLE64>
    58a7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    58ab:	48 01 d0             	add    %rdx,%rax
    58ae:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    58b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    58b5:	c1 e0 04             	shl    $0x4,%eax
    58b8:	48 98                	cltq   
    58ba:	48 8d 50 08          	lea    0x8(%rax),%rdx
    58be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    58c2:	48 01 d0             	add    %rdx,%rax
    58c5:	48 89 c7             	mov    %rax,%rdi
    58c8:	e8 e1 d6 ff ff       	callq  2fae <XXH_readLE64>
    58cd:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
    58d1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    58d5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    58d8:	c1 e0 04             	shl    $0x4,%eax
    58db:	48 63 d0             	movslq %eax,%rdx
    58de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    58e2:	48 01 c2             	add    %rax,%rdx
    58e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    58e9:	48 89 c6             	mov    %rax,%rsi
    58ec:	48 89 d7             	mov    %rdx,%rdi
    58ef:	e8 67 f8 ff ff       	callq  515b <XXH_writeLE64>
    58f4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    58f7:	c1 e0 04             	shl    $0x4,%eax
    58fa:	48 98                	cltq   
    58fc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5900:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5904:	48 01 c2             	add    %rax,%rdx
    5907:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    590b:	48 89 c6             	mov    %rax,%rsi
    590e:	48 89 d7             	mov    %rdx,%rdi
    5911:	e8 45 f8 ff ff       	callq  515b <XXH_writeLE64>
    5916:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    591a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    591d:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    5920:	0f 8c 69 ff ff ff    	jl     588f <XXH3_initCustomSecret_scalar+0x2e>
    5926:	90                   	nop
    5927:	90                   	nop
    5928:	c9                   	leaveq 
    5929:	c3                   	retq   

000000000000592a <XXH3_accumulate>:
    592a:	55                   	push   %rbp
    592b:	48 89 e5             	mov    %rsp,%rbp
    592e:	48 83 ec 40          	sub    $0x40,%rsp
    5932:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5936:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    593a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    593e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    5942:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    5946:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    594d:	00 
    594e:	eb 50                	jmp    59a0 <XXH3_accumulate+0x76>
    5950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5954:	48 c1 e0 06          	shl    $0x6,%rax
    5958:	48 89 c2             	mov    %rax,%rdx
    595b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    595f:	48 01 d0             	add    %rdx,%rax
    5962:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5966:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    596a:	48 05 80 01 00 00    	add    $0x180,%rax
    5970:	0f 18 08             	prefetcht0 (%rax)
    5973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5977:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    597e:	00 
    597f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5983:	48 01 c2             	add    %rax,%rdx
    5986:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    598a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    598e:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
    5992:	48 89 ce             	mov    %rcx,%rsi
    5995:	48 89 c7             	mov    %rax,%rdi
    5998:	41 ff d0             	callq  *%r8
    599b:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    59a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59a4:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    59a8:	72 a6                	jb     5950 <XXH3_accumulate+0x26>
    59aa:	90                   	nop
    59ab:	90                   	nop
    59ac:	c9                   	leaveq 
    59ad:	c3                   	retq   

00000000000059ae <XXH3_hashLong_internal_loop>:
    59ae:	55                   	push   %rbp
    59af:	48 89 e5             	mov    %rsp,%rbp
    59b2:	48 83 ec 60          	sub    $0x60,%rsp
    59b6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    59ba:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    59be:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    59c2:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    59c6:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    59ca:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
    59ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    59d2:	48 83 e8 40          	sub    $0x40,%rax
    59d6:	48 c1 e8 03          	shr    $0x3,%rax
    59da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    59de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59e2:	48 c1 e0 06          	shl    $0x6,%rax
    59e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    59ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    59ee:	48 83 e8 01          	sub    $0x1,%rax
    59f2:	ba 00 00 00 00       	mov    $0x0,%edx
    59f7:	48 f7 75 e8          	divq   -0x18(%rbp)
    59fb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    59ff:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    5a06:	00 
    5a07:	eb 54                	jmp    5a5d <XXH3_hashLong_internal_loop+0xaf>
    5a09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a0d:	48 0f af 45 e8       	imul   -0x18(%rbp),%rax
    5a12:	48 89 c2             	mov    %rax,%rdx
    5a15:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a19:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    5a1d:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    5a21:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5a25:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5a29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5a2d:	49 89 f8             	mov    %rdi,%r8
    5a30:	48 89 c7             	mov    %rax,%rdi
    5a33:	e8 f2 fe ff ff       	callq  592a <XXH3_accumulate>
    5a38:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5a3c:	48 8d 50 c0          	lea    -0x40(%rax),%rdx
    5a40:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5a44:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5a48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5a4c:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    5a50:	48 89 ce             	mov    %rcx,%rsi
    5a53:	48 89 c7             	mov    %rax,%rdi
    5a56:	ff d2                	callq  *%rdx
    5a58:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    5a5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a61:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5a65:	72 a2                	jb     5a09 <XXH3_hashLong_internal_loop+0x5b>
    5a67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a6b:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
    5a70:	48 89 c2             	mov    %rax,%rdx
    5a73:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a77:	48 29 d0             	sub    %rdx,%rax
    5a7a:	48 83 e8 01          	sub    $0x1,%rax
    5a7e:	48 c1 e8 06          	shr    $0x6,%rax
    5a82:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5a86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5a8a:	48 0f af 45 e8       	imul   -0x18(%rbp),%rax
    5a8f:	48 89 c2             	mov    %rax,%rdx
    5a92:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a96:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    5a9a:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    5a9e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    5aa2:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5aa6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5aaa:	49 89 f8             	mov    %rdi,%r8
    5aad:	48 89 c7             	mov    %rax,%rdi
    5ab0:	e8 75 fe ff ff       	callq  592a <XXH3_accumulate>
    5ab5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5ab9:	48 8d 50 c0          	lea    -0x40(%rax),%rdx
    5abd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5ac1:	48 01 d0             	add    %rdx,%rax
    5ac4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5ac8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5acc:	48 8d 50 b9          	lea    -0x47(%rax),%rdx
    5ad0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5ad4:	48 01 c2             	add    %rax,%rdx
    5ad7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5adb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5adf:	4c 8b 45 a0          	mov    -0x60(%rbp),%r8
    5ae3:	48 89 ce             	mov    %rcx,%rsi
    5ae6:	48 89 c7             	mov    %rax,%rdi
    5ae9:	41 ff d0             	callq  *%r8
    5aec:	90                   	nop
    5aed:	c9                   	leaveq 
    5aee:	c3                   	retq   

0000000000005aef <XXH3_mix2Accs>:
    5aef:	55                   	push   %rbp
    5af0:	48 89 e5             	mov    %rsp,%rbp
    5af3:	41 54                	push   %r12
    5af5:	53                   	push   %rbx
    5af6:	48 83 ec 10          	sub    $0x10,%rsp
    5afa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5afe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5b02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b06:	48 83 c0 08          	add    $0x8,%rax
    5b0a:	48 8b 18             	mov    (%rax),%rbx
    5b0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5b11:	48 83 c0 08          	add    $0x8,%rax
    5b15:	48 89 c7             	mov    %rax,%rdi
    5b18:	e8 91 d4 ff ff       	callq  2fae <XXH_readLE64>
    5b1d:	48 31 c3             	xor    %rax,%rbx
    5b20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b24:	4c 8b 20             	mov    (%rax),%r12
    5b27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5b2b:	48 89 c7             	mov    %rax,%rdi
    5b2e:	e8 7b d4 ff ff       	callq  2fae <XXH_readLE64>
    5b33:	4c 31 e0             	xor    %r12,%rax
    5b36:	48 89 de             	mov    %rbx,%rsi
    5b39:	48 89 c7             	mov    %rax,%rdi
    5b3c:	e8 97 ee ff ff       	callq  49d8 <XXH3_mul128_fold64>
    5b41:	48 83 c4 10          	add    $0x10,%rsp
    5b45:	5b                   	pop    %rbx
    5b46:	41 5c                	pop    %r12
    5b48:	5d                   	pop    %rbp
    5b49:	c3                   	retq   

0000000000005b4a <XXH3_mergeAccs>:
    5b4a:	55                   	push   %rbp
    5b4b:	48 89 e5             	mov    %rsp,%rbp
    5b4e:	48 83 ec 30          	sub    $0x30,%rsp
    5b52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5b5a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    5b5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b62:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5b66:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    5b6d:	00 
    5b6e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    5b75:	00 
    5b76:	eb 38                	jmp    5bb0 <XXH3_mergeAccs+0x66>
    5b78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b7c:	48 c1 e0 04          	shl    $0x4,%rax
    5b80:	48 89 c2             	mov    %rax,%rdx
    5b83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5b87:	48 01 c2             	add    %rax,%rdx
    5b8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b8e:	48 c1 e0 04          	shl    $0x4,%rax
    5b92:	48 89 c1             	mov    %rax,%rcx
    5b95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b99:	48 01 c8             	add    %rcx,%rax
    5b9c:	48 89 d6             	mov    %rdx,%rsi
    5b9f:	48 89 c7             	mov    %rax,%rdi
    5ba2:	e8 48 ff ff ff       	callq  5aef <XXH3_mix2Accs>
    5ba7:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    5bab:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    5bb0:	48 83 7d f0 03       	cmpq   $0x3,-0x10(%rbp)
    5bb5:	76 c1                	jbe    5b78 <XXH3_mergeAccs+0x2e>
    5bb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bbb:	48 89 c7             	mov    %rax,%rdi
    5bbe:	e8 6d ee ff ff       	callq  4a30 <XXH3_avalanche>
    5bc3:	c9                   	leaveq 
    5bc4:	c3                   	retq   

0000000000005bc5 <XXH3_hashLong_64b_internal>:
    5bc5:	55                   	push   %rbp
    5bc6:	48 89 e5             	mov    %rsp,%rbp
    5bc9:	48 83 ec 70          	sub    $0x70,%rsp
    5bcd:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5bd1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    5bd5:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    5bd9:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    5bdd:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
    5be1:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
    5be5:	b8 3d ae b2 c2       	mov    $0xc2b2ae3d,%eax
    5bea:	89 c0                	mov    %eax,%eax
    5bec:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5bf0:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    5bf7:	79 37 9e 
    5bfa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5bfe:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    5c05:	ae b2 c2 
    5c08:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5c0c:	48 b8 f9 79 37 9e b1 	movabs $0x165667b19e3779f9,%rax
    5c13:	67 56 16 
    5c16:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5c1a:	48 b8 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rax
    5c21:	ca eb 85 
    5c24:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5c28:	b8 77 ca eb 85       	mov    $0x85ebca77,%eax
    5c2d:	89 c0                	mov    %eax,%eax
    5c2f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5c33:	48 b8 c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rax
    5c3a:	eb d4 27 
    5c3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5c41:	b8 b1 79 37 9e       	mov    $0x9e3779b1,%eax
    5c46:	89 c0                	mov    %eax,%eax
    5c48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5c4c:	4c 8b 45 98          	mov    -0x68(%rbp),%r8
    5c50:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    5c54:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    5c58:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5c5c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    5c60:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5c64:	48 83 ec 08          	sub    $0x8,%rsp
    5c68:	ff 75 90             	pushq  -0x70(%rbp)
    5c6b:	4d 89 c1             	mov    %r8,%r9
    5c6e:	49 89 f8             	mov    %rdi,%r8
    5c71:	48 89 c7             	mov    %rax,%rdi
    5c74:	e8 35 fd ff ff       	callq  59ae <XXH3_hashLong_internal_loop>
    5c79:	48 83 c4 10          	add    $0x10,%rsp
    5c7d:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    5c84:	79 37 9e 
    5c87:	48 0f af 45 b0       	imul   -0x50(%rbp),%rax
    5c8c:	48 89 c2             	mov    %rax,%rdx
    5c8f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5c93:	48 8d 48 0b          	lea    0xb(%rax),%rcx
    5c97:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5c9b:	48 89 ce             	mov    %rcx,%rsi
    5c9e:	48 89 c7             	mov    %rax,%rdi
    5ca1:	e8 a4 fe ff ff       	callq  5b4a <XXH3_mergeAccs>
    5ca6:	c9                   	leaveq 
    5ca7:	c3                   	retq   

0000000000005ca8 <XXH3_hashLong_64b_withSecret>:
    5ca8:	55                   	push   %rbp
    5ca9:	48 89 e5             	mov    %rsp,%rbp
    5cac:	48 83 ec 30          	sub    $0x30,%rsp
    5cb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5cbc:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5cc0:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    5cc4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    5cc8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5ccc:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cd4:	4c 8d 0d 52 f6 ff ff 	lea    -0x9ae(%rip),%r9        # 532d <XXH3_scrambleAcc_sse2>
    5cdb:	4c 8d 05 93 f4 ff ff 	lea    -0xb6d(%rip),%r8        # 5175 <XXH3_accumulate_512_sse2>
    5ce2:	48 89 c7             	mov    %rax,%rdi
    5ce5:	e8 db fe ff ff       	callq  5bc5 <XXH3_hashLong_64b_internal>
    5cea:	c9                   	leaveq 
    5ceb:	c3                   	retq   

0000000000005cec <XXH3_hashLong_64b_default>:
    5cec:	55                   	push   %rbp
    5ced:	48 89 e5             	mov    %rsp,%rbp
    5cf0:	48 83 ec 30          	sub    $0x30,%rsp
    5cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cfc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5d00:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5d04:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    5d08:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5d0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d10:	4c 8d 0d 16 f6 ff ff 	lea    -0x9ea(%rip),%r9        # 532d <XXH3_scrambleAcc_sse2>
    5d17:	4c 8d 05 57 f4 ff ff 	lea    -0xba9(%rip),%r8        # 5175 <XXH3_accumulate_512_sse2>
    5d1e:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    5d23:	48 8d 15 56 28 00 00 	lea    0x2856(%rip),%rdx        # 8580 <XXH3_kSecret>
    5d2a:	48 89 c7             	mov    %rax,%rdi
    5d2d:	e8 93 fe ff ff       	callq  5bc5 <XXH3_hashLong_64b_internal>
    5d32:	c9                   	leaveq 
    5d33:	c3                   	retq   

0000000000005d34 <XXH3_hashLong_64b_withSeed_internal>:
    5d34:	55                   	push   %rbp
    5d35:	48 89 e5             	mov    %rsp,%rbp
    5d38:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    5d3f:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    5d46:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    5d4d:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    5d54:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
    5d5b:	4c 89 85 18 ff ff ff 	mov    %r8,-0xe8(%rbp)
    5d62:	4c 89 8d 10 ff ff ff 	mov    %r9,-0xf0(%rbp)
    5d69:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
    5d70:	00 
    5d71:	75 38                	jne    5dab <XXH3_hashLong_64b_withSeed_internal+0x77>
    5d73:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
    5d7a:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    5d81:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
    5d88:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    5d8f:	49 89 c9             	mov    %rcx,%r9
    5d92:	49 89 d0             	mov    %rdx,%r8
    5d95:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    5d9a:	48 8d 15 df 27 00 00 	lea    0x27df(%rip),%rdx        # 8580 <XXH3_kSecret>
    5da1:	48 89 c7             	mov    %rax,%rdi
    5da4:	e8 1c fe ff ff       	callq  5bc5 <XXH3_hashLong_64b_internal>
    5da9:	eb 53                	jmp    5dfe <XXH3_hashLong_64b_withSeed_internal+0xca>
    5dab:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    5db2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    5db9:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
    5dc0:	48 89 d6             	mov    %rdx,%rsi
    5dc3:	48 89 c7             	mov    %rax,%rdi
    5dc6:	ff d1                	callq  *%rcx
    5dc8:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
    5dcf:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
    5dd6:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    5ddd:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
    5de4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    5deb:	49 89 f9             	mov    %rdi,%r9
    5dee:	49 89 c8             	mov    %rcx,%r8
    5df1:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    5df6:	48 89 c7             	mov    %rax,%rdi
    5df9:	e8 c7 fd ff ff       	callq  5bc5 <XXH3_hashLong_64b_internal>
    5dfe:	c9                   	leaveq 
    5dff:	c3                   	retq   

0000000000005e00 <XXH3_hashLong_64b_withSeed>:
    5e00:	55                   	push   %rbp
    5e01:	48 89 e5             	mov    %rsp,%rbp
    5e04:	48 83 ec 30          	sub    $0x30,%rsp
    5e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5e14:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5e18:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    5e1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5e20:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5e24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e28:	4c 8d 0d 7d f7 ff ff 	lea    -0x883(%rip),%r9        # 55ac <XXH3_initCustomSecret_sse2>
    5e2f:	4c 8d 05 f7 f4 ff ff 	lea    -0xb09(%rip),%r8        # 532d <XXH3_scrambleAcc_sse2>
    5e36:	48 8d 0d 38 f3 ff ff 	lea    -0xcc8(%rip),%rcx        # 5175 <XXH3_accumulate_512_sse2>
    5e3d:	48 89 c7             	mov    %rax,%rdi
    5e40:	e8 ef fe ff ff       	callq  5d34 <XXH3_hashLong_64b_withSeed_internal>
    5e45:	c9                   	leaveq 
    5e46:	c3                   	retq   

0000000000005e47 <XXH3_64bits_internal>:
    5e47:	55                   	push   %rbp
    5e48:	48 89 e5             	mov    %rsp,%rbp
    5e4b:	48 83 ec 30          	sub    $0x30,%rsp
    5e4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e57:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5e5b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5e5f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    5e63:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
    5e67:	48 83 7d f0 10       	cmpq   $0x10,-0x10(%rbp)
    5e6c:	77 1a                	ja     5e88 <XXH3_64bits_internal+0x41>
    5e6e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5e72:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5e76:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e7e:	48 89 c7             	mov    %rax,%rdi
    5e81:	e8 e1 ee ff ff       	callq  4d67 <XXH3_len_0to16_64b>
    5e86:	eb 77                	jmp    5eff <XXH3_64bits_internal+0xb8>
    5e88:	48 81 7d f0 80 00 00 	cmpq   $0x80,-0x10(%rbp)
    5e8f:	00 
    5e90:	77 21                	ja     5eb3 <XXH3_64bits_internal+0x6c>
    5e92:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    5e96:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    5e9a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5e9e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5ea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ea6:	49 89 f8             	mov    %rdi,%r8
    5ea9:	48 89 c7             	mov    %rax,%rdi
    5eac:	e8 f8 ef ff ff       	callq  4ea9 <XXH3_len_17to128_64b>
    5eb1:	eb 4c                	jmp    5eff <XXH3_64bits_internal+0xb8>
    5eb3:	48 81 7d f0 f0 00 00 	cmpq   $0xf0,-0x10(%rbp)
    5eba:	00 
    5ebb:	77 21                	ja     5ede <XXH3_64bits_internal+0x97>
    5ebd:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    5ec1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    5ec5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5ec9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5ecd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed1:	49 89 f8             	mov    %rdi,%r8
    5ed4:	48 89 c7             	mov    %rax,%rdi
    5ed7:	e8 5a f1 ff ff       	callq  5036 <XXH3_len_129to240_64b>
    5edc:	eb 21                	jmp    5eff <XXH3_64bits_internal+0xb8>
    5ede:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    5ee2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5ee6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5eea:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef2:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
    5ef6:	49 89 f8             	mov    %rdi,%r8
    5ef9:	48 89 c7             	mov    %rax,%rdi
    5efc:	41 ff d1             	callq  *%r9
    5eff:	c9                   	leaveq 
    5f00:	c3                   	retq   

0000000000005f01 <XXH3_64bits>:
    5f01:	55                   	push   %rbp
    5f02:	48 89 e5             	mov    %rsp,%rbp
    5f05:	48 83 ec 10          	sub    $0x10,%rsp
    5f09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f11:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5f15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f19:	4c 8d 0d cc fd ff ff 	lea    -0x234(%rip),%r9        # 5cec <XXH3_hashLong_64b_default>
    5f20:	41 b8 c0 00 00 00    	mov    $0xc0,%r8d
    5f26:	48 8d 0d 53 26 00 00 	lea    0x2653(%rip),%rcx        # 8580 <XXH3_kSecret>
    5f2d:	ba 00 00 00 00       	mov    $0x0,%edx
    5f32:	48 89 c7             	mov    %rax,%rdi
    5f35:	e8 0d ff ff ff       	callq  5e47 <XXH3_64bits_internal>
    5f3a:	c9                   	leaveq 
    5f3b:	c3                   	retq   

0000000000005f3c <XXH3_64bits_withSecret>:
    5f3c:	55                   	push   %rbp
    5f3d:	48 89 e5             	mov    %rsp,%rbp
    5f40:	48 83 ec 20          	sub    $0x20,%rsp
    5f44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5f50:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5f54:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5f58:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f5c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5f60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f64:	4c 8d 0d 3d fd ff ff 	lea    -0x2c3(%rip),%r9        # 5ca8 <XXH3_hashLong_64b_withSecret>
    5f6b:	49 89 c8             	mov    %rcx,%r8
    5f6e:	48 89 d1             	mov    %rdx,%rcx
    5f71:	ba 00 00 00 00       	mov    $0x0,%edx
    5f76:	48 89 c7             	mov    %rax,%rdi
    5f79:	e8 c9 fe ff ff       	callq  5e47 <XXH3_64bits_internal>
    5f7e:	c9                   	leaveq 
    5f7f:	c3                   	retq   

0000000000005f80 <XXH3_64bits_withSeed>:
    5f80:	55                   	push   %rbp
    5f81:	48 89 e5             	mov    %rsp,%rbp
    5f84:	48 83 ec 20          	sub    $0x20,%rsp
    5f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f90:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5f94:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f98:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fa0:	4c 8d 0d 59 fe ff ff 	lea    -0x1a7(%rip),%r9        # 5e00 <XXH3_hashLong_64b_withSeed>
    5fa7:	41 b8 c0 00 00 00    	mov    $0xc0,%r8d
    5fad:	48 8d 0d cc 25 00 00 	lea    0x25cc(%rip),%rcx        # 8580 <XXH3_kSecret>
    5fb4:	48 89 c7             	mov    %rax,%rdi
    5fb7:	e8 8b fe ff ff       	callq  5e47 <XXH3_64bits_internal>
    5fbc:	c9                   	leaveq 
    5fbd:	c3                   	retq   

0000000000005fbe <XXH_alignedMalloc>:
    5fbe:	55                   	push   %rbp
    5fbf:	48 89 e5             	mov    %rsp,%rbp
    5fc2:	48 83 ec 30          	sub    $0x30,%rsp
    5fc6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5fca:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5fce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5fd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5fd6:	48 01 d0             	add    %rdx,%rax
    5fd9:	48 89 c7             	mov    %rax,%rdi
    5fdc:	e8 11 c4 ff ff       	callq  23f2 <XXH_malloc>
    5fe1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5fe5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5fea:	74 3d                	je     6029 <XXH_alignedMalloc+0x6b>
    5fec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5ff0:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    5ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ff8:	48 21 c2             	and    %rax,%rdx
    5ffb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5fff:	48 29 d0             	sub    %rdx,%rax
    6002:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6006:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    600a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    600e:	48 01 d0             	add    %rdx,%rax
    6011:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6015:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6019:	48 83 e8 01          	sub    $0x1,%rax
    601d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6021:	88 10                	mov    %dl,(%rax)
    6023:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6027:	eb 05                	jmp    602e <XXH_alignedMalloc+0x70>
    6029:	b8 00 00 00 00       	mov    $0x0,%eax
    602e:	c9                   	leaveq 
    602f:	c3                   	retq   

0000000000006030 <XXH_alignedFree>:
    6030:	55                   	push   %rbp
    6031:	48 89 e5             	mov    %rsp,%rbp
    6034:	48 83 ec 30          	sub    $0x30,%rsp
    6038:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    603c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    6041:	74 34                	je     6077 <XXH_alignedFree+0x47>
    6043:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6047:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    604b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    604f:	0f b6 40 ff          	movzbl -0x1(%rax),%eax
    6053:	88 45 f7             	mov    %al,-0x9(%rbp)
    6056:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
    605a:	48 f7 d8             	neg    %rax
    605d:	48 89 c2             	mov    %rax,%rdx
    6060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6064:	48 01 d0             	add    %rdx,%rax
    6067:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    606b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    606f:	48 89 c7             	mov    %rax,%rdi
    6072:	e8 95 c3 ff ff       	callq  240c <XXH_free>
    6077:	90                   	nop
    6078:	c9                   	leaveq 
    6079:	c3                   	retq   

000000000000607a <XXH3_createState>:
    607a:	55                   	push   %rbp
    607b:	48 89 e5             	mov    %rsp,%rbp
    607e:	48 83 ec 10          	sub    $0x10,%rsp
    6082:	be 40 00 00 00       	mov    $0x40,%esi
    6087:	bf 40 02 00 00       	mov    $0x240,%edi
    608c:	e8 2d ff ff ff       	callq  5fbe <XXH_alignedMalloc>
    6091:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6095:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    609a:	75 07                	jne    60a3 <XXH3_createState+0x29>
    609c:	b8 00 00 00 00       	mov    $0x0,%eax
    60a1:	eb 13                	jmp    60b6 <XXH3_createState+0x3c>
    60a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60a7:	48 c7 80 28 02 00 00 	movq   $0x0,0x228(%rax)
    60ae:	00 00 00 00 
    60b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b6:	c9                   	leaveq 
    60b7:	c3                   	retq   

00000000000060b8 <XXH3_freeState>:
    60b8:	55                   	push   %rbp
    60b9:	48 89 e5             	mov    %rsp,%rbp
    60bc:	48 83 ec 10          	sub    $0x10,%rsp
    60c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60c8:	48 89 c7             	mov    %rax,%rdi
    60cb:	e8 60 ff ff ff       	callq  6030 <XXH_alignedFree>
    60d0:	b8 00 00 00 00       	mov    $0x0,%eax
    60d5:	c9                   	leaveq 
    60d6:	c3                   	retq   

00000000000060d7 <XXH3_copyState>:
    60d7:	55                   	push   %rbp
    60d8:	48 89 e5             	mov    %rsp,%rbp
    60db:	48 83 ec 10          	sub    $0x10,%rsp
    60df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    60e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60ef:	ba 40 02 00 00       	mov    $0x240,%edx
    60f4:	48 89 ce             	mov    %rcx,%rsi
    60f7:	48 89 c7             	mov    %rax,%rdi
    60fa:	e8 91 b0 ff ff       	callq  1190 <memcpy@plt>
    60ff:	90                   	nop
    6100:	c9                   	leaveq 
    6101:	c3                   	retq   

0000000000006102 <XXH3_reset_internal>:
    6102:	55                   	push   %rbp
    6103:	48 89 e5             	mov    %rsp,%rbp
    6106:	48 83 ec 30          	sub    $0x30,%rsp
    610a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    610e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6112:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6116:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    611a:	48 c7 45 f8 00 02 00 	movq   $0x200,-0x8(%rbp)
    6121:	00 
    6122:	b8 18 02 00 00       	mov    $0x218,%eax
    6127:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    612b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    612f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6133:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6137:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    613b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    613f:	48 89 c2             	mov    %rax,%rdx
    6142:	be 00 00 00 00       	mov    $0x0,%esi
    6147:	48 89 cf             	mov    %rcx,%rdi
    614a:	e8 e1 af ff ff       	callq  1130 <memset@plt>
    614f:	b8 3d ae b2 c2       	mov    $0xc2b2ae3d,%eax
    6154:	89 c2                	mov    %eax,%edx
    6156:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    615a:	48 89 10             	mov    %rdx,(%rax)
    615d:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    6164:	79 37 9e 
    6167:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    616b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    616f:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    6176:	ae b2 c2 
    6179:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    617d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    6181:	48 ba f9 79 37 9e b1 	movabs $0x165667b19e3779f9,%rdx
    6188:	67 56 16 
    618b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    618f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    6193:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    619a:	ca eb 85 
    619d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61a1:	48 89 50 20          	mov    %rdx,0x20(%rax)
    61a5:	b8 77 ca eb 85       	mov    $0x85ebca77,%eax
    61aa:	89 c2                	mov    %eax,%edx
    61ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61b0:	48 89 50 28          	mov    %rdx,0x28(%rax)
    61b4:	48 ba c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rdx
    61bb:	eb d4 27 
    61be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61c2:	48 89 50 30          	mov    %rdx,0x30(%rax)
    61c6:	b8 b1 79 37 9e       	mov    $0x9e3779b1,%eax
    61cb:	89 c2                	mov    %eax,%edx
    61cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61d1:	48 89 50 38          	mov    %rdx,0x38(%rax)
    61d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    61dd:	48 89 90 28 02 00 00 	mov    %rdx,0x228(%rax)
    61e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    61ec:	48 89 90 38 02 00 00 	mov    %rdx,0x238(%rax)
    61f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    61f7:	48 8d 50 c0          	lea    -0x40(%rax),%rdx
    61fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61ff:	48 89 90 20 02 00 00 	mov    %rdx,0x220(%rax)
    6206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    620a:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
    6211:	48 c1 e8 03          	shr    $0x3,%rax
    6215:	48 89 c2             	mov    %rax,%rdx
    6218:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    621c:	48 89 90 18 02 00 00 	mov    %rdx,0x218(%rax)
    6223:	90                   	nop
    6224:	c9                   	leaveq 
    6225:	c3                   	retq   

0000000000006226 <XXH3_64bits_reset>:
    6226:	55                   	push   %rbp
    6227:	48 89 e5             	mov    %rsp,%rbp
    622a:	48 83 ec 10          	sub    $0x10,%rsp
    622e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6232:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6237:	75 07                	jne    6240 <XXH3_64bits_reset+0x1a>
    6239:	b8 01 00 00 00       	mov    $0x1,%eax
    623e:	eb 22                	jmp    6262 <XXH3_64bits_reset+0x3c>
    6240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6244:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    6249:	48 8d 15 30 23 00 00 	lea    0x2330(%rip),%rdx        # 8580 <XXH3_kSecret>
    6250:	be 00 00 00 00       	mov    $0x0,%esi
    6255:	48 89 c7             	mov    %rax,%rdi
    6258:	e8 a5 fe ff ff       	callq  6102 <XXH3_reset_internal>
    625d:	b8 00 00 00 00       	mov    $0x0,%eax
    6262:	c9                   	leaveq 
    6263:	c3                   	retq   

0000000000006264 <XXH3_64bits_reset_withSecret>:
    6264:	55                   	push   %rbp
    6265:	48 89 e5             	mov    %rsp,%rbp
    6268:	48 83 ec 20          	sub    $0x20,%rsp
    626c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6270:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6274:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    6278:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    627d:	75 07                	jne    6286 <XXH3_64bits_reset_withSecret+0x22>
    627f:	b8 01 00 00 00       	mov    $0x1,%eax
    6284:	eb 3d                	jmp    62c3 <XXH3_64bits_reset_withSecret+0x5f>
    6286:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    628a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    628e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6292:	be 00 00 00 00       	mov    $0x0,%esi
    6297:	48 89 c7             	mov    %rax,%rdi
    629a:	e8 63 fe ff ff       	callq  6102 <XXH3_reset_internal>
    629f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    62a4:	75 07                	jne    62ad <XXH3_64bits_reset_withSecret+0x49>
    62a6:	b8 01 00 00 00       	mov    $0x1,%eax
    62ab:	eb 16                	jmp    62c3 <XXH3_64bits_reset_withSecret+0x5f>
    62ad:	48 81 7d e8 87 00 00 	cmpq   $0x87,-0x18(%rbp)
    62b4:	00 
    62b5:	77 07                	ja     62be <XXH3_64bits_reset_withSecret+0x5a>
    62b7:	b8 01 00 00 00       	mov    $0x1,%eax
    62bc:	eb 05                	jmp    62c3 <XXH3_64bits_reset_withSecret+0x5f>
    62be:	b8 00 00 00 00       	mov    $0x0,%eax
    62c3:	c9                   	leaveq 
    62c4:	c3                   	retq   

00000000000062c5 <XXH3_64bits_reset_withSeed>:
    62c5:	55                   	push   %rbp
    62c6:	48 89 e5             	mov    %rsp,%rbp
    62c9:	48 83 ec 10          	sub    $0x10,%rsp
    62cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62d5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    62da:	75 07                	jne    62e3 <XXH3_64bits_reset_withSeed+0x1e>
    62dc:	b8 01 00 00 00       	mov    $0x1,%eax
    62e1:	eb 5c                	jmp    633f <XXH3_64bits_reset_withSeed+0x7a>
    62e3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    62e8:	75 0e                	jne    62f8 <XXH3_64bits_reset_withSeed+0x33>
    62ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ee:	48 89 c7             	mov    %rax,%rdi
    62f1:	e8 30 ff ff ff       	callq  6226 <XXH3_64bits_reset>
    62f6:	eb 47                	jmp    633f <XXH3_64bits_reset_withSeed+0x7a>
    62f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62fc:	48 8b 80 28 02 00 00 	mov    0x228(%rax),%rax
    6303:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    6307:	74 17                	je     6320 <XXH3_64bits_reset_withSeed+0x5b>
    6309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    630d:	48 8d 50 40          	lea    0x40(%rax),%rdx
    6311:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6315:	48 89 c6             	mov    %rax,%rsi
    6318:	48 89 d7             	mov    %rdx,%rdi
    631b:	e8 8c f2 ff ff       	callq  55ac <XXH3_initCustomSecret_sse2>
    6320:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    6324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6328:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    632d:	ba 00 00 00 00       	mov    $0x0,%edx
    6332:	48 89 c7             	mov    %rax,%rdi
    6335:	e8 c8 fd ff ff       	callq  6102 <XXH3_reset_internal>
    633a:	b8 00 00 00 00       	mov    $0x0,%eax
    633f:	c9                   	leaveq 
    6340:	c3                   	retq   

0000000000006341 <XXH3_consumeStripes>:
    6341:	55                   	push   %rbp
    6342:	48 89 e5             	mov    %rsp,%rbp
    6345:	48 83 ec 40          	sub    $0x40,%rsp
    6349:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    634d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6351:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6355:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    6359:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    635d:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    6361:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6365:	48 8b 10             	mov    (%rax),%rdx
    6368:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    636c:	48 29 d0             	sub    %rdx,%rax
    636f:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    6373:	0f 82 ad 00 00 00    	jb     6426 <XXH3_consumeStripes+0xe5>
    6379:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    637d:	48 8b 10             	mov    (%rax),%rdx
    6380:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6384:	48 29 d0             	sub    %rdx,%rax
    6387:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    638b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    638f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6393:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6397:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    639b:	48 8b 00             	mov    (%rax),%rax
    639e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    63a5:	00 
    63a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    63aa:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    63ae:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
    63b2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    63b6:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    63ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63be:	49 89 c8             	mov    %rcx,%r8
    63c1:	48 89 d1             	mov    %rdx,%rcx
    63c4:	48 89 fa             	mov    %rdi,%rdx
    63c7:	48 89 c7             	mov    %rax,%rdi
    63ca:	e8 5b f5 ff ff       	callq  592a <XXH3_accumulate>
    63cf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    63d3:	48 8b 45 10          	mov    0x10(%rbp),%rax
    63d7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    63db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63df:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    63e3:	48 89 ce             	mov    %rcx,%rsi
    63e6:	48 89 c7             	mov    %rax,%rdi
    63e9:	ff d2                	callq  *%rdx
    63eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ef:	48 c1 e0 06          	shl    $0x6,%rax
    63f3:	48 89 c2             	mov    %rax,%rdx
    63f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    63fa:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    63fe:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    6402:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6406:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    640a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    640e:	49 89 f8             	mov    %rdi,%r8
    6411:	48 89 c7             	mov    %rax,%rdi
    6414:	e8 11 f5 ff ff       	callq  592a <XXH3_accumulate>
    6419:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    641d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6421:	48 89 10             	mov    %rdx,(%rax)
    6424:	eb 4d                	jmp    6473 <XXH3_consumeStripes+0x132>
    6426:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    642a:	48 8b 00             	mov    (%rax),%rax
    642d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6434:	00 
    6435:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6439:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    643d:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
    6441:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6445:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6449:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    644d:	49 89 c8             	mov    %rcx,%r8
    6450:	48 89 d1             	mov    %rdx,%rcx
    6453:	48 89 fa             	mov    %rdi,%rdx
    6456:	48 89 c7             	mov    %rax,%rdi
    6459:	e8 cc f4 ff ff       	callq  592a <XXH3_accumulate>
    645e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6462:	48 8b 10             	mov    (%rax),%rdx
    6465:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6469:	48 01 c2             	add    %rax,%rdx
    646c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6470:	48 89 10             	mov    %rdx,(%rax)
    6473:	90                   	nop
    6474:	c9                   	leaveq 
    6475:	c3                   	retq   

0000000000006476 <XXH3_update>:
    6476:	55                   	push   %rbp
    6477:	48 89 e5             	mov    %rsp,%rbp
    647a:	48 83 ec 50          	sub    $0x50,%rsp
    647e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6482:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6486:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    648a:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    648e:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    6492:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    6497:	75 0a                	jne    64a3 <XXH3_update+0x2d>
    6499:	b8 01 00 00 00       	mov    $0x1,%eax
    649e:	e9 6a 02 00 00       	jmpq   670d <XXH3_update+0x297>
    64a3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    64a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    64ab:	48 01 d0             	add    %rdx,%rax
    64ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    64b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64b6:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
    64bd:	48 85 c0             	test   %rax,%rax
    64c0:	75 0a                	jne    64cc <XXH3_update+0x56>
    64c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64c6:	48 83 c0 40          	add    $0x40,%rax
    64ca:	eb 0b                	jmp    64d7 <XXH3_update+0x61>
    64cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64d0:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
    64d7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    64db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64df:	48 8b 90 10 02 00 00 	mov    0x210(%rax),%rdx
    64e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    64ea:	48 01 c2             	add    %rax,%rdx
    64ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64f1:	48 89 90 10 02 00 00 	mov    %rdx,0x210(%rax)
    64f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64fc:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    6502:	89 c2                	mov    %eax,%edx
    6504:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6508:	48 01 d0             	add    %rdx,%rax
    650b:	48 3d 00 01 00 00    	cmp    $0x100,%rax
    6511:	77 52                	ja     6565 <XXH3_update+0xef>
    6513:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6517:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    651e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6522:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    6528:	89 c0                	mov    %eax,%eax
    652a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    652e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6532:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6536:	48 89 c6             	mov    %rax,%rsi
    6539:	48 89 cf             	mov    %rcx,%rdi
    653c:	e8 e6 be ff ff       	callq  2427 <XXH_memcpy>
    6541:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6545:	8b 90 00 02 00 00    	mov    0x200(%rax),%edx
    654b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    654f:	01 c2                	add    %eax,%edx
    6551:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6555:	89 90 00 02 00 00    	mov    %edx,0x200(%rax)
    655b:	b8 00 00 00 00       	mov    $0x0,%eax
    6560:	e9 a8 01 00 00       	jmpq   670d <XXH3_update+0x297>
    6565:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6569:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    656f:	85 c0                	test   %eax,%eax
    6571:	0f 84 af 00 00 00    	je     6626 <XXH3_update+0x1b0>
    6577:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    657b:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    6581:	ba 00 01 00 00       	mov    $0x100,%edx
    6586:	29 c2                	sub    %eax,%edx
    6588:	89 d0                	mov    %edx,%eax
    658a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    658e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6592:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    6599:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    659d:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    65a3:	89 c0                	mov    %eax,%eax
    65a5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    65a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    65b1:	48 89 c6             	mov    %rax,%rsi
    65b4:	48 89 cf             	mov    %rcx,%rdi
    65b7:	e8 6b be ff ff       	callq  2427 <XXH_memcpy>
    65bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65c0:	48 01 45 d0          	add    %rax,-0x30(%rbp)
    65c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65c8:	48 8b b8 20 02 00 00 	mov    0x220(%rax),%rdi
    65cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65d3:	48 8d 88 00 01 00 00 	lea    0x100(%rax),%rcx
    65da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65de:	48 8b 90 18 02 00 00 	mov    0x218(%rax),%rdx
    65e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65e9:	48 8d b0 08 02 00 00 	lea    0x208(%rax),%rsi
    65f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65f4:	4c 8b 45 f0          	mov    -0x10(%rbp),%r8
    65f8:	48 83 ec 08          	sub    $0x8,%rsp
    65fc:	ff 75 b8             	pushq  -0x48(%rbp)
    65ff:	ff 75 c0             	pushq  -0x40(%rbp)
    6602:	57                   	push   %rdi
    6603:	4d 89 c1             	mov    %r8,%r9
    6606:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    660c:	48 89 c7             	mov    %rax,%rdi
    660f:	e8 2d fd ff ff       	callq  6341 <XXH3_consumeStripes>
    6614:	48 83 c4 20          	add    $0x20,%rsp
    6618:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    661c:	c7 80 00 02 00 00 00 	movl   $0x0,0x200(%rax)
    6623:	00 00 00 
    6626:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    662a:	48 05 00 01 00 00    	add    $0x100,%rax
    6630:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    6634:	0f 86 95 00 00 00    	jbe    66cf <XXH3_update+0x259>
    663a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    663e:	48 2d 00 01 00 00    	sub    $0x100,%rax
    6644:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6648:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    664c:	48 8b b8 20 02 00 00 	mov    0x220(%rax),%rdi
    6653:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6657:	48 8b 90 18 02 00 00 	mov    0x218(%rax),%rdx
    665e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6662:	48 8d b0 08 02 00 00 	lea    0x208(%rax),%rsi
    6669:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    666d:	4c 8b 45 f0          	mov    -0x10(%rbp),%r8
    6671:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6675:	48 83 ec 08          	sub    $0x8,%rsp
    6679:	ff 75 b8             	pushq  -0x48(%rbp)
    667c:	ff 75 c0             	pushq  -0x40(%rbp)
    667f:	57                   	push   %rdi
    6680:	4d 89 c1             	mov    %r8,%r9
    6683:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    6689:	48 89 c7             	mov    %rax,%rdi
    668c:	e8 b0 fc ff ff       	callq  6341 <XXH3_consumeStripes>
    6691:	48 83 c4 20          	add    $0x20,%rsp
    6695:	48 81 45 d0 00 01 00 	addq   $0x100,-0x30(%rbp)
    669c:	00 
    669d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    66a1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    66a5:	72 a1                	jb     6648 <XXH3_update+0x1d2>
    66a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    66ab:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    66af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66b3:	48 05 00 01 00 00    	add    $0x100,%rax
    66b9:	48 05 c0 00 00 00    	add    $0xc0,%rax
    66bf:	ba 40 00 00 00       	mov    $0x40,%edx
    66c4:	48 89 ce             	mov    %rcx,%rsi
    66c7:	48 89 c7             	mov    %rax,%rdi
    66ca:	e8 c1 aa ff ff       	callq  1190 <memcpy@plt>
    66cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66d3:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    66d7:	48 89 c2             	mov    %rax,%rdx
    66da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66de:	48 8d 88 00 01 00 00 	lea    0x100(%rax),%rcx
    66e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    66e9:	48 89 c6             	mov    %rax,%rsi
    66ec:	48 89 cf             	mov    %rcx,%rdi
    66ef:	e8 33 bd ff ff       	callq  2427 <XXH_memcpy>
    66f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66f8:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    66fc:	89 c2                	mov    %eax,%edx
    66fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6702:	89 90 00 02 00 00    	mov    %edx,0x200(%rax)
    6708:	b8 00 00 00 00       	mov    $0x0,%eax
    670d:	c9                   	leaveq 
    670e:	c3                   	retq   

000000000000670f <XXH3_64bits_update>:
    670f:	55                   	push   %rbp
    6710:	48 89 e5             	mov    %rsp,%rbp
    6713:	48 83 ec 20          	sub    $0x20,%rsp
    6717:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    671b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    671f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    6723:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6727:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    672b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    672f:	4c 8d 05 f7 eb ff ff 	lea    -0x1409(%rip),%r8        # 532d <XXH3_scrambleAcc_sse2>
    6736:	48 8d 0d 38 ea ff ff 	lea    -0x15c8(%rip),%rcx        # 5175 <XXH3_accumulate_512_sse2>
    673d:	48 89 c7             	mov    %rax,%rdi
    6740:	e8 31 fd ff ff       	callq  6476 <XXH3_update>
    6745:	c9                   	leaveq 
    6746:	c3                   	retq   

0000000000006747 <XXH3_digest_long>:
    6747:	55                   	push   %rbp
    6748:	48 89 e5             	mov    %rsp,%rbp
    674b:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    674f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    6753:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    6757:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    675b:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    675f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6763:	ba 40 00 00 00       	mov    $0x40,%edx
    6768:	48 89 ce             	mov    %rcx,%rsi
    676b:	48 89 c7             	mov    %rax,%rdi
    676e:	e8 1d aa ff ff       	callq  1190 <memcpy@plt>
    6773:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6777:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    677d:	83 f8 3f             	cmp    $0x3f,%eax
    6780:	0f 86 c4 00 00 00    	jbe    684a <XXH3_digest_long+0x103>
    6786:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    678a:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    6790:	83 e8 01             	sub    $0x1,%eax
    6793:	c1 e8 06             	shr    $0x6,%eax
    6796:	89 c0                	mov    %eax,%eax
    6798:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    679c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    67a0:	48 8b 80 08 02 00 00 	mov    0x208(%rax),%rax
    67a7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    67ab:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    67af:	48 8b b8 20 02 00 00 	mov    0x220(%rax),%rdi
    67b6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    67ba:	48 8d 88 00 01 00 00 	lea    0x100(%rax),%rcx
    67c1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    67c5:	48 8b 90 18 02 00 00 	mov    0x218(%rax),%rdx
    67cc:	4c 8b 4d 88          	mov    -0x78(%rbp),%r9
    67d0:	4c 8b 55 f0          	mov    -0x10(%rbp),%r10
    67d4:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
    67d8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    67dc:	48 83 ec 08          	sub    $0x8,%rsp
    67e0:	4c 8d 05 46 eb ff ff 	lea    -0x14ba(%rip),%r8        # 532d <XXH3_scrambleAcc_sse2>
    67e7:	41 50                	push   %r8
    67e9:	4c 8d 05 85 e9 ff ff 	lea    -0x167b(%rip),%r8        # 5175 <XXH3_accumulate_512_sse2>
    67f0:	41 50                	push   %r8
    67f2:	57                   	push   %rdi
    67f3:	4d 89 d0             	mov    %r10,%r8
    67f6:	48 89 c7             	mov    %rax,%rdi
    67f9:	e8 43 fb ff ff       	callq  6341 <XXH3_consumeStripes>
    67fe:	48 83 c4 20          	add    $0x20,%rsp
    6802:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6806:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
    680d:	48 8d 50 f9          	lea    -0x7(%rax),%rdx
    6811:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6815:	48 01 c2             	add    %rax,%rdx
    6818:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    681c:	48 8d 88 00 01 00 00 	lea    0x100(%rax),%rcx
    6823:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6827:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    682d:	89 c0                	mov    %eax,%eax
    682f:	48 83 e8 40          	sub    $0x40,%rax
    6833:	48 01 c1             	add    %rax,%rcx
    6836:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    683a:	48 89 ce             	mov    %rcx,%rsi
    683d:	48 89 c7             	mov    %rax,%rdi
    6840:	e8 30 e9 ff ff       	callq  5175 <XXH3_accumulate_512_sse2>
    6845:	e9 98 00 00 00       	jmpq   68e2 <XXH3_digest_long+0x19b>
    684a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    684e:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    6854:	ba 40 00 00 00       	mov    $0x40,%edx
    6859:	29 c2                	sub    %eax,%edx
    685b:	89 d0                	mov    %edx,%eax
    685d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6861:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6865:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    686c:	b8 00 01 00 00       	mov    $0x100,%eax
    6871:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6875:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6879:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    687d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6881:	48 89 ce             	mov    %rcx,%rsi
    6884:	48 89 c7             	mov    %rax,%rdi
    6887:	e8 04 a9 ff ff       	callq  1190 <memcpy@plt>
    688c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6890:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    6896:	89 c2                	mov    %eax,%edx
    6898:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    689c:	48 8d 88 00 01 00 00 	lea    0x100(%rax),%rcx
    68a3:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    68a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ab:	48 01 f0             	add    %rsi,%rax
    68ae:	48 89 ce             	mov    %rcx,%rsi
    68b1:	48 89 c7             	mov    %rax,%rdi
    68b4:	e8 d7 a8 ff ff       	callq  1190 <memcpy@plt>
    68b9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    68bd:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
    68c4:	48 8d 50 f9          	lea    -0x7(%rax),%rdx
    68c8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    68cc:	48 01 c2             	add    %rax,%rdx
    68cf:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    68d3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    68d7:	48 89 ce             	mov    %rcx,%rsi
    68da:	48 89 c7             	mov    %rax,%rdi
    68dd:	e8 93 e8 ff ff       	callq  5175 <XXH3_accumulate_512_sse2>
    68e2:	90                   	nop
    68e3:	c9                   	leaveq 
    68e4:	c3                   	retq   

00000000000068e5 <XXH3_64bits_digest>:
    68e5:	55                   	push   %rbp
    68e6:	48 89 e5             	mov    %rsp,%rbp
    68e9:	48 83 ec 60          	sub    $0x60,%rsp
    68ed:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    68f1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    68f5:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
    68fc:	48 85 c0             	test   %rax,%rax
    68ff:	75 0a                	jne    690b <XXH3_64bits_digest+0x26>
    6901:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6905:	48 83 c0 40          	add    $0x40,%rax
    6909:	eb 0b                	jmp    6916 <XXH3_64bits_digest+0x31>
    690b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    690f:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
    6916:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    691a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    691e:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    6925:	48 3d f0 00 00 00    	cmp    $0xf0,%rax
    692b:	76 49                	jbe    6976 <XXH3_64bits_digest+0x91>
    692d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6931:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    6935:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6939:	48 89 ce             	mov    %rcx,%rsi
    693c:	48 89 c7             	mov    %rax,%rdi
    693f:	e8 03 fe ff ff       	callq  6747 <XXH3_digest_long>
    6944:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6948:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    694f:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    6956:	79 37 9e 
    6959:	48 0f af d0          	imul   %rax,%rdx
    695d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6961:	48 8d 48 0b          	lea    0xb(%rax),%rcx
    6965:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6969:	48 89 ce             	mov    %rcx,%rsi
    696c:	48 89 c7             	mov    %rax,%rdi
    696f:	e8 d6 f1 ff ff       	callq  5b4a <XXH3_mergeAccs>
    6974:	eb 6f                	jmp    69e5 <XXH3_64bits_digest+0x100>
    6976:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    697a:	48 8b 80 28 02 00 00 	mov    0x228(%rax),%rax
    6981:	48 85 c0             	test   %rax,%rax
    6984:	74 2e                	je     69b4 <XXH3_64bits_digest+0xcf>
    6986:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    698a:	48 8b 90 28 02 00 00 	mov    0x228(%rax),%rdx
    6991:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6995:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    699c:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    69a0:	48 81 c1 00 01 00 00 	add    $0x100,%rcx
    69a7:	48 89 c6             	mov    %rax,%rsi
    69aa:	48 89 cf             	mov    %rcx,%rdi
    69ad:	e8 ce f5 ff ff       	callq  5f80 <XXH3_64bits_withSeed>
    69b2:	eb 31                	jmp    69e5 <XXH3_64bits_digest+0x100>
    69b4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    69b8:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
    69bf:	48 8d 48 40          	lea    0x40(%rax),%rcx
    69c3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    69c7:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    69ce:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    69d2:	48 8d ba 00 01 00 00 	lea    0x100(%rdx),%rdi
    69d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    69dd:	48 89 c6             	mov    %rax,%rsi
    69e0:	e8 57 f5 ff ff       	callq  5f3c <XXH3_64bits_withSecret>
    69e5:	c9                   	leaveq 
    69e6:	c3                   	retq   

00000000000069e7 <XXH3_generateSecret>:
    69e7:	55                   	push   %rbp
    69e8:	48 89 e5             	mov    %rsp,%rbp
    69eb:	53                   	push   %rbx
    69ec:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    69f3:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    69fa:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    6a01:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    6a08:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
    6a0f:	00 
    6a10:	0f 85 2b 01 00 00    	jne    6b41 <XXH3_generateSecret+0x15a>
    6a16:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6a1d:	48 8b 0d 5c 1b 00 00 	mov    0x1b5c(%rip),%rcx        # 8580 <XXH3_kSecret>
    6a24:	48 8b 1d 5d 1b 00 00 	mov    0x1b5d(%rip),%rbx        # 8588 <XXH3_kSecret+0x8>
    6a2b:	48 89 08             	mov    %rcx,(%rax)
    6a2e:	48 89 58 08          	mov    %rbx,0x8(%rax)
    6a32:	48 8b 0d 57 1b 00 00 	mov    0x1b57(%rip),%rcx        # 8590 <XXH3_kSecret+0x10>
    6a39:	48 8b 1d 58 1b 00 00 	mov    0x1b58(%rip),%rbx        # 8598 <XXH3_kSecret+0x18>
    6a40:	48 89 48 10          	mov    %rcx,0x10(%rax)
    6a44:	48 89 58 18          	mov    %rbx,0x18(%rax)
    6a48:	48 8b 0d 51 1b 00 00 	mov    0x1b51(%rip),%rcx        # 85a0 <XXH3_kSecret+0x20>
    6a4f:	48 8b 1d 52 1b 00 00 	mov    0x1b52(%rip),%rbx        # 85a8 <XXH3_kSecret+0x28>
    6a56:	48 89 48 20          	mov    %rcx,0x20(%rax)
    6a5a:	48 89 58 28          	mov    %rbx,0x28(%rax)
    6a5e:	48 8b 0d 4b 1b 00 00 	mov    0x1b4b(%rip),%rcx        # 85b0 <XXH3_kSecret+0x30>
    6a65:	48 8b 1d 4c 1b 00 00 	mov    0x1b4c(%rip),%rbx        # 85b8 <XXH3_kSecret+0x38>
    6a6c:	48 89 48 30          	mov    %rcx,0x30(%rax)
    6a70:	48 89 58 38          	mov    %rbx,0x38(%rax)
    6a74:	48 8b 0d 45 1b 00 00 	mov    0x1b45(%rip),%rcx        # 85c0 <XXH3_kSecret+0x40>
    6a7b:	48 8b 1d 46 1b 00 00 	mov    0x1b46(%rip),%rbx        # 85c8 <XXH3_kSecret+0x48>
    6a82:	48 89 48 40          	mov    %rcx,0x40(%rax)
    6a86:	48 89 58 48          	mov    %rbx,0x48(%rax)
    6a8a:	48 8b 0d 3f 1b 00 00 	mov    0x1b3f(%rip),%rcx        # 85d0 <XXH3_kSecret+0x50>
    6a91:	48 8b 1d 40 1b 00 00 	mov    0x1b40(%rip),%rbx        # 85d8 <XXH3_kSecret+0x58>
    6a98:	48 89 48 50          	mov    %rcx,0x50(%rax)
    6a9c:	48 89 58 58          	mov    %rbx,0x58(%rax)
    6aa0:	48 8b 0d 39 1b 00 00 	mov    0x1b39(%rip),%rcx        # 85e0 <XXH3_kSecret+0x60>
    6aa7:	48 8b 1d 3a 1b 00 00 	mov    0x1b3a(%rip),%rbx        # 85e8 <XXH3_kSecret+0x68>
    6aae:	48 89 48 60          	mov    %rcx,0x60(%rax)
    6ab2:	48 89 58 68          	mov    %rbx,0x68(%rax)
    6ab6:	48 8b 0d 33 1b 00 00 	mov    0x1b33(%rip),%rcx        # 85f0 <XXH3_kSecret+0x70>
    6abd:	48 8b 1d 34 1b 00 00 	mov    0x1b34(%rip),%rbx        # 85f8 <XXH3_kSecret+0x78>
    6ac4:	48 89 48 70          	mov    %rcx,0x70(%rax)
    6ac8:	48 89 58 78          	mov    %rbx,0x78(%rax)
    6acc:	48 8b 0d 2d 1b 00 00 	mov    0x1b2d(%rip),%rcx        # 8600 <XXH3_kSecret+0x80>
    6ad3:	48 8b 1d 2e 1b 00 00 	mov    0x1b2e(%rip),%rbx        # 8608 <XXH3_kSecret+0x88>
    6ada:	48 89 88 80 00 00 00 	mov    %rcx,0x80(%rax)
    6ae1:	48 89 98 88 00 00 00 	mov    %rbx,0x88(%rax)
    6ae8:	48 8b 0d 21 1b 00 00 	mov    0x1b21(%rip),%rcx        # 8610 <XXH3_kSecret+0x90>
    6aef:	48 8b 1d 22 1b 00 00 	mov    0x1b22(%rip),%rbx        # 8618 <XXH3_kSecret+0x98>
    6af6:	48 89 88 90 00 00 00 	mov    %rcx,0x90(%rax)
    6afd:	48 89 98 98 00 00 00 	mov    %rbx,0x98(%rax)
    6b04:	48 8b 0d 15 1b 00 00 	mov    0x1b15(%rip),%rcx        # 8620 <XXH3_kSecret+0xa0>
    6b0b:	48 8b 1d 16 1b 00 00 	mov    0x1b16(%rip),%rbx        # 8628 <XXH3_kSecret+0xa8>
    6b12:	48 89 88 a0 00 00 00 	mov    %rcx,0xa0(%rax)
    6b19:	48 89 98 a8 00 00 00 	mov    %rbx,0xa8(%rax)
    6b20:	48 8b 0d 09 1b 00 00 	mov    0x1b09(%rip),%rcx        # 8630 <XXH3_kSecret+0xb0>
    6b27:	48 8b 1d 0a 1b 00 00 	mov    0x1b0a(%rip),%rbx        # 8638 <XXH3_kSecret+0xb8>
    6b2e:	48 89 88 b0 00 00 00 	mov    %rcx,0xb0(%rax)
    6b35:	48 89 98 b8 00 00 00 	mov    %rbx,0xb8(%rax)
    6b3c:	e9 80 01 00 00       	jmpq   6cc1 <XXH3_generateSecret+0x2da>
    6b41:	48 c7 45 d8 10 00 00 	movq   $0x10,-0x28(%rbp)
    6b48:	00 
    6b49:	b8 c0 00 00 00       	mov    $0xc0,%eax
    6b4e:	ba 00 00 00 00       	mov    $0x0,%edx
    6b53:	48 f7 75 d8          	divq   -0x28(%rbp)
    6b57:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6b5b:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
    6b62:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6b69:	ba 00 00 00 00       	mov    $0x0,%edx
    6b6e:	48 89 ce             	mov    %rcx,%rsi
    6b71:	48 89 c7             	mov    %rax,%rdi
    6b74:	e8 74 0f 00 00       	callq  7aed <XXH128>
    6b79:	48 89 c1             	mov    %rax,%rcx
    6b7c:	48 89 d3             	mov    %rdx,%rbx
    6b7f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6b83:	48 89 ce             	mov    %rcx,%rsi
    6b86:	48 89 c7             	mov    %rax,%rdi
    6b89:	e8 0c 13 00 00       	callq  7e9a <XXH128_canonicalFromHash>
    6b8e:	b8 60 00 00 00       	mov    $0x60,%eax
    6b93:	48 83 bd 28 ff ff ff 	cmpq   $0x60,-0xd8(%rbp)
    6b9a:	60 
    6b9b:	48 0f 46 85 28 ff ff 	cmovbe -0xd8(%rbp),%rax
    6ba2:	ff 
    6ba3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6ba7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6bab:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6baf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6bb3:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
    6bba:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    6bc1:	48 89 ce             	mov    %rcx,%rsi
    6bc4:	48 89 c7             	mov    %rax,%rdi
    6bc7:	e8 c4 a5 ff ff       	callq  1190 <memcpy@plt>
    6bcc:	eb 43                	jmp    6c11 <XXH3_generateSecret+0x22a>
    6bce:	b8 60 00 00 00       	mov    $0x60,%eax
    6bd3:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    6bd7:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    6bdb:	48 0f 46 45 e0       	cmovbe -0x20(%rbp),%rax
    6be0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6be4:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    6beb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6bef:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6bf3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6bf7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    6bfe:	48 89 c6             	mov    %rax,%rsi
    6c01:	48 89 cf             	mov    %rcx,%rdi
    6c04:	e8 87 a5 ff ff       	callq  1190 <memcpy@plt>
    6c09:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6c0d:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    6c11:	48 83 7d e0 5f       	cmpq   $0x5f,-0x20(%rbp)
    6c16:	76 b6                	jbe    6bce <XXH3_generateSecret+0x1e7>
    6c18:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6c1c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    6c20:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
    6c27:	48 89 01             	mov    %rax,(%rcx)
    6c2a:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    6c2e:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    6c35:	00 
    6c36:	eb 7b                	jmp    6cb3 <XXH3_generateSecret+0x2cc>
    6c38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c3c:	48 0f af 45 d8       	imul   -0x28(%rbp),%rax
    6c41:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6c45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c49:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6c50:	00 
    6c51:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    6c58:	48 01 d0             	add    %rdx,%rax
    6c5b:	48 89 c7             	mov    %rax,%rdi
    6c5e:	e8 4b c3 ff ff       	callq  2fae <XXH_readLE64>
    6c63:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c67:	48 01 c2             	add    %rax,%rdx
    6c6a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6c6e:	be 10 00 00 00       	mov    $0x10,%esi
    6c73:	48 89 c7             	mov    %rax,%rdi
    6c76:	e8 72 0e 00 00       	callq  7aed <XXH128>
    6c7b:	48 89 c1             	mov    %rax,%rcx
    6c7e:	48 89 d3             	mov    %rdx,%rbx
    6c81:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6c85:	48 89 ce             	mov    %rcx,%rsi
    6c88:	48 89 c7             	mov    %rax,%rdi
    6c8b:	e8 0a 12 00 00       	callq  7e9a <XXH128_canonicalFromHash>
    6c90:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6c97:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6c9b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6c9f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6ca3:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6ca7:	48 89 01             	mov    %rax,(%rcx)
    6caa:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    6cae:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    6cb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cb7:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    6cbb:	0f 82 77 ff ff ff    	jb     6c38 <XXH3_generateSecret+0x251>
    6cc1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6cc5:	c9                   	leaveq 
    6cc6:	c3                   	retq   

0000000000006cc7 <XXH3_len_1to3_128b>:
    6cc7:	55                   	push   %rbp
    6cc8:	48 89 e5             	mov    %rsp,%rbp
    6ccb:	53                   	push   %rbx
    6ccc:	48 83 ec 60          	sub    $0x60,%rsp
    6cd0:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    6cd4:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    6cd8:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    6cdc:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
    6ce0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6ce4:	0f b6 00             	movzbl (%rax),%eax
    6ce7:	88 45 f7             	mov    %al,-0x9(%rbp)
    6cea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6cee:	48 d1 e8             	shr    %rax
    6cf1:	48 89 c2             	mov    %rax,%rdx
    6cf4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6cf8:	48 01 d0             	add    %rdx,%rax
    6cfb:	0f b6 00             	movzbl (%rax),%eax
    6cfe:	88 45 f6             	mov    %al,-0xa(%rbp)
    6d01:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6d05:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    6d09:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6d0d:	48 01 d0             	add    %rdx,%rax
    6d10:	0f b6 00             	movzbl (%rax),%eax
    6d13:	88 45 f5             	mov    %al,-0xb(%rbp)
    6d16:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
    6d1a:	c1 e0 10             	shl    $0x10,%eax
    6d1d:	89 c2                	mov    %eax,%edx
    6d1f:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
    6d23:	c1 e0 18             	shl    $0x18,%eax
    6d26:	09 c2                	or     %eax,%edx
    6d28:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
    6d2c:	09 c2                	or     %eax,%edx
    6d2e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6d32:	c1 e0 08             	shl    $0x8,%eax
    6d35:	09 d0                	or     %edx,%eax
    6d37:	89 45 f0             	mov    %eax,-0x10(%rbp)
    6d3a:	8b 45 f0             	mov    -0x10(%rbp),%eax
    6d3d:	0f c8                	bswap  %eax
    6d3f:	c1 c0 0d             	rol    $0xd,%eax
    6d42:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6d45:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6d49:	48 89 c7             	mov    %rax,%rdi
    6d4c:	e8 19 b7 ff ff       	callq  246a <XXH_readLE32>
    6d51:	89 c3                	mov    %eax,%ebx
    6d53:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6d57:	48 83 c0 04          	add    $0x4,%rax
    6d5b:	48 89 c7             	mov    %rax,%rdi
    6d5e:	e8 07 b7 ff ff       	callq  246a <XXH_readLE32>
    6d63:	31 d8                	xor    %ebx,%eax
    6d65:	89 c2                	mov    %eax,%edx
    6d67:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6d6b:	48 01 d0             	add    %rdx,%rax
    6d6e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6d72:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6d76:	48 83 c0 08          	add    $0x8,%rax
    6d7a:	48 89 c7             	mov    %rax,%rdi
    6d7d:	e8 e8 b6 ff ff       	callq  246a <XXH_readLE32>
    6d82:	89 c3                	mov    %eax,%ebx
    6d84:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6d88:	48 83 c0 0c          	add    $0xc,%rax
    6d8c:	48 89 c7             	mov    %rax,%rdi
    6d8f:	e8 d6 b6 ff ff       	callq  246a <XXH_readLE32>
    6d94:	31 d8                	xor    %ebx,%eax
    6d96:	89 c0                	mov    %eax,%eax
    6d98:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    6d9c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6da0:	8b 45 f0             	mov    -0x10(%rbp),%eax
    6da3:	48 33 45 e0          	xor    -0x20(%rbp),%rax
    6da7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6dab:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6dae:	48 33 45 d8          	xor    -0x28(%rbp),%rax
    6db2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6db6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6dba:	48 89 c7             	mov    %rax,%rdi
    6dbd:	e8 e2 c2 ff ff       	callq  30a4 <XXH64_avalanche>
    6dc2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6dc6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6dca:	48 89 c7             	mov    %rax,%rdi
    6dcd:	e8 d2 c2 ff ff       	callq  30a4 <XXH64_avalanche>
    6dd2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6dd6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6dda:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    6dde:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6de2:	c9                   	leaveq 
    6de3:	c3                   	retq   

0000000000006de4 <XXH3_len_4to8_128b>:
    6de4:	55                   	push   %rbp
    6de5:	48 89 e5             	mov    %rsp,%rbp
    6de8:	53                   	push   %rbx
    6de9:	48 83 ec 58          	sub    $0x58,%rsp
    6ded:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    6df1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    6df5:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    6df9:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    6dfd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6e01:	0f c8                	bswap  %eax
    6e03:	89 c0                	mov    %eax,%eax
    6e05:	48 c1 e0 20          	shl    $0x20,%rax
    6e09:	48 31 45 a0          	xor    %rax,-0x60(%rbp)
    6e0d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6e11:	48 89 c7             	mov    %rax,%rdi
    6e14:	e8 51 b6 ff ff       	callq  246a <XXH_readLE32>
    6e19:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6e1c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6e20:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
    6e24:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6e28:	48 01 d0             	add    %rdx,%rax
    6e2b:	48 89 c7             	mov    %rax,%rdi
    6e2e:	e8 37 b6 ff ff       	callq  246a <XXH_readLE32>
    6e33:	89 45 e8             	mov    %eax,-0x18(%rbp)
    6e36:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6e39:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6e3c:	48 c1 e0 20          	shl    $0x20,%rax
    6e40:	48 01 d0             	add    %rdx,%rax
    6e43:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6e47:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6e4b:	48 83 c0 10          	add    $0x10,%rax
    6e4f:	48 89 c7             	mov    %rax,%rdi
    6e52:	e8 57 c1 ff ff       	callq  2fae <XXH_readLE64>
    6e57:	48 89 c3             	mov    %rax,%rbx
    6e5a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6e5e:	48 83 c0 18          	add    $0x18,%rax
    6e62:	48 89 c7             	mov    %rax,%rdi
    6e65:	e8 44 c1 ff ff       	callq  2fae <XXH_readLE64>
    6e6a:	48 31 c3             	xor    %rax,%rbx
    6e6d:	48 89 da             	mov    %rbx,%rdx
    6e70:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6e74:	48 01 d0             	add    %rdx,%rax
    6e77:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6e7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6e7f:	48 33 45 d8          	xor    -0x28(%rbp),%rax
    6e83:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6e87:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6e8b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    6e92:	00 
    6e93:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    6e9a:	79 37 9e 
    6e9d:	48 01 c2             	add    %rax,%rdx
    6ea0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6ea4:	48 89 d6             	mov    %rdx,%rsi
    6ea7:	48 89 c7             	mov    %rax,%rdi
    6eaa:	e8 b2 da ff ff       	callq  4961 <XXH_mult64to128>
    6eaf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6eb3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    6eb7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6ebb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6ebf:	48 01 c0             	add    %rax,%rax
    6ec2:	48 01 d0             	add    %rdx,%rax
    6ec5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6ec9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    6ecd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6ed1:	48 c1 e8 03          	shr    $0x3,%rax
    6ed5:	48 31 d0             	xor    %rdx,%rax
    6ed8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6edc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6ee0:	be 23 00 00 00       	mov    $0x23,%esi
    6ee5:	48 89 c7             	mov    %rax,%rdi
    6ee8:	e8 23 db ff ff       	callq  4a10 <XXH_xorshift64>
    6eed:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6ef1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6ef5:	48 ba 25 df 98 1e 65 	movabs $0x9fb21c651e98df25,%rdx
    6efc:	1c b2 9f 
    6eff:	48 0f af c2          	imul   %rdx,%rax
    6f03:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6f07:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6f0b:	be 1c 00 00 00       	mov    $0x1c,%esi
    6f10:	48 89 c7             	mov    %rax,%rdi
    6f13:	e8 f8 da ff ff       	callq  4a10 <XXH_xorshift64>
    6f18:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6f1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6f20:	48 89 c7             	mov    %rax,%rdi
    6f23:	e8 08 db ff ff       	callq  4a30 <XXH3_avalanche>
    6f28:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6f2c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6f30:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6f34:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6f38:	c9                   	leaveq 
    6f39:	c3                   	retq   

0000000000006f3a <XXH3_len_9to16_128b>:
    6f3a:	55                   	push   %rbp
    6f3b:	48 89 e5             	mov    %rsp,%rbp
    6f3e:	53                   	push   %rbx
    6f3f:	48 83 ec 68          	sub    $0x68,%rsp
    6f43:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    6f47:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    6f4b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    6f4f:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    6f53:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f57:	48 83 c0 20          	add    $0x20,%rax
    6f5b:	48 89 c7             	mov    %rax,%rdi
    6f5e:	e8 4b c0 ff ff       	callq  2fae <XXH_readLE64>
    6f63:	48 89 c3             	mov    %rax,%rbx
    6f66:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f6a:	48 83 c0 28          	add    $0x28,%rax
    6f6e:	48 89 c7             	mov    %rax,%rdi
    6f71:	e8 38 c0 ff ff       	callq  2fae <XXH_readLE64>
    6f76:	48 31 d8             	xor    %rbx,%rax
    6f79:	48 2b 45 90          	sub    -0x70(%rbp),%rax
    6f7d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6f81:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f85:	48 83 c0 30          	add    $0x30,%rax
    6f89:	48 89 c7             	mov    %rax,%rdi
    6f8c:	e8 1d c0 ff ff       	callq  2fae <XXH_readLE64>
    6f91:	48 89 c3             	mov    %rax,%rbx
    6f94:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f98:	48 83 c0 38          	add    $0x38,%rax
    6f9c:	48 89 c7             	mov    %rax,%rdi
    6f9f:	e8 0a c0 ff ff       	callq  2fae <XXH_readLE64>
    6fa4:	48 31 c3             	xor    %rax,%rbx
    6fa7:	48 89 da             	mov    %rbx,%rdx
    6faa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6fae:	48 01 d0             	add    %rdx,%rax
    6fb1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6fb5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6fb9:	48 89 c7             	mov    %rax,%rdi
    6fbc:	e8 ed bf ff ff       	callq  2fae <XXH_readLE64>
    6fc1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6fc5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6fc9:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    6fcd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6fd1:	48 01 d0             	add    %rdx,%rax
    6fd4:	48 89 c7             	mov    %rax,%rdi
    6fd7:	e8 d2 bf ff ff       	callq  2fae <XXH_readLE64>
    6fdc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6fe0:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    6fe7:	79 37 9e 
    6fea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fee:	48 33 45 d0          	xor    -0x30(%rbp),%rax
    6ff2:	48 33 45 e8          	xor    -0x18(%rbp),%rax
    6ff6:	48 89 d6             	mov    %rdx,%rsi
    6ff9:	48 89 c7             	mov    %rax,%rdi
    6ffc:	e8 60 d9 ff ff       	callq  4961 <XXH_mult64to128>
    7001:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7005:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    7009:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    700d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7011:	48 83 e8 01          	sub    $0x1,%rax
    7015:	48 c1 e0 36          	shl    $0x36,%rax
    7019:	48 01 d0             	add    %rdx,%rax
    701c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7020:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7024:	48 31 45 d0          	xor    %rax,-0x30(%rbp)
    7028:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    702c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7030:	89 c1                	mov    %eax,%ecx
    7032:	b8 77 ca eb 85       	mov    $0x85ebca77,%eax
    7037:	83 e8 01             	sub    $0x1,%eax
    703a:	89 c0                	mov    %eax,%eax
    703c:	48 0f af c8          	imul   %rax,%rcx
    7040:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7044:	48 01 c8             	add    %rcx,%rax
    7047:	48 01 d0             	add    %rdx,%rax
    704a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    704e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    7052:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7056:	48 0f c8             	bswap  %rax
    7059:	48 31 d0             	xor    %rdx,%rax
    705c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7060:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    7067:	ae b2 c2 
    706a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    706e:	48 89 d6             	mov    %rdx,%rsi
    7071:	48 89 c7             	mov    %rax,%rdi
    7074:	e8 e8 d8 ff ff       	callq  4961 <XXH_mult64to128>
    7079:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    707d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7081:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    7085:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7089:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    7090:	ae b2 c2 
    7093:	48 0f af c2          	imul   %rdx,%rax
    7097:	48 01 c8             	add    %rcx,%rax
    709a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    709e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    70a2:	48 89 c7             	mov    %rax,%rdi
    70a5:	e8 86 d9 ff ff       	callq  4a30 <XXH3_avalanche>
    70aa:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    70ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70b2:	48 89 c7             	mov    %rax,%rdi
    70b5:	e8 76 d9 ff ff       	callq  4a30 <XXH3_avalanche>
    70ba:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    70be:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    70c2:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    70c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    70ca:	c9                   	leaveq 
    70cb:	c3                   	retq   

00000000000070cc <XXH3_len_0to16_128b>:
    70cc:	55                   	push   %rbp
    70cd:	48 89 e5             	mov    %rsp,%rbp
    70d0:	53                   	push   %rbx
    70d1:	48 83 ec 48          	sub    $0x48,%rsp
    70d5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    70d9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    70dd:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    70e1:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    70e5:	48 83 7d c0 08       	cmpq   $0x8,-0x40(%rbp)
    70ea:	76 1d                	jbe    7109 <XXH3_len_0to16_128b+0x3d>
    70ec:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    70f0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    70f4:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    70f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    70fc:	48 89 c7             	mov    %rax,%rdi
    70ff:	e8 36 fe ff ff       	callq  6f3a <XXH3_len_9to16_128b>
    7104:	e9 cc 00 00 00       	jmpq   71d5 <XXH3_len_0to16_128b+0x109>
    7109:	48 83 7d c0 03       	cmpq   $0x3,-0x40(%rbp)
    710e:	76 1d                	jbe    712d <XXH3_len_0to16_128b+0x61>
    7110:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    7114:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7118:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    711c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7120:	48 89 c7             	mov    %rax,%rdi
    7123:	e8 bc fc ff ff       	callq  6de4 <XXH3_len_4to8_128b>
    7128:	e9 a8 00 00 00       	jmpq   71d5 <XXH3_len_0to16_128b+0x109>
    712d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    7132:	74 1d                	je     7151 <XXH3_len_0to16_128b+0x85>
    7134:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    7138:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    713c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    7140:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7144:	48 89 c7             	mov    %rax,%rdi
    7147:	e8 7b fb ff ff       	callq  6cc7 <XXH3_len_1to3_128b>
    714c:	e9 84 00 00 00       	jmpq   71d5 <XXH3_len_0to16_128b+0x109>
    7151:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7155:	48 83 c0 40          	add    $0x40,%rax
    7159:	48 89 c7             	mov    %rax,%rdi
    715c:	e8 4d be ff ff       	callq  2fae <XXH_readLE64>
    7161:	48 89 c3             	mov    %rax,%rbx
    7164:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7168:	48 83 c0 48          	add    $0x48,%rax
    716c:	48 89 c7             	mov    %rax,%rdi
    716f:	e8 3a be ff ff       	callq  2fae <XXH_readLE64>
    7174:	48 31 d8             	xor    %rbx,%rax
    7177:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    717b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    717f:	48 83 c0 50          	add    $0x50,%rax
    7183:	48 89 c7             	mov    %rax,%rdi
    7186:	e8 23 be ff ff       	callq  2fae <XXH_readLE64>
    718b:	48 89 c3             	mov    %rax,%rbx
    718e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7192:	48 83 c0 58          	add    $0x58,%rax
    7196:	48 89 c7             	mov    %rax,%rdi
    7199:	e8 10 be ff ff       	callq  2fae <XXH_readLE64>
    719e:	48 31 d8             	xor    %rbx,%rax
    71a1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    71a5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    71a9:	48 33 45 e8          	xor    -0x18(%rbp),%rax
    71ad:	48 89 c7             	mov    %rax,%rdi
    71b0:	e8 ef be ff ff       	callq  30a4 <XXH64_avalanche>
    71b5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    71b9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    71bd:	48 33 45 e0          	xor    -0x20(%rbp),%rax
    71c1:	48 89 c7             	mov    %rax,%rdi
    71c4:	e8 db be ff ff       	callq  30a4 <XXH64_avalanche>
    71c9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    71cd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    71d1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    71d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    71d9:	c9                   	leaveq 
    71da:	c3                   	retq   

00000000000071db <XXH128_mix32B>:
    71db:	55                   	push   %rbp
    71dc:	48 89 e5             	mov    %rsp,%rbp
    71df:	53                   	push   %rbx
    71e0:	48 83 ec 38          	sub    $0x38,%rsp
    71e4:	48 89 f0             	mov    %rsi,%rax
    71e7:	49 89 fa             	mov    %rdi,%r10
    71ea:	4c 89 d6             	mov    %r10,%rsi
    71ed:	4c 89 df             	mov    %r11,%rdi
    71f0:	48 89 c7             	mov    %rax,%rdi
    71f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    71f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    71fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    71ff:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    7203:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    7207:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    720b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    720f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    7213:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7217:	48 89 ce             	mov    %rcx,%rsi
    721a:	48 89 c7             	mov    %rax,%rdi
    721d:	e8 0b dc ff ff       	callq  4e2d <XXH3_mix16B>
    7222:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7226:	48 01 d0             	add    %rdx,%rax
    7229:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    722d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7231:	48 89 c7             	mov    %rax,%rdi
    7234:	e8 75 bd ff ff       	callq  2fae <XXH_readLE64>
    7239:	48 89 c3             	mov    %rax,%rbx
    723c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7240:	48 83 c0 08          	add    $0x8,%rax
    7244:	48 89 c7             	mov    %rax,%rdi
    7247:	e8 62 bd ff ff       	callq  2fae <XXH_readLE64>
    724c:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    7250:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7254:	48 31 d0             	xor    %rdx,%rax
    7257:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    725b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    725f:	48 8d 48 10          	lea    0x10(%rax),%rcx
    7263:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    7267:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    726b:	48 89 ce             	mov    %rcx,%rsi
    726e:	48 89 c7             	mov    %rax,%rdi
    7271:	e8 b7 db ff ff       	callq  4e2d <XXH3_mix16B>
    7276:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    727a:	48 01 d0             	add    %rdx,%rax
    727d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7281:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7285:	48 89 c7             	mov    %rax,%rdi
    7288:	e8 21 bd ff ff       	callq  2fae <XXH_readLE64>
    728d:	48 89 c3             	mov    %rax,%rbx
    7290:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7294:	48 83 c0 08          	add    $0x8,%rax
    7298:	48 89 c7             	mov    %rax,%rdi
    729b:	e8 0e bd ff ff       	callq  2fae <XXH_readLE64>
    72a0:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    72a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72a8:	48 31 d0             	xor    %rdx,%rax
    72ab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    72af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    72b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    72bb:	c9                   	leaveq 
    72bc:	c3                   	retq   

00000000000072bd <XXH3_len_17to128_128b>:
    72bd:	55                   	push   %rbp
    72be:	48 89 e5             	mov    %rsp,%rbp
    72c1:	48 83 ec 50          	sub    $0x50,%rsp
    72c5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    72c9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    72cd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    72d1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    72d5:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    72d9:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    72e0:	79 37 9e 
    72e3:	48 0f af 45 d0       	imul   -0x30(%rbp),%rax
    72e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    72ec:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    72f3:	00 
    72f4:	48 83 7d d0 20       	cmpq   $0x20,-0x30(%rbp)
    72f9:	0f 86 d8 00 00 00    	jbe    73d7 <XXH3_len_17to128_128b+0x11a>
    72ff:	48 83 7d d0 40       	cmpq   $0x40,-0x30(%rbp)
    7304:	0f 86 8b 00 00 00    	jbe    7395 <XXH3_len_17to128_128b+0xd8>
    730a:	48 83 7d d0 60       	cmpq   $0x60,-0x30(%rbp)
    730f:	76 42                	jbe    7353 <XXH3_len_17to128_128b+0x96>
    7311:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7315:	4c 8d 40 60          	lea    0x60(%rax),%r8
    7319:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    731d:	48 8d 50 c0          	lea    -0x40(%rax),%rdx
    7321:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7325:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7329:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    732d:	48 8d 50 30          	lea    0x30(%rax),%rdx
    7331:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    7335:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    733d:	49 89 f9             	mov    %rdi,%r9
    7340:	48 89 f7             	mov    %rsi,%rdi
    7343:	48 89 c6             	mov    %rax,%rsi
    7346:	e8 90 fe ff ff       	callq  71db <XXH128_mix32B>
    734b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    734f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    7353:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7357:	4c 8d 40 40          	lea    0x40(%rax),%r8
    735b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    735f:	48 8d 50 d0          	lea    -0x30(%rax),%rdx
    7363:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7367:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    736b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    736f:	48 8d 50 20          	lea    0x20(%rax),%rdx
    7373:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    7377:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    737b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    737f:	49 89 f9             	mov    %rdi,%r9
    7382:	48 89 f7             	mov    %rsi,%rdi
    7385:	48 89 c6             	mov    %rax,%rsi
    7388:	e8 4e fe ff ff       	callq  71db <XXH128_mix32B>
    738d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7391:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    7395:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7399:	4c 8d 40 20          	lea    0x20(%rax),%r8
    739d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73a1:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    73a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73a9:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    73ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73b1:	48 8d 50 10          	lea    0x10(%rax),%rdx
    73b5:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    73b9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    73bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73c1:	49 89 f9             	mov    %rdi,%r9
    73c4:	48 89 f7             	mov    %rsi,%rdi
    73c7:	48 89 c6             	mov    %rax,%rsi
    73ca:	e8 0c fe ff ff       	callq  71db <XXH128_mix32B>
    73cf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    73d3:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    73d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73db:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    73df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73e3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    73e7:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    73eb:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    73ef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    73f3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    73f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73fb:	4d 89 c1             	mov    %r8,%r9
    73fe:	49 89 f8             	mov    %rdi,%r8
    7401:	48 89 f7             	mov    %rsi,%rdi
    7404:	48 89 c6             	mov    %rax,%rsi
    7407:	e8 cf fd ff ff       	callq  71db <XXH128_mix32B>
    740c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7410:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    7414:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    741c:	48 01 d0             	add    %rdx,%rax
    741f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7423:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7427:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    742e:	79 37 9e 
    7431:	48 0f af c2          	imul   %rdx,%rax
    7435:	48 89 c1             	mov    %rax,%rcx
    7438:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    743c:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    7443:	ca eb 85 
    7446:	48 0f af c2          	imul   %rdx,%rax
    744a:	48 01 c1             	add    %rax,%rcx
    744d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7451:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
    7455:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    745c:	ae b2 c2 
    745f:	48 0f af c2          	imul   %rdx,%rax
    7463:	48 01 c8             	add    %rcx,%rax
    7466:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    746a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    746e:	48 89 c7             	mov    %rax,%rdi
    7471:	e8 ba d5 ff ff       	callq  4a30 <XXH3_avalanche>
    7476:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    747a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    747e:	48 89 c7             	mov    %rax,%rdi
    7481:	e8 aa d5 ff ff       	callq  4a30 <XXH3_avalanche>
    7486:	48 f7 d8             	neg    %rax
    7489:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    748d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7491:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7495:	c9                   	leaveq 
    7496:	c3                   	retq   

0000000000007497 <XXH3_len_129to240_128b>:
    7497:	55                   	push   %rbp
    7498:	48 89 e5             	mov    %rsp,%rbp
    749b:	48 83 ec 60          	sub    $0x60,%rsp
    749f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    74a3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    74a7:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    74ab:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    74af:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    74b3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    74b7:	8d 50 1f             	lea    0x1f(%rax),%edx
    74ba:	85 c0                	test   %eax,%eax
    74bc:	0f 48 c2             	cmovs  %edx,%eax
    74bf:	c1 f8 05             	sar    $0x5,%eax
    74c2:	89 45 f8             	mov    %eax,-0x8(%rbp)
    74c5:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    74cc:	79 37 9e 
    74cf:	48 0f af 45 c0       	imul   -0x40(%rbp),%rax
    74d4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    74d8:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    74df:	00 
    74e0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    74e7:	eb 5b                	jmp    7544 <XXH3_len_129to240_128b+0xad>
    74e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    74ec:	c1 e0 05             	shl    $0x5,%eax
    74ef:	48 63 d0             	movslq %eax,%rdx
    74f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    74f6:	4c 8d 04 02          	lea    (%rdx,%rax,1),%r8
    74fa:	8b 45 fc             	mov    -0x4(%rbp),%eax
    74fd:	c1 e0 05             	shl    $0x5,%eax
    7500:	48 98                	cltq   
    7502:	48 8d 50 10          	lea    0x10(%rax),%rdx
    7506:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    750a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    750e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7511:	c1 e0 05             	shl    $0x5,%eax
    7514:	48 63 d0             	movslq %eax,%rdx
    7517:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    751b:	48 01 c2             	add    %rax,%rdx
    751e:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    7522:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    7526:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    752a:	49 89 f9             	mov    %rdi,%r9
    752d:	48 89 f7             	mov    %rsi,%rdi
    7530:	48 89 c6             	mov    %rax,%rsi
    7533:	e8 a3 fc ff ff       	callq  71db <XXH128_mix32B>
    7538:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    753c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7540:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    7544:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    7548:	7e 9f                	jle    74e9 <XXH3_len_129to240_128b+0x52>
    754a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    754e:	48 89 c7             	mov    %rax,%rdi
    7551:	e8 da d4 ff ff       	callq  4a30 <XXH3_avalanche>
    7556:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    755a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    755e:	48 89 c7             	mov    %rax,%rdi
    7561:	e8 ca d4 ff ff       	callq  4a30 <XXH3_avalanche>
    7566:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    756a:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
    7571:	eb 61                	jmp    75d4 <XXH3_len_129to240_128b+0x13d>
    7573:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7576:	83 e8 04             	sub    $0x4,%eax
    7579:	c1 e0 05             	shl    $0x5,%eax
    757c:	48 98                	cltq   
    757e:	48 8d 50 03          	lea    0x3(%rax),%rdx
    7582:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7586:	4c 8d 04 02          	lea    (%rdx,%rax,1),%r8
    758a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    758d:	c1 e0 05             	shl    $0x5,%eax
    7590:	48 98                	cltq   
    7592:	48 8d 50 10          	lea    0x10(%rax),%rdx
    7596:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    759a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    759e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    75a1:	c1 e0 05             	shl    $0x5,%eax
    75a4:	48 63 d0             	movslq %eax,%rdx
    75a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    75ab:	48 01 c2             	add    %rax,%rdx
    75ae:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    75b2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    75b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75ba:	49 89 f9             	mov    %rdi,%r9
    75bd:	48 89 f7             	mov    %rsi,%rdi
    75c0:	48 89 c6             	mov    %rax,%rsi
    75c3:	e8 13 fc ff ff       	callq  71db <XXH128_mix32B>
    75c8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    75cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    75d0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    75d4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    75d7:	3b 45 f8             	cmp    -0x8(%rbp),%eax
    75da:	7c 97                	jl     7573 <XXH3_len_129to240_128b+0xdc>
    75dc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    75e0:	48 f7 d8             	neg    %rax
    75e3:	49 89 c0             	mov    %rax,%r8
    75e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    75ea:	48 8d 78 67          	lea    0x67(%rax),%rdi
    75ee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    75f2:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    75f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    75fa:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    75fe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7602:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    7606:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    760a:	48 01 c2             	add    %rax,%rdx
    760d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    7611:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7615:	4d 89 c1             	mov    %r8,%r9
    7618:	49 89 f8             	mov    %rdi,%r8
    761b:	48 89 f7             	mov    %rsi,%rdi
    761e:	48 89 c6             	mov    %rax,%rsi
    7621:	e8 b5 fb ff ff       	callq  71db <XXH128_mix32B>
    7626:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    762a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    762e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7632:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7636:	48 01 d0             	add    %rdx,%rax
    7639:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    763d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7641:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    7648:	79 37 9e 
    764b:	48 0f af c2          	imul   %rdx,%rax
    764f:	48 89 c1             	mov    %rax,%rcx
    7652:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7656:	48 ba 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rdx
    765d:	ca eb 85 
    7660:	48 0f af c2          	imul   %rdx,%rax
    7664:	48 01 c1             	add    %rax,%rcx
    7667:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    766b:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
    766f:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    7676:	ae b2 c2 
    7679:	48 0f af c2          	imul   %rdx,%rax
    767d:	48 01 c8             	add    %rcx,%rax
    7680:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7684:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7688:	48 89 c7             	mov    %rax,%rdi
    768b:	e8 a0 d3 ff ff       	callq  4a30 <XXH3_avalanche>
    7690:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7694:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7698:	48 89 c7             	mov    %rax,%rdi
    769b:	e8 90 d3 ff ff       	callq  4a30 <XXH3_avalanche>
    76a0:	48 f7 d8             	neg    %rax
    76a3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    76a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    76ab:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    76af:	c9                   	leaveq 
    76b0:	c3                   	retq   

00000000000076b1 <XXH3_hashLong_128b_internal>:
    76b1:	55                   	push   %rbp
    76b2:	48 89 e5             	mov    %rsp,%rbp
    76b5:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    76b9:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    76bd:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    76c1:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    76c5:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    76c9:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
    76cd:	4c 89 4d 80          	mov    %r9,-0x80(%rbp)
    76d1:	b8 3d ae b2 c2       	mov    $0xc2b2ae3d,%eax
    76d6:	89 c0                	mov    %eax,%eax
    76d8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    76dc:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    76e3:	79 37 9e 
    76e6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    76ea:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    76f1:	ae b2 c2 
    76f4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    76f8:	48 b8 f9 79 37 9e b1 	movabs $0x165667b19e3779f9,%rax
    76ff:	67 56 16 
    7702:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7706:	48 b8 63 ae b2 c2 77 	movabs $0x85ebca77c2b2ae63,%rax
    770d:	ca eb 85 
    7710:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7714:	b8 77 ca eb 85       	mov    $0x85ebca77,%eax
    7719:	89 c0                	mov    %eax,%eax
    771b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    771f:	48 b8 c5 67 56 16 2f 	movabs $0x27d4eb2f165667c5,%rax
    7726:	eb d4 27 
    7729:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    772d:	b8 b1 79 37 9e       	mov    $0x9e3779b1,%eax
    7732:	89 c0                	mov    %eax,%eax
    7734:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7738:	4c 8b 45 88          	mov    -0x78(%rbp),%r8
    773c:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
    7740:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    7744:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    7748:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    774c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7750:	48 83 ec 08          	sub    $0x8,%rsp
    7754:	ff 75 80             	pushq  -0x80(%rbp)
    7757:	4d 89 c1             	mov    %r8,%r9
    775a:	49 89 f8             	mov    %rdi,%r8
    775d:	48 89 c7             	mov    %rax,%rdi
    7760:	e8 49 e2 ff ff       	callq  59ae <XXH3_hashLong_internal_loop>
    7765:	48 83 c4 10          	add    $0x10,%rsp
    7769:	48 b8 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rax
    7770:	79 37 9e 
    7773:	48 0f af 45 a0       	imul   -0x60(%rbp),%rax
    7778:	48 89 c2             	mov    %rax,%rdx
    777b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    777f:	48 8d 48 0b          	lea    0xb(%rax),%rcx
    7783:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7787:	48 89 ce             	mov    %rcx,%rsi
    778a:	48 89 c7             	mov    %rax,%rdi
    778d:	e8 b8 e3 ff ff       	callq  5b4a <XXH3_mergeAccs>
    7792:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7796:	48 b8 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rax
    779d:	ae b2 c2 
    77a0:	48 0f af 45 a0       	imul   -0x60(%rbp),%rax
    77a5:	48 f7 d0             	not    %rax
    77a8:	48 89 c2             	mov    %rax,%rdx
    77ab:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    77af:	48 8d 48 b5          	lea    -0x4b(%rax),%rcx
    77b3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    77b7:	48 01 c1             	add    %rax,%rcx
    77ba:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    77be:	48 89 ce             	mov    %rcx,%rsi
    77c1:	48 89 c7             	mov    %rax,%rdi
    77c4:	e8 81 e3 ff ff       	callq  5b4a <XXH3_mergeAccs>
    77c9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    77cd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    77d1:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    77d5:	c9                   	leaveq 
    77d6:	c3                   	retq   

00000000000077d7 <XXH3_hashLong_128b_default>:
    77d7:	55                   	push   %rbp
    77d8:	48 89 e5             	mov    %rsp,%rbp
    77db:	48 83 ec 30          	sub    $0x30,%rsp
    77df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    77e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    77eb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    77ef:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    77f3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    77f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77fb:	4c 8d 0d 2b db ff ff 	lea    -0x24d5(%rip),%r9        # 532d <XXH3_scrambleAcc_sse2>
    7802:	4c 8d 05 6c d9 ff ff 	lea    -0x2694(%rip),%r8        # 5175 <XXH3_accumulate_512_sse2>
    7809:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    780e:	48 8d 15 6b 0d 00 00 	lea    0xd6b(%rip),%rdx        # 8580 <XXH3_kSecret>
    7815:	48 89 c7             	mov    %rax,%rdi
    7818:	e8 94 fe ff ff       	callq  76b1 <XXH3_hashLong_128b_internal>
    781d:	c9                   	leaveq 
    781e:	c3                   	retq   

000000000000781f <XXH3_hashLong_128b_withSecret>:
    781f:	55                   	push   %rbp
    7820:	48 89 e5             	mov    %rsp,%rbp
    7823:	48 83 ec 30          	sub    $0x30,%rsp
    7827:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    782b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    782f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7833:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    7837:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    783b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    783f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7843:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    784b:	4c 8d 0d db da ff ff 	lea    -0x2525(%rip),%r9        # 532d <XXH3_scrambleAcc_sse2>
    7852:	4c 8d 05 1c d9 ff ff 	lea    -0x26e4(%rip),%r8        # 5175 <XXH3_accumulate_512_sse2>
    7859:	48 89 c7             	mov    %rax,%rdi
    785c:	e8 50 fe ff ff       	callq  76b1 <XXH3_hashLong_128b_internal>
    7861:	c9                   	leaveq 
    7862:	c3                   	retq   

0000000000007863 <XXH3_hashLong_128b_withSeed_internal>:
    7863:	55                   	push   %rbp
    7864:	48 89 e5             	mov    %rsp,%rbp
    7867:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    786e:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    7875:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    787c:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    7883:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
    788a:	4c 89 85 18 ff ff ff 	mov    %r8,-0xe8(%rbp)
    7891:	4c 89 8d 10 ff ff ff 	mov    %r9,-0xf0(%rbp)
    7898:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
    789f:	00 
    78a0:	75 38                	jne    78da <XXH3_hashLong_128b_withSeed_internal+0x77>
    78a2:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
    78a9:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    78b0:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
    78b7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    78be:	49 89 c9             	mov    %rcx,%r9
    78c1:	49 89 d0             	mov    %rdx,%r8
    78c4:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    78c9:	48 8d 15 b0 0c 00 00 	lea    0xcb0(%rip),%rdx        # 8580 <XXH3_kSecret>
    78d0:	48 89 c7             	mov    %rax,%rdi
    78d3:	e8 d9 fd ff ff       	callq  76b1 <XXH3_hashLong_128b_internal>
    78d8:	eb 53                	jmp    792d <XXH3_hashLong_128b_withSeed_internal+0xca>
    78da:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    78e1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    78e8:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
    78ef:	48 89 d6             	mov    %rdx,%rsi
    78f2:	48 89 c7             	mov    %rax,%rdi
    78f5:	ff d1                	callq  *%rcx
    78f7:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
    78fe:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
    7905:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    790c:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
    7913:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    791a:	49 89 f9             	mov    %rdi,%r9
    791d:	49 89 c8             	mov    %rcx,%r8
    7920:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    7925:	48 89 c7             	mov    %rax,%rdi
    7928:	e8 84 fd ff ff       	callq  76b1 <XXH3_hashLong_128b_internal>
    792d:	c9                   	leaveq 
    792e:	c3                   	retq   

000000000000792f <XXH3_hashLong_128b_withSeed>:
    792f:	55                   	push   %rbp
    7930:	48 89 e5             	mov    %rsp,%rbp
    7933:	48 83 ec 30          	sub    $0x30,%rsp
    7937:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    793b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    793f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7943:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    7947:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    794b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    794f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7957:	4c 8d 0d 4e dc ff ff 	lea    -0x23b2(%rip),%r9        # 55ac <XXH3_initCustomSecret_sse2>
    795e:	4c 8d 05 c8 d9 ff ff 	lea    -0x2638(%rip),%r8        # 532d <XXH3_scrambleAcc_sse2>
    7965:	48 8d 0d 09 d8 ff ff 	lea    -0x27f7(%rip),%rcx        # 5175 <XXH3_accumulate_512_sse2>
    796c:	48 89 c7             	mov    %rax,%rdi
    796f:	e8 ef fe ff ff       	callq  7863 <XXH3_hashLong_128b_withSeed_internal>
    7974:	c9                   	leaveq 
    7975:	c3                   	retq   

0000000000007976 <XXH3_128bits_internal>:
    7976:	55                   	push   %rbp
    7977:	48 89 e5             	mov    %rsp,%rbp
    797a:	48 83 ec 30          	sub    $0x30,%rsp
    797e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7982:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7986:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    798a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    798e:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    7992:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
    7996:	48 83 7d f0 10       	cmpq   $0x10,-0x10(%rbp)
    799b:	77 1a                	ja     79b7 <XXH3_128bits_internal+0x41>
    799d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    79a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    79a5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    79a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ad:	48 89 c7             	mov    %rax,%rdi
    79b0:	e8 17 f7 ff ff       	callq  70cc <XXH3_len_0to16_128b>
    79b5:	eb 77                	jmp    7a2e <XXH3_128bits_internal+0xb8>
    79b7:	48 81 7d f0 80 00 00 	cmpq   $0x80,-0x10(%rbp)
    79be:	00 
    79bf:	77 21                	ja     79e2 <XXH3_128bits_internal+0x6c>
    79c1:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    79c5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    79c9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    79cd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    79d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79d5:	49 89 f8             	mov    %rdi,%r8
    79d8:	48 89 c7             	mov    %rax,%rdi
    79db:	e8 dd f8 ff ff       	callq  72bd <XXH3_len_17to128_128b>
    79e0:	eb 4c                	jmp    7a2e <XXH3_128bits_internal+0xb8>
    79e2:	48 81 7d f0 f0 00 00 	cmpq   $0xf0,-0x10(%rbp)
    79e9:	00 
    79ea:	77 21                	ja     7a0d <XXH3_128bits_internal+0x97>
    79ec:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    79f0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    79f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    79f8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    79fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a00:	49 89 f8             	mov    %rdi,%r8
    7a03:	48 89 c7             	mov    %rax,%rdi
    7a06:	e8 8c fa ff ff       	callq  7497 <XXH3_len_129to240_128b>
    7a0b:	eb 21                	jmp    7a2e <XXH3_128bits_internal+0xb8>
    7a0d:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    7a11:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7a15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7a19:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7a1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a21:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
    7a25:	49 89 f8             	mov    %rdi,%r8
    7a28:	48 89 c7             	mov    %rax,%rdi
    7a2b:	41 ff d1             	callq  *%r9
    7a2e:	c9                   	leaveq 
    7a2f:	c3                   	retq   

0000000000007a30 <XXH3_128bits>:
    7a30:	55                   	push   %rbp
    7a31:	48 89 e5             	mov    %rsp,%rbp
    7a34:	48 83 ec 10          	sub    $0x10,%rsp
    7a38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a40:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a48:	4c 8d 0d 88 fd ff ff 	lea    -0x278(%rip),%r9        # 77d7 <XXH3_hashLong_128b_default>
    7a4f:	41 b8 c0 00 00 00    	mov    $0xc0,%r8d
    7a55:	48 8d 0d 24 0b 00 00 	lea    0xb24(%rip),%rcx        # 8580 <XXH3_kSecret>
    7a5c:	ba 00 00 00 00       	mov    $0x0,%edx
    7a61:	48 89 c7             	mov    %rax,%rdi
    7a64:	e8 0d ff ff ff       	callq  7976 <XXH3_128bits_internal>
    7a69:	c9                   	leaveq 
    7a6a:	c3                   	retq   

0000000000007a6b <XXH3_128bits_withSecret>:
    7a6b:	55                   	push   %rbp
    7a6c:	48 89 e5             	mov    %rsp,%rbp
    7a6f:	48 83 ec 20          	sub    $0x20,%rsp
    7a73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a7b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7a7f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    7a83:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7a87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7a8b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a93:	4c 8d 0d 85 fd ff ff 	lea    -0x27b(%rip),%r9        # 781f <XXH3_hashLong_128b_withSecret>
    7a9a:	49 89 c8             	mov    %rcx,%r8
    7a9d:	48 89 d1             	mov    %rdx,%rcx
    7aa0:	ba 00 00 00 00       	mov    $0x0,%edx
    7aa5:	48 89 c7             	mov    %rax,%rdi
    7aa8:	e8 c9 fe ff ff       	callq  7976 <XXH3_128bits_internal>
    7aad:	c9                   	leaveq 
    7aae:	c3                   	retq   

0000000000007aaf <XXH3_128bits_withSeed>:
    7aaf:	55                   	push   %rbp
    7ab0:	48 89 e5             	mov    %rsp,%rbp
    7ab3:	48 83 ec 20          	sub    $0x20,%rsp
    7ab7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7abb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7abf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7ac3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7ac7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7acf:	4c 8d 0d 59 fe ff ff 	lea    -0x1a7(%rip),%r9        # 792f <XXH3_hashLong_128b_withSeed>
    7ad6:	41 b8 c0 00 00 00    	mov    $0xc0,%r8d
    7adc:	48 8d 0d 9d 0a 00 00 	lea    0xa9d(%rip),%rcx        # 8580 <XXH3_kSecret>
    7ae3:	48 89 c7             	mov    %rax,%rdi
    7ae6:	e8 8b fe ff ff       	callq  7976 <XXH3_128bits_internal>
    7aeb:	c9                   	leaveq 
    7aec:	c3                   	retq   

0000000000007aed <XXH128>:
    7aed:	55                   	push   %rbp
    7aee:	48 89 e5             	mov    %rsp,%rbp
    7af1:	48 83 ec 20          	sub    $0x20,%rsp
    7af5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7af9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7afd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7b01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b05:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7b09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b0d:	48 89 ce             	mov    %rcx,%rsi
    7b10:	48 89 c7             	mov    %rax,%rdi
    7b13:	e8 97 ff ff ff       	callq  7aaf <XXH3_128bits_withSeed>
    7b18:	c9                   	leaveq 
    7b19:	c3                   	retq   

0000000000007b1a <XXH3_128bits_reset>:
    7b1a:	55                   	push   %rbp
    7b1b:	48 89 e5             	mov    %rsp,%rbp
    7b1e:	48 83 ec 10          	sub    $0x10,%rsp
    7b22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b26:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7b2b:	75 07                	jne    7b34 <XXH3_128bits_reset+0x1a>
    7b2d:	b8 01 00 00 00       	mov    $0x1,%eax
    7b32:	eb 22                	jmp    7b56 <XXH3_128bits_reset+0x3c>
    7b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b38:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    7b3d:	48 8d 15 3c 0a 00 00 	lea    0xa3c(%rip),%rdx        # 8580 <XXH3_kSecret>
    7b44:	be 00 00 00 00       	mov    $0x0,%esi
    7b49:	48 89 c7             	mov    %rax,%rdi
    7b4c:	e8 b1 e5 ff ff       	callq  6102 <XXH3_reset_internal>
    7b51:	b8 00 00 00 00       	mov    $0x0,%eax
    7b56:	c9                   	leaveq 
    7b57:	c3                   	retq   

0000000000007b58 <XXH3_128bits_reset_withSecret>:
    7b58:	55                   	push   %rbp
    7b59:	48 89 e5             	mov    %rsp,%rbp
    7b5c:	48 83 ec 20          	sub    $0x20,%rsp
    7b60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7b6c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7b71:	75 07                	jne    7b7a <XXH3_128bits_reset_withSecret+0x22>
    7b73:	b8 01 00 00 00       	mov    $0x1,%eax
    7b78:	eb 3d                	jmp    7bb7 <XXH3_128bits_reset_withSecret+0x5f>
    7b7a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    7b7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b86:	be 00 00 00 00       	mov    $0x0,%esi
    7b8b:	48 89 c7             	mov    %rax,%rdi
    7b8e:	e8 6f e5 ff ff       	callq  6102 <XXH3_reset_internal>
    7b93:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7b98:	75 07                	jne    7ba1 <XXH3_128bits_reset_withSecret+0x49>
    7b9a:	b8 01 00 00 00       	mov    $0x1,%eax
    7b9f:	eb 16                	jmp    7bb7 <XXH3_128bits_reset_withSecret+0x5f>
    7ba1:	48 81 7d e8 87 00 00 	cmpq   $0x87,-0x18(%rbp)
    7ba8:	00 
    7ba9:	77 07                	ja     7bb2 <XXH3_128bits_reset_withSecret+0x5a>
    7bab:	b8 01 00 00 00       	mov    $0x1,%eax
    7bb0:	eb 05                	jmp    7bb7 <XXH3_128bits_reset_withSecret+0x5f>
    7bb2:	b8 00 00 00 00       	mov    $0x0,%eax
    7bb7:	c9                   	leaveq 
    7bb8:	c3                   	retq   

0000000000007bb9 <XXH3_128bits_reset_withSeed>:
    7bb9:	55                   	push   %rbp
    7bba:	48 89 e5             	mov    %rsp,%rbp
    7bbd:	48 83 ec 10          	sub    $0x10,%rsp
    7bc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bc5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7bc9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7bce:	75 07                	jne    7bd7 <XXH3_128bits_reset_withSeed+0x1e>
    7bd0:	b8 01 00 00 00       	mov    $0x1,%eax
    7bd5:	eb 5c                	jmp    7c33 <XXH3_128bits_reset_withSeed+0x7a>
    7bd7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7bdc:	75 0e                	jne    7bec <XXH3_128bits_reset_withSeed+0x33>
    7bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7be2:	48 89 c7             	mov    %rax,%rdi
    7be5:	e8 30 ff ff ff       	callq  7b1a <XXH3_128bits_reset>
    7bea:	eb 47                	jmp    7c33 <XXH3_128bits_reset_withSeed+0x7a>
    7bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bf0:	48 8b 80 28 02 00 00 	mov    0x228(%rax),%rax
    7bf7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    7bfb:	74 17                	je     7c14 <XXH3_128bits_reset_withSeed+0x5b>
    7bfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c01:	48 8d 50 40          	lea    0x40(%rax),%rdx
    7c05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7c09:	48 89 c6             	mov    %rax,%rsi
    7c0c:	48 89 d7             	mov    %rdx,%rdi
    7c0f:	e8 98 d9 ff ff       	callq  55ac <XXH3_initCustomSecret_sse2>
    7c14:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c1c:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    7c21:	ba 00 00 00 00       	mov    $0x0,%edx
    7c26:	48 89 c7             	mov    %rax,%rdi
    7c29:	e8 d4 e4 ff ff       	callq  6102 <XXH3_reset_internal>
    7c2e:	b8 00 00 00 00       	mov    $0x0,%eax
    7c33:	c9                   	leaveq 
    7c34:	c3                   	retq   

0000000000007c35 <XXH3_128bits_update>:
    7c35:	55                   	push   %rbp
    7c36:	48 89 e5             	mov    %rsp,%rbp
    7c39:	48 83 ec 20          	sub    $0x20,%rsp
    7c3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c41:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c45:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7c49:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7c4d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7c51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c55:	4c 8d 05 d1 d6 ff ff 	lea    -0x292f(%rip),%r8        # 532d <XXH3_scrambleAcc_sse2>
    7c5c:	48 8d 0d 12 d5 ff ff 	lea    -0x2aee(%rip),%rcx        # 5175 <XXH3_accumulate_512_sse2>
    7c63:	48 89 c7             	mov    %rax,%rdi
    7c66:	e8 0b e8 ff ff       	callq  6476 <XXH3_update>
    7c6b:	c9                   	leaveq 
    7c6c:	c3                   	retq   

0000000000007c6d <XXH3_128bits_digest>:
    7c6d:	55                   	push   %rbp
    7c6e:	48 89 e5             	mov    %rsp,%rbp
    7c71:	48 83 ec 70          	sub    $0x70,%rsp
    7c75:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    7c79:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7c7d:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
    7c84:	48 85 c0             	test   %rax,%rax
    7c87:	75 0a                	jne    7c93 <XXH3_128bits_digest+0x26>
    7c89:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7c8d:	48 83 c0 40          	add    $0x40,%rax
    7c91:	eb 0b                	jmp    7c9e <XXH3_128bits_digest+0x31>
    7c93:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7c97:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
    7c9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7ca2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7ca6:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    7cad:	48 3d f0 00 00 00    	cmp    $0xf0,%rax
    7cb3:	0f 86 9d 00 00 00    	jbe    7d56 <XXH3_128bits_digest+0xe9>
    7cb9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7cbd:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    7cc1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7cc5:	48 89 ce             	mov    %rcx,%rsi
    7cc8:	48 89 c7             	mov    %rax,%rdi
    7ccb:	e8 77 ea ff ff       	callq  6747 <XXH3_digest_long>
    7cd0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7cd4:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    7cdb:	48 ba 87 ca eb 85 b1 	movabs $0x9e3779b185ebca87,%rdx
    7ce2:	79 37 9e 
    7ce5:	48 0f af d0          	imul   %rax,%rdx
    7ce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ced:	48 8d 48 0b          	lea    0xb(%rax),%rcx
    7cf1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7cf5:	48 89 ce             	mov    %rcx,%rsi
    7cf8:	48 89 c7             	mov    %rax,%rdi
    7cfb:	e8 4a de ff ff       	callq  5b4a <XXH3_mergeAccs>
    7d00:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7d04:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7d08:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    7d0f:	48 ba 4f eb d4 27 3d 	movabs $0xc2b2ae3d27d4eb4f,%rdx
    7d16:	ae b2 c2 
    7d19:	48 0f af c2          	imul   %rdx,%rax
    7d1d:	48 f7 d0             	not    %rax
    7d20:	48 89 c2             	mov    %rax,%rdx
    7d23:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7d27:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
    7d2e:	48 8d 48 f5          	lea    -0xb(%rax),%rcx
    7d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d36:	48 01 c1             	add    %rax,%rcx
    7d39:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7d3d:	48 89 ce             	mov    %rcx,%rsi
    7d40:	48 89 c7             	mov    %rax,%rdi
    7d43:	e8 02 de ff ff       	callq  5b4a <XXH3_mergeAccs>
    7d48:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7d4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7d50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7d54:	eb 6f                	jmp    7dc5 <XXH3_128bits_digest+0x158>
    7d56:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7d5a:	48 8b 80 28 02 00 00 	mov    0x228(%rax),%rax
    7d61:	48 85 c0             	test   %rax,%rax
    7d64:	74 2e                	je     7d94 <XXH3_128bits_digest+0x127>
    7d66:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7d6a:	48 8b 90 28 02 00 00 	mov    0x228(%rax),%rdx
    7d71:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7d75:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    7d7c:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    7d80:	48 81 c1 00 01 00 00 	add    $0x100,%rcx
    7d87:	48 89 c6             	mov    %rax,%rsi
    7d8a:	48 89 cf             	mov    %rcx,%rdi
    7d8d:	e8 1d fd ff ff       	callq  7aaf <XXH3_128bits_withSeed>
    7d92:	eb 31                	jmp    7dc5 <XXH3_128bits_digest+0x158>
    7d94:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7d98:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
    7d9f:	48 8d 48 40          	lea    0x40(%rax),%rcx
    7da3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7da7:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    7dae:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    7db2:	48 8d ba 00 01 00 00 	lea    0x100(%rdx),%rdi
    7db9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7dbd:	48 89 c6             	mov    %rax,%rsi
    7dc0:	e8 a6 fc ff ff       	callq  7a6b <XXH3_128bits_withSecret>
    7dc5:	c9                   	leaveq 
    7dc6:	c3                   	retq   

0000000000007dc7 <XXH128_isEqual>:
    7dc7:	55                   	push   %rbp
    7dc8:	48 89 e5             	mov    %rsp,%rbp
    7dcb:	48 83 ec 20          	sub    $0x20,%rsp
    7dcf:	48 89 f0             	mov    %rsi,%rax
    7dd2:	49 89 f8             	mov    %rdi,%r8
    7dd5:	4c 89 c6             	mov    %r8,%rsi
    7dd8:	4c 89 cf             	mov    %r9,%rdi
    7ddb:	48 89 c7             	mov    %rax,%rdi
    7dde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7de6:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    7dea:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    7dee:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    7df2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    7df6:	ba 10 00 00 00       	mov    $0x10,%edx
    7dfb:	48 89 ce             	mov    %rcx,%rsi
    7dfe:	48 89 c7             	mov    %rax,%rdi
    7e01:	e8 6a 93 ff ff       	callq  1170 <memcmp@plt>
    7e06:	85 c0                	test   %eax,%eax
    7e08:	0f 94 c0             	sete   %al
    7e0b:	0f b6 c0             	movzbl %al,%eax
    7e0e:	c9                   	leaveq 
    7e0f:	c3                   	retq   

0000000000007e10 <XXH128_cmp>:
    7e10:	55                   	push   %rbp
    7e11:	48 89 e5             	mov    %rsp,%rbp
    7e14:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7e18:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7e1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e20:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7e24:	48 8b 00             	mov    (%rax),%rax
    7e27:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7e2b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7e2f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7e33:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7e37:	48 8b 00             	mov    (%rax),%rax
    7e3a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7e3e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7e42:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e4a:	48 39 c2             	cmp    %rax,%rdx
    7e4d:	0f 97 c0             	seta   %al
    7e50:	0f b6 c0             	movzbl %al,%eax
    7e53:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7e57:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e5b:	48 39 d1             	cmp    %rdx,%rcx
    7e5e:	0f 97 c2             	seta   %dl
    7e61:	0f b6 d2             	movzbl %dl,%edx
    7e64:	29 d0                	sub    %edx,%eax
    7e66:	89 45 fc             	mov    %eax,-0x4(%rbp)
    7e69:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    7e6d:	74 05                	je     7e74 <XXH128_cmp+0x64>
    7e6f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7e72:	eb 24                	jmp    7e98 <XXH128_cmp+0x88>
    7e74:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7e78:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7e7c:	48 39 c2             	cmp    %rax,%rdx
    7e7f:	0f 97 c0             	seta   %al
    7e82:	0f b6 c0             	movzbl %al,%eax
    7e85:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    7e89:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7e8d:	48 39 d1             	cmp    %rdx,%rcx
    7e90:	0f 97 c2             	seta   %dl
    7e93:	0f b6 d2             	movzbl %dl,%edx
    7e96:	29 d0                	sub    %edx,%eax
    7e98:	5d                   	pop    %rbp
    7e99:	c3                   	retq   

0000000000007e9a <XXH128_canonicalFromHash>:
    7e9a:	55                   	push   %rbp
    7e9b:	48 89 e5             	mov    %rsp,%rbp
    7e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ea2:	48 89 d1             	mov    %rdx,%rcx
    7ea5:	48 89 f0             	mov    %rsi,%rax
    7ea8:	48 89 fa             	mov    %rdi,%rdx
    7eab:	48 89 ca             	mov    %rcx,%rdx
    7eae:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7eb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7eb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7eba:	48 0f c8             	bswap  %rax
    7ebd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7ec1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ec5:	48 0f c8             	bswap  %rax
    7ec8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7ecc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7ed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ed4:	48 89 10             	mov    %rdx,(%rax)
    7ed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7edb:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7edf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ee3:	48 89 02             	mov    %rax,(%rdx)
    7ee6:	90                   	nop
    7ee7:	5d                   	pop    %rbp
    7ee8:	c3                   	retq   

0000000000007ee9 <XXH128_hashFromCanonical>:
    7ee9:	55                   	push   %rbp
    7eea:	48 89 e5             	mov    %rsp,%rbp
    7eed:	48 83 ec 18          	sub    $0x18,%rsp
    7ef1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7ef5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ef9:	48 89 c7             	mov    %rax,%rdi
    7efc:	e8 c7 b0 ff ff       	callq  2fc8 <XXH_readBE64>
    7f01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7f05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f09:	48 83 c0 08          	add    $0x8,%rax
    7f0d:	48 89 c7             	mov    %rax,%rdi
    7f10:	e8 b3 b0 ff ff       	callq  2fc8 <XXH_readBE64>
    7f15:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7f19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7f1d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7f21:	c9                   	leaveq 
    7f22:	c3                   	retq   
    7f23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f2a:	00 00 00 
    7f2d:	0f 1f 00             	nopl   (%rax)

0000000000007f30 <__libc_csu_init>:
    7f30:	41 57                	push   %r15
    7f32:	4c 8d 3d 9f 2e 00 00 	lea    0x2e9f(%rip),%r15        # add8 <__frame_dummy_init_array_entry>
    7f39:	41 56                	push   %r14
    7f3b:	49 89 d6             	mov    %rdx,%r14
    7f3e:	41 55                	push   %r13
    7f40:	49 89 f5             	mov    %rsi,%r13
    7f43:	41 54                	push   %r12
    7f45:	41 89 fc             	mov    %edi,%r12d
    7f48:	55                   	push   %rbp
    7f49:	48 8d 2d 90 2e 00 00 	lea    0x2e90(%rip),%rbp        # ade0 <__do_global_dtors_aux_fini_array_entry>
    7f50:	53                   	push   %rbx
    7f51:	4c 29 fd             	sub    %r15,%rbp
    7f54:	48 83 ec 08          	sub    $0x8,%rsp
    7f58:	e8 a3 90 ff ff       	callq  1000 <_init>
    7f5d:	48 c1 fd 03          	sar    $0x3,%rbp
    7f61:	74 1b                	je     7f7e <__libc_csu_init+0x4e>
    7f63:	31 db                	xor    %ebx,%ebx
    7f65:	0f 1f 00             	nopl   (%rax)
    7f68:	4c 89 f2             	mov    %r14,%rdx
    7f6b:	4c 89 ee             	mov    %r13,%rsi
    7f6e:	44 89 e7             	mov    %r12d,%edi
    7f71:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    7f75:	48 83 c3 01          	add    $0x1,%rbx
    7f79:	48 39 dd             	cmp    %rbx,%rbp
    7f7c:	75 ea                	jne    7f68 <__libc_csu_init+0x38>
    7f7e:	48 83 c4 08          	add    $0x8,%rsp
    7f82:	5b                   	pop    %rbx
    7f83:	5d                   	pop    %rbp
    7f84:	41 5c                	pop    %r12
    7f86:	41 5d                	pop    %r13
    7f88:	41 5e                	pop    %r14
    7f8a:	41 5f                	pop    %r15
    7f8c:	c3                   	retq   
    7f8d:	0f 1f 00             	nopl   (%rax)

0000000000007f90 <__libc_csu_fini>:
    7f90:	c3                   	retq   
    7f91:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f98:	00 00 00 
    7f9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007fa0 <__fstat>:
    7fa0:	48 89 f2             	mov    %rsi,%rdx
    7fa3:	89 fe                	mov    %edi,%esi
    7fa5:	bf 01 00 00 00       	mov    $0x1,%edi
    7faa:	e9 11 92 ff ff       	jmpq   11c0 <__fxstat@plt>

Disassembly of section .fini:

0000000000007fb0 <_fini>:
    7fb0:	48 83 ec 08          	sub    $0x8,%rsp
    7fb4:	48 83 c4 08          	add    $0x8,%rsp
    7fb8:	c3                   	retq   
